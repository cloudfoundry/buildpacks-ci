#!/usr/bin/env ruby
# encoding: utf-8

require_relative 'common'

$stdout.sync = true

require 'yaml'
require 'fileutils'
require 'digest/sha1'

version = ''

Dir.chdir('cf-release') do
  blob_store_private_yml = {
    'blobstore' => {
      's3' => {
        'access_key_id' => ENV['ACCESS_KEY_ID'],
        'secret_access_key' => ENV['SECRET_ACCESS_KEY']
      }
    }
  }.to_yaml

  File.write('config/private.yml', blob_store_private_yml)

  def buildpack_destination_dir(buildpack)
    buildpack = 'java' if buildpack =~ /offline/
    "#{buildpack}-buildpack"
  end

  buildpack = ENV['BUILDPACK']
  buildpack_blob = Dir["../#{buildpack}-buildpack-github-release/*.zip"].first
  matches = /v([\d\.]+)\.zip/.match(buildpack_blob)
  version = matches[1] if matches.size > 1
  puts "Version for #{buildpack} is #{version}"

  destination_dir = buildpack_destination_dir(buildpack)
  system "rm -f blobs/#{destination_dir}"
  blobs = YAML.load(File.read('config/blobs.yml'))

  old_buildpack_key = find_buildpack_key blobs, buildpack

  next unless old_buildpack_key
  new_sha = Digest::SHA1.file(buildpack_blob).hexdigest

  next unless new_sha != blobs[old_buildpack_key]['sha']
  blobs.delete(old_buildpack_key)
  File.write('config/blobs.yml', YAML.dump(blobs))
  exit 1 unless system "bosh add blob #{buildpack_blob} #{destination_dir}"
end

exit system(<<-EOF)
  #!/usr/bin/env bash

  set -ex

  cd cf-release
    bosh -n upload blobs
    /usr/bin/env bash ./scripts/setup-git-hooks

    ref=$(cd ../buildpack-releases && git rev-parse HEAD)

    cd src/buildpacks
      git fetch
      git checkout $ref
    cd ../..

    git add -A
    git commit -am "Update $BUILDPACK-buildpack to v#{version}"
  cd ..

  rsync -a cf-release/ cf-release-artifacts
EOF
