#!/usr/bin/env bash
## Based on https://github.com/concourse/docker-image-resource/blob/master/assets/common.sh
## Simplified for cgroup v2 environments

set -o errexit
set -o nounset
set -o pipefail

LOG_FILE=${LOG_FILE:-/tmp/docker.log}
SKIP_PRIVILEGED=${SKIP_PRIVILEGED:-false}

function util::docker::start() {
  echo "starting docker..."
  if docker info >/dev/null 2>&1; then
    echo 'docker is already started'
    exit 0
  fi

  if [ ! -e /sys/fs/cgroup/cgroup.controllers ]; then
    echo "ERROR: cgroup v1 detected but no longer supported"
    echo "This infrastructure requires cgroup v2 (Ubuntu 22.04+/Kubernetes 1.25+)"
    exit 1
  fi

  mkdir -p /var/log
  mkdir -p /var/run

  if [ "$SKIP_PRIVILEGED" = "false" ]; then
    if grep '/proc/sys\s\+\w\+\s\+ro,' /proc/mounts >/dev/null; then
      mount -o remount,rw /proc/sys
    fi
  fi

  # shellcheck disable=SC2046,SC2155
  local server_args="--mtu 1200"

  mkdir -p /scratch/docker

  # shellcheck disable=SC2086
  dockerd --data-root /scratch/docker ${server_args} >$LOG_FILE 2>&1 &
  # shellcheck disable=SC2086
  echo $! > /tmp/docker.pid

  sleep 1

  until docker info >/dev/null 2>&1; do
    echo waiting for docker to come up...
    sleep 1
  done
}

function util::docker::stop() {
  echo "stopping docker..."
  kill "$(cat /tmp/docker.pid)" 2>/dev/null || true
}
