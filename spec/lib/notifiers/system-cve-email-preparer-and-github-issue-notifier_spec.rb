# encoding: utf-8
require 'spec_helper'
require_relative '../../../lib/notifiers/system-cve-email-preparer-and-github-issue-notifier'

describe SystemCVEEmailPreparerAndGithubIssueNotifier do
  let(:first_cve) do
    {
      title: 'USN-2875-1: libxml2 vulnerabilities',
      description: 'CVE Description 1',
      raw_description: '<p>CVE Description 1</p>'
    }
  end
  let(:second_cve) do
    {
      title: 'USN-2874-1: Bind vulnerability',
      description: 'CVE Description 2',
      raw_description: '<p>CVE Description 2</p>'
    }
  end
  let(:cves) { [first_cve, second_cve] }
  let(:write_directory) { './output_directory' }
  let(:related_to_stacks) { true }

  let(:pcf_first_issue_response) { { html_url: 'https://github.com/pivotal-cf/pcf-security-notices/issues/999999' } }
  let(:pcf_second_issue_response) { { html_url: 'https://github.com/pivotal-cf/pcf-security-notices/issues/777777' } }
  let(:cloudfoundry_first_issue_response) { { html_url: 'https://github.com/cloudfoundry/security-notices/issues/111111' } }
  let(:cloudfoundry_second_issue_response) { { html_url: 'https://github.com/cloudfoundry/security-notices/issues/333333' } }

  before do
    allow(ENV).to receive(:[]).with('EMAIL_PREPARER_DIR').and_return(write_directory)
    allow(Octokit).to receive(:auto_paginate=)
    allow(Octokit).to receive(:configure)
    allow(Octokit).to receive(:create_issue)
    allow(Octokit).to receive(:create_issue).with('pivotal-cf/pcf-security-notices',
                                                  first_cve[:title],
                                                  "```\n#{first_cve[:description]}\n```",
                                                  labels: kind_of(Array)).and_return(pcf_first_issue_response)
    allow(Octokit).to receive(:create_issue).with('pivotal-cf/pcf-security-notices',
                                                  second_cve[:title],
                                                  "```\nCVE Description 2\n```",
                                                  labels: kind_of(Array)).and_return(pcf_second_issue_response)
    allow(Octokit).to receive(:create_issue).with('cloudfoundry/security-notices',
                                                  first_cve[:title],
                                                  "```\n#{first_cve[:description]}\n```",
                                                  labels: kind_of(Array)).and_return(cloudfoundry_first_issue_response)
    allow(Octokit).to receive(:create_issue).with('cloudfoundry/security-notices',
                                                  second_cve[:title],
                                                  "```\n#{second_cve[:description]}\n```",
                                                  labels: kind_of(Array)).and_return(cloudfoundry_second_issue_response)
  end

  after { FileUtils.rm_rf(write_directory) }

  subject { described_class.notify! cves, related_to_stacks }

  describe '#notify!' do
    shared_examples_for 'creates the appropriate empty body file' do
      it 'creates an empty body file' do
        subject
        body_filename = 'body-stacks-' + (related_to_stacks ? 'related' : 'unrelated')
        body_file_path = File.join(write_directory, body_filename)
        body_file_contents = File.read(body_file_path)
        expect(File).to exist(body_file_path)
        expect(body_file_contents).to eq('')
      end
    end

    context 'has no cves' do
      let(:cves) { [] }

      context 'that are related to stacks' do
        let(:related_to_stacks) { true }

        it_behaves_like 'creates the appropriate empty body file'
      end

      context 'that are unrelated to stacks' do
        let(:related_to_stacks) { false }

        it_behaves_like 'creates the appropriate empty body file'
      end

      it 'does not post a github issue' do
        expect(Octokit).to_not receive(:create_issue)
        subject
      end
    end

    context 'has cves' do
      shared_examples_for 'prepares email headers and subject' do
        it 'prepares the headers of an email with multiple cves' do
          subject
          headers_filename = 'headers-stacks-' + (related_to_stacks ? 'related' : 'unrelated')
          headers_content = File.read(File.join(write_directory, headers_filename))
          expect(headers_content).to eq(<<~BODY)
            MIME-version: 1.0
            Content-Type: text/html; charset="UTF-8"
          BODY
        end

        it 'prepares the subject of an email with multiple cves' do
          subject
          subject_filename = 'subject-stacks-' + (related_to_stacks ? 'related' : 'unrelated')
          subject_content = File.read(File.join(write_directory, subject_filename))
          expect(subject_content).to eq('New CVEs: USN-2875-1: libxml2 vulnerabilities, USN-2874-1: Bind vulnerability')
        end
      end

      context 'that are related to stacks' do
        let(:related_to_stacks) { true }

        it_behaves_like 'prepares email headers and subject'

        it 'prepares the body of an email with multiple cves and their newly created github issues' do
          subject

          body_content = File.read(File.join(write_directory, 'body-stacks-related'))
          expect(body_content).to eq(<<~BODY)
            <h1>USN-2875-1: libxml2 vulnerabilities</h1>
            <h2><b>Present</b> in rootfs</h2>
            <a href='https://github.com/pivotal-cf/pcf-security-notices/issues/999999'>https://github.com/pivotal-cf/pcf-security-notices/issues/999999</a>
            <a href='https://github.com/cloudfoundry/security-notices/issues/111111'>https://github.com/cloudfoundry/security-notices/issues/111111</a>

            <p>CVE Description 1</p>
            <h1>USN-2874-1: Bind vulnerability</h1>
            <h2><b>Present</b> in rootfs</h2>
            <a href='https://github.com/pivotal-cf/pcf-security-notices/issues/777777'>https://github.com/pivotal-cf/pcf-security-notices/issues/777777</a>
            <a href='https://github.com/cloudfoundry/security-notices/issues/333333'>https://github.com/cloudfoundry/security-notices/issues/333333</a>

            <p>CVE Description 2</p>
          BODY
        end

        it 'posts github issues to the correct repos' do
          expect(Octokit).to receive(:create_issue)
            .with('pivotal-cf/pcf-security-notices',
                  'USN-2875-1: libxml2 vulnerabilities',
                  "```\nCVE Description 1\n```",
                 labels: [])
          expect(Octokit).to receive(:create_issue)
            .with('pivotal-cf/pcf-security-notices',
                  'USN-2874-1: Bind vulnerability',
                  "```\nCVE Description 2\n```",
                 labels: [])
          expect(Octokit).to receive(:create_issue)
             .with('cloudfoundry/security-notices',
                   'USN-2875-1: libxml2 vulnerabilities',
                   "```\nCVE Description 1\n```",
                   labels: [])
          expect(Octokit).to receive(:create_issue)
             .with('cloudfoundry/security-notices',
                   'USN-2874-1: Bind vulnerability',
                   "```\nCVE Description 2\n```",
                   labels: [])
          subject
        end
      end

      context 'that are unrelated to stacks' do
        let(:related_to_stacks) { false }

        it_behaves_like 'prepares email headers and subject'

        it 'prepares the body of an email with multiple cves' do
          subject

          body_content = File.read(File.join(write_directory, 'body-stacks-unrelated'))
          expect(body_content).to eq(<<~BODY)
            <h1>USN-2875-1: libxml2 vulnerabilities</h1>
            <h2><b>Not present</b> in rootfs</h2>
            <a href='https://github.com/pivotal-cf/pcf-security-notices/issues/999999'>https://github.com/pivotal-cf/pcf-security-notices/issues/999999</a>
            <a href='https://github.com/cloudfoundry/security-notices/issues/111111'>https://github.com/cloudfoundry/security-notices/issues/111111</a>

            <p>CVE Description 1</p>
            <h1>USN-2874-1: Bind vulnerability</h1>
            <h2><b>Not present</b> in rootfs</h2>
            <a href='https://github.com/pivotal-cf/pcf-security-notices/issues/777777'>https://github.com/pivotal-cf/pcf-security-notices/issues/777777</a>
            <a href='https://github.com/cloudfoundry/security-notices/issues/333333'>https://github.com/cloudfoundry/security-notices/issues/333333</a>

            <p>CVE Description 2</p>
          BODY
        end

        it 'posts github issues with label `not-in-rootfs` to the correct repos' do
          expect(Octokit).to receive(:create_issue)
            .with('pivotal-cf/pcf-security-notices',
                  'USN-2875-1: libxml2 vulnerabilities',
                  "```\nCVE Description 1\n```",
                 labels: ['not-in-rootfs'])
          expect(Octokit).to receive(:create_issue)
            .with('pivotal-cf/pcf-security-notices',
                  'USN-2874-1: Bind vulnerability',
                  "```\nCVE Description 2\n```",
                 labels: ['not-in-rootfs'])
          expect(Octokit).to receive(:create_issue)
             .with('cloudfoundry/security-notices',
                   'USN-2875-1: libxml2 vulnerabilities',
                   "```\nCVE Description 1\n```",
                   labels: ['not-in-rootfs'])
          expect(Octokit).to receive(:create_issue)
             .with('cloudfoundry/security-notices',
                   'USN-2874-1: Bind vulnerability',
                   "```\nCVE Description 2\n```",
                   labels: ['not-in-rootfs'])

          subject
        end
      end
    end
  end
end
