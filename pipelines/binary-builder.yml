resources:
  - name: binary-builder
    type: git
    source:
      uri: https://github.com/cloudfoundry/binary-builder.git
  - name: buildpacks-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/buildpacks-ci
  - name: builds-out
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
  - name: nginx-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ nginx-builds.yml ]
  - name: php-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ php-builds.yml ]
  - name: php7-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ php7-builds.yml ]
  - name: node-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ node-builds.yml ]
  - name: ruby-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ ruby-builds.yml ]
  - name: jruby-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ jruby-builds.yml ]
  - name: httpd-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ httpd-builds.yml ]
  - name: python-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ python-builds.yml ]
  - name: bundler-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ bundler-builds.yml ]
  - name: build-tar
    type: s3
    source:
      bucket: pivotal-buildpacks
      versioned_file: /concourse-artifacts/binary-builder-source.tgz
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}
  - name: godep-builds
    type: git
    source:
      branch: binary-builds
      private_key: {{buildpacks-ci-binary-builds-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
      paths: [ godep-builds.yml ]
  - name: concourse2tracker
    type: concourse2tracker
  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}
  - name: go-buildpack
    type: git
    source:
      uri: git@github.com:cloudfoundry/go-buildpack.git
      private_key: {{go-buildpack-private-key}}
      branch: develop
      ignore_paths:
        - VERSION
        - CHANGELOG
  - name: cf-edge-dea-environments
    type: pool
    source:
      branch: resource-pools
      pool: cf-edge-dea-environments
      private_key: {{resource-pools-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
  - name: cf-edge-diego-environments
    type: pool
    source:
      branch: resource-pools
      pool: cf-edge-diego-environments
      private_key: {{resource-pools-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
  - name: cf-lts-environments
    type: pool
    source:
      branch: resource-pools
      pool: cf-lts-environments
      private_key: {{resource-pools-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git

jobs:
  - name: binary-builder
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: binary-builder
          trigger: true
      - do:
        - aggregate:
          - task: rspec-1
            file: buildpacks-ci/tasks/binary-builder.yml
            params: { TOTAL_GROUPS: 4, CURRENT_GROUP: 1 }
            privileged: true
          - task: rspec-2
            file: buildpacks-ci/tasks/binary-builder.yml
            params: { TOTAL_GROUPS: 4, CURRENT_GROUP: 2 }
            privileged: true
          - task: rspec-3
            file: buildpacks-ci/tasks/binary-builder.yml
            params: { TOTAL_GROUPS: 4, CURRENT_GROUP: 3 }
            privileged: true
          - task: rspec-4
            file: buildpacks-ci/tasks/binary-builder.yml
            params: { TOTAL_GROUPS: 4, CURRENT_GROUP: 4 }
            privileged: true
        on_failure:
          put: failure-alert
          params:
            text: "binary-builder binary-builder job on Concourse failed! \n Check: https://buildpacks.ci.cf-app.com/pipelines/binary-builder/jobs/binary-builder"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% %w(php php7 ruby jruby bundler nginx node python godep httpd).each do |runtime| %>
  - name: build-<%= runtime %>
    serial: true
    plan:
      - aggregate:
        - get: builds-yaml
          resource: <%= runtime %>-builds
          trigger: true
        - get: binary-builder
          passed: [binary-builder]
        - get: buildpacks-ci
      - do:
        - task: build-binary
          file: buildpacks-ci/tasks/build-binary.yml
          params:
            BINARY_NAME: <%= runtime %>
          privileged: true
        - put: build-tar
          params:
            from: binary-builder-artifacts/build.tgz
        - task: push-binary
          file: buildpacks-ci/tasks/push-binary.yml
          params:
            BINARY_NAME: <%= runtime %>
            AWS_ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            AWS_SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            AWS_DEFAULT_REGION: us-east-1
          privileged: true
        - put: builds-out
          params:
            repository: builds-yaml-artifacts
            rebase: true
        - put: concourse2tracker
          params:
            api_token: {{pivotal-tracker-api-token}}
            git_path: builds-yaml
            project_id: {{cf-buildpacks-public-tracker-id}}
        on_failure:
          put: failure-alert
          params:
            text: "binary-builder build-<%= runtime %> job on Concourse failed! \n Check: https://buildpacks.ci.cf-app.com/pipelines/binary-builder/jobs/build-<%= runtime %>"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
  - name: test-php
    serial: true
    plan:
      - get: build-tar
        passed: [ build-php ]
        trigger: true
      - task: run tests
        config:
          image: docker:///cloudfoundry/cflinuxfs2
          inputs:
            - name: build-tar
          platform: linux
          run:
            path: bash
            args:
              - "-c"
              - |
                apt-get update
                apt-get install -y automake \
                libaspell-dev \
                libc-client2007e-dev \
                libcurl4-openssl-dev \
                libexpat1-dev \
                libgdbm-dev \
                libgmp-dev \
                libjpeg-dev \
                libldap2-dev \
                libmcrypt-dev \
                libmemcached-dev \
                libpng12-dev \
                libpspell-dev \
                libreadline-dev \
                libsasl2-dev \
                libsnmp-dev \
                libsqlite3-dev \
                libssl-dev \
                libzip-dev \
                libzookeeper-mt-dev \
                mercurial \
                snmp-mibs-downloader
                tar xzf build-tar/binary-builder-source.tgz -C /tmp
                cd /tmp/x86_64-linux-gnu/ports/php/*/*/
                yes n | env REPORT_EXIT_STATUS=1 make test
  - name: test-jruby
    serial: true
    plan:
      - get: build-tar
        passed: [ build-jruby ]
        trigger: true
      - task: run tests
        config:
          image: docker:///cloudfoundry/cflinuxfs2
          inputs:
            - name: build-tar
          platform: linux
          run:
            path: bash
            args: ["-c",
              "apt-get update &&
              apt-get install -y openjdk-7-jdk maven ant &&
              tar xzf build-tar/binary-builder-source.tgz -C /tmp &&
              cd /tmp/x86_64-linux-gnu/ports/jruby/*/*/ &&
              export JAVA_OPTS='-XX:+TieredCompilation -XX:TieredStopAtLevel=1' &&
              export MALLOC_ARENA_MAX=2 &&
              export PHASE='-Ptest' &&
              mvn -Pbootstrap clean install -Dinvoker.skip -Dmaven.test.skip &&
              mvn install -Dinvoker.skip=false $PHASE"]
  - name: test-python
    serial: true
    plan:
      - get: build-tar
        passed: [ build-python ]
        trigger: true
      - task: run tests
        config:
          image: docker:///cloudfoundry/cflinuxfs2
          inputs:
            - name: build-tar
          platform: linux
          run:
            path: bash
            args: ["-c", "tar xzf build-tar/binary-builder-source.tgz -C /tmp &&
              cd /tmp/x86_64-linux-gnu/ports/python/*/*/ && make test"]
  - name: test-ruby
    serial: true
    plan:
      - get: build-tar
        passed: [ build-ruby ]
        trigger: true
      - task: run tests
        config:
          image: docker:///cloudfoundry/cflinuxfs2
          inputs:
            - name: build-tar
          platform: linux
          run:
            path: bash
            args: ["-c", "tar xzf build-tar/binary-builder-source.tgz -C /tmp &&
              cd /tmp/x86_64-linux-gnu/ports/ruby/*/*/ && make test"]
  - name: test-node
    serial: true
    plan:
      - get: build-tar
        passed: [ build-node ]
        trigger: true
      - task: run tests
        config:
          image: docker:///cloudfoundry/cflinuxfs2
          inputs:
            - name: build-tar
          platform: linux
          run:
            path: bash
            args: ["-c", "tar xzf build-tar/binary-builder-source.tgz -C /tmp &&
              cd /tmp/x86_64-linux-gnu/ports/node/*/*/ && make test"]
  - name: test-nginx
    serial: true
    plan:
      - get: build-tar
        passed: [ build-nginx ]
        trigger: true
      - task: run tests
        config:
          image: docker:///cloudfoundry/cflinuxfs2
          inputs:
            - name: build-tar
          platform: linux
          run:
            path: bash
            args: ["-c",
              "wget http://hg.nginx.org/nginx-tests/archive/tip.tar.gz &&
              tar -xzf tip.tar.gz -C /tmp/ &&
              tar xzf build-tar/binary-builder-source.tgz -C /tmp/ &&
              cd /tmp/nginx-tests* &&
              TEST_NGINX_BINARY=`ls /tmp/x86_64-linux-gnu/ports/nginx/*/nginx-*/objs/nginx` prove ."]
  - name: test-php7
    serial: true
    plan:
      - get: build-tar
        passed: [ build-php7 ]
        trigger: true
      - task: run tests
        config:
          image: docker:///cloudfoundry/cflinuxfs2
          inputs:
            - name: build-tar
          platform: linux
          run:
            path: bash
            args:
              - "-c"
              - |
                apt-get update
                apt-get install -y automake \
                libaspell-dev \
                libc-client2007e-dev \
                libcurl4-openssl-dev \
                libexpat1-dev \
                libgdbm-dev \
                libgmp-dev \
                libjpeg-dev \
                libldap2-dev \
                libmcrypt-dev \
                libmemcached-dev \
                libpng12-dev \
                libpspell-dev \
                libreadline-dev \
                libsasl2-dev \
                libsnmp-dev \
                libsqlite3-dev \
                libssl-dev \
                libzip-dev \
                libzookeeper-mt-dev \
                mercurial \
                snmp-mibs-downloader
                tar xzf build-tar/binary-builder-source.tgz -C /tmp
                cd /tmp/x86_64-linux-gnu/ports/php/*/*/
                yes n | env REPORT_EXIT_STATUS=1 make test
  - name: Update Godep in manifest
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: go-buildpack
        - get: builds-out
          passed: [ build-godep ]
          trigger: true
      - task: update-godep-in-manifests
        config:
          platform: linux
          image: docker:///cfbuildpacks/ci
          inputs:
            - name: builds-out
            - name: buildpacks-ci
            - name: go-buildpack
          outputs:
            - name: go-buildpack-artifacts
          run:
            path: bash
            args:
              - -c
              - |
                pushd buildpacks-ci
                  bundle
                  bundle exec scripts/update-dependency-in-buildpack
                popd
                rsync -a go-buildpack/ go-buildpack-artifacts
          params:
            DEPENDENCY: godep

