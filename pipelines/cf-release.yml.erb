<% supported_languages = %w(dotnet-core go ruby binary staticfile nodejs php python java nginx r) %>
<% cutlass = %w(binary dotnet-core go nodejs python ruby staticfile) %>
<% stacks = {
  "binary" => %w(cflinuxfs3 windows2012R2 windows2016 windows),
  "java" => %w(cflinuxfs3),
  "dotnet-core" => %w(cflinuxfs3),
  "go" => %w(cflinuxfs3),
  "nodejs" => %w(cflinuxfs3),
  "php" => %w(cflinuxfs3),
  "python" => %w(cflinuxfs3),
  "ruby" => %w(cflinuxfs3),
  "staticfile" => %w(cflinuxfs3),
  "nginx" => %w(cflinuxfs3),
  "r" => %w(cflinuxfs3)
} %>
---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
  - name: github-release-forked
    type: docker-image
    source:
      repository: dgodd/github-release-resource
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final
  - name: bosh-deployment
    type: docker-image
    source:
      repository: cloudfoundry/bosh-deployment-resource

resources:
  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}
  - name: public-robots
    type: git
    source:
      uri: https://github.com/cloudfoundry/public-buildpacks-ci-robots
  - name: cf-acceptance-tests
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-acceptance-tests
      branch: master
  - name: bbl-state
    type: git
    source:
      uri: git@github.com:cloudfoundry/buildpacks-envs
      branch: master
      private_key: {{buildpacks-envs-private-key}}
  - name: cf-deployment-concourse-tasks
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
      tag_filter: v8.*
  - name: cf-deployment-concourse-tasks-latest
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment
      branch: master
  - name: cf-deployment-rc
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment
      branch: release-candidate
  - name: releng-kiln-concourse-tasks
    type: git
    source:
      uri: git@github.com:pivotal/releng-kiln-concourse-tasks.git
      private_key: ((releng-kiln-concourse-tasks-deploy-key.private_key))
  - name: p-runtime
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-runtime.git
      branch: master
      private_key: ((p-runtime-deploy-key.private_key))
      paths:
        - Kilnfile
  - name: gcp-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-xenial-go_agent
  - name: cf-release-cf-deployment
    type: bosh-deployment
    source:
      deployment: cf
      skip_check: true
  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}
  - name: java-pivnet-production
    type: pivnet
    source:
      api_token: {{pivnet-refresh-token}}
      product_slug: java-buildpack
<% (supported_languages - ['java']).each do |language| %>
  <% stacks[language].each do |stack| %>
  - name: <%= language %>-buildpack-<%= stack %>
    type: s3
    source:
      bucket: {{buildpack-release-candidates-bucket}}
      regexp: <%= language%>/<%= language %>_buildpack-<%= stack %>-v(.*).zip
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: <%= language %>-buildpack-cached-<%= stack %>
    type: s3
    source:
      bucket: {{buildpack-release-candidates-bucket}}
      regexp: <%= language%>/<%= language %>_buildpack-cached-<%= stack %>-v(.*).zip
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}
  <% end %>
<% end %>
<% supported_languages.each do |language| %>
  - name: <%= language %>-buildpack-bosh-release-github-release
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: <%= language %>-buildpack-release
      access_token: {{buildpacks-github-token}}
  - name: <%= language %>-buildpack-bosh-release
    type: git
    source:
      uri: git@github.com:cloudfoundry/<%= language %>-buildpack-release.git
      private_key: {{<%= language %>-buildpack-bosh-release-private-key}}
      branch: master
  - name: private-<%= language %>-offline-buildpack-bosh-release-github-release
    type: github-release
    source:
      user: pivotal-cf
      repository: <%= language %>-offline-buildpack-release
      access_token: {{buildpacks-github-token}}
  - name: private-<%= language %>-offline-buildpack-bosh-release
    type: git
    source:
      uri: git@github.com:pivotal-cf/<%= language %>-offline-buildpack-release.git
      <% if language == 'java'%>
      private_key:  {{private-<%= language %>-offline-buildpack-bosh-release-private-key}}
      <% else %>
      private_key:  {{<%= language %>-offline-buildpack-bosh-release-private-key}}
      <% end %>
      branch: master
<% end %>

groups:
  - name: buildpacks
    jobs:
      - bbl-up
      - deploy
      - cats
      - delete-deployment
      - bbl-destroy
      - ship-it
<% (supported_languages - %w(java)).each do |language| %>
      - update-<%= language %>-buildpack-bosh-release
<% end %>
  - name: offline
    jobs:
<% (supported_languages - %w(java)).each do |language| %>
      - update-private-<%= language %>-offline-buildpack-bosh-release
      <% next if ['nginx', 'r', 'binary'].include?(language) %>
<% end %>
  - name: java
    jobs:
      - ship-it-java
      - update-java-buildpack-bosh-release
      - update-private-java-offline-buildpack-bosh-release

jobs:
  - name: bbl-up
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
        - get: bbl-config
          resource: bbl-state
        - get: bosh-deployment
        - get: public-robots
        - get: buildpacks-ci
      - task: bbl-up
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        params:
          BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
          BBL_GCP_PROJECT_ID: cf-buildpacks
          BBL_GCP_ZONE: us-east1-c
          BBL_GCP_REGION: us-east1
          BBL_IAAS: gcp
          BBL_LB_CERT: {{cf-release-lb-cert}}
          BBL_LB_KEY: {{cf-release-lb-key}}
          LB_DOMAIN: cf-release.buildpacks-gcp.ci.cf-app.com
          BBL_ENV_NAME: cf-release
          BBL_STATE_DIR: cf-release
        input_mapping:
          ops-files: bosh-deployment
        ensure:
          put: bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
      - task: add-gcp-parent-dns-record
        file: buildpacks-ci/tasks/add-gcp-parent-dns-record/task.yml
        params:
          ENV_NAME: cf-release
          GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}

  - name: deploy
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - do:
        - in_parallel:
          - get: public-robots
            passed: [ bbl-up ]
            trigger: true
          - get: buildpacks-ci
          - get: bbl-state
          - get: cf-deployment
            resource: cf-deployment-rc
            attempts: 3
          - get: gcp-stemcell
            attempts: 3
          <% (supported_languages - ['java']).each do |language| %>
            <% stacks[language].each_with_index do |stack, i| %>
          - get: <%= language %>-buildpack-stack<%= i %>
            resource: <%= language %>-buildpack-<%= stack %>
          - get: <%= language %>-buildpack-cached-<%= stack %>
            <% end %>
          <% end %>
          - get: java-buildpack
            resource: java-pivnet-production
            params:
              globs:
                - java-buildpack-v*.zip

          - get: java-buildpack-bosh-release
          - get: go-buildpack-bosh-release
          - get: python-buildpack-bosh-release
          - get: nodejs-buildpack-bosh-release
          - get: ruby-buildpack-bosh-release
          - get: php-buildpack-bosh-release
          - get: staticfile-buildpack-bosh-release
          - get: binary-buildpack-bosh-release
          - get: dotnet-core-buildpack-bosh-release
          - get: bosh-deployment
        - in_parallel:
          - task: create-bump-buildpacks-opsfile
            file: buildpacks-ci/tasks/create-bump-buildpacks-opsfile/task.yml
          - task: create-deployment-source-config
            file: buildpacks-ci/tasks/create-deployment-source-config/task.yml
            params:
              ENV_NAME: cf-release
        - put: cf-release-cf-deployment
          params:
            source_file: deployment-source-config/source_file.yml
            manifest: cf-deployment/cf-deployment.yml
            releases:
              - built-buildpacks-artifacts/*.tgz
            stemcells:
              - gcp-stemcell/*.tgz
            ops_files:
              - cf-deployment/operations/use-latest-stemcell.yml
              - buildpacks-ci/deployments/operations/no-canaries.yml
              - bump-buildpacks-opsfile/opsfile.yml
            vars:
              system_domain: cf-release.buildpacks-gcp.ci.cf-app.com
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: cats
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: bbl-state
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks-latest
        - get: cf-acceptance-tests
        - get: public-robots
          passed: [ deploy ]
          trigger: true
        <% (supported_languages - ['java']).each do |language| %>
          <% stacks[language].each do |stack| %>
        - get: <%= language %>-buildpack-cached-<%= stack %>
          passed: [ deploy ]
        - get: <%= language %>-buildpack-<%= stack %>
          passed: [ deploy ]
          <% end %>
        <% end %>
        - get: java-pivnet-production
          passed: [ deploy ]
      - do:
        - task: get-cf-creds
          file: buildpacks-ci/tasks/get-cf-creds/task.yml
          params:
            ENV_NAME: cf-release
        - task: write-cats-config
          file: buildpacks-ci/tasks/write-cats-config/task.yml
          params:
            APPS_DOMAIN: cf-release.buildpacks-gcp.ci.cf-app.com
            DIEGO_DOCKER_ON: true
        - task: cats
          attempts: 3
          file: cf-deployment-concourse-tasks/run-cats/task.yml
          params:
            NODES: 12
            CONFIG_FILE_PATH: integration_config.json
            FLAKE_ATTEMPTS: 3
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: delete-deployment
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - in_parallel:
        - get: public-robots
          passed: [ cats ]
          trigger: true
        - get: bbl-state
        - get: buildpacks-ci
      - task: create-deployment-source-config
        file: buildpacks-ci/tasks/create-deployment-source-config/task.yml
        params:
          ENV_NAME: cf-release
      - put: cf-release-cf-deployment
        params:
          source_file: deployment-source-config/source_file.yml
          delete:
            enabled: true
            force: true

  - name: bbl-destroy
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
        - get: buildpacks-ci
        - get: public-robots
          passed: [ delete-deployment ]
          trigger: true
      - task: remove-gcp-parent-dns-record
        file: buildpacks-ci/tasks/remove-gcp-parent-dns-record/task.yml
        params:
          GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
          ENV_NAME: cf-release
      - task: bbl-destroy
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        params:
          BBL_STATE_DIR: cf-release
          BBL_GCP_PROJECT_ID: cf-buildpacks
          BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
        ensure:
          put: bbl-state
          params:
            repository: updated-bbl-state
            rebase: true

  - name: ship-it
    serial: true
    public: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        <% (supported_languages - ['java']).each do |language| %>
        <% stacks[language].each do |stack| %>
        - get: <%= language %>-buildpack-cached-<%= stack %>
          passed: [ cats ]
        - get: <%= language %>-buildpack-<%= stack %>
          passed: [ cats ]
        <% end %>
        <% end %>
  - name: ship-it-java
    serial: true
    public: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: java-pivnet-production
          passed: [ cats ]

<% supported_languages.each do |language| %>
  - name: update-<%= language %>-buildpack-bosh-release
    serial: true
    serial_groups: [cf-release-buildpacks]
    public: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: release
          resource: <%= language %>-buildpack-bosh-release
        - get: releng-kiln-concourse-tasks
        - get: p-runtime
          params: { submodules: none }
        <% stacks[language].each_with_index do |stack, i| %>
        - get: buildpack-zip-stack<%= i %>
          passed: [ <%= language.include?('java') ? 'ship-it-java' : 'ship-it' %> ]
          resource: <%= language.include?('java') ? 'java-pivnet-production' : "#{language}-buildpack-#{stack}" %>
          <% if language.include?('java') %>
          params:
            globs:
            - 'java-buildpack-v4*.zip'
          <% end %>
          trigger: true
        <% end %>
      - do:
        - task: create-bosh-release
          file: buildpacks-ci/tasks/create-bosh-release/task.yml
          params:
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            LANGUAGE: <%= language %>
            RELEASE_NAME: <%= language %>-buildpack
            RELEASE_DIR: release
        - put: <%= language %>-buildpack-bosh-release
          params:
            repository: release-artifacts
            rebase: true
            tag: version/version
        - put: <%= language %>-buildpack-bosh-release-github-release
          params:
            name: version/version
            tag: version/version
        - name: upload-release
          file: releng-kiln-concourse-tasks/tasks/upload-release/task.yml
          input_mapping:
            release-tarball-directory: release-tarball
          params:
            AWS_ACCESS_KEY_ID: ((pas-releng-fetch-releases.username))
            AWS_SECRET_ACCESS_KEY: ((pas-releng-fetch-releases.password))
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>

<% supported_languages.each do |language| %>
  - name: update-private-<%= language %>-offline-buildpack-bosh-release
    serial: true
    public: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        <% if language == 'java' %>
        - get: pivnet-production
          resource: java-pivnet-production
          passed: ['ship-it-java']
          params:
            globs:
            - "java-buildpack-offline-v4*.zip"
          trigger: true
        <% else %>
        <% release_stacks = stacks[language]
           release_stacks.each_with_index do |stack, i| %>
        - get: buildpack-zip-stack<%= i %>
          passed: [ ship-it ]
          resource: <%= "#{language}-buildpack-cached-#{stack}" %>
          trigger: true
        <% end %>
        <% end %>
        - get: release
          resource: private-<%= language %>-offline-buildpack-bosh-release
      - do:
        <% if language == 'java' %>
        - task: download-offline-buildpack
          file: buildpacks-ci/tasks/download-offline-buildpack/task.yml
          params:
            CF_STACKS: 'cflinuxfs3'
        <% end %>
        - task: create-offline-bosh-release
          file: buildpacks-ci/tasks/create-bosh-release/task.yml
          params:
            ACCESS_KEY_ID: {{pivotal-offline-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-offline-buildpacks-s3-secret-key}}
            LANGUAGE: <%= language %>
            RELEASE_NAME: <%= language %>-offline-buildpack
            RELEASE_DIR: release
        - put: private-<%= language %>-offline-buildpack-bosh-release
          params:
            repository: release-artifacts
            rebase: true
            tag: version/version
        - put: private-<%= language %>-offline-buildpack-bosh-release-github-release
          params:
            name: version/version
            tag: version/version
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
