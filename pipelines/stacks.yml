---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

resources: ###########################################################################################################

  ## Cron Resource ##

  - name: monday-funday
    type: cron
    source:
      expression: 0 5 * * 1
      location: {{current-timezone}}

  ## Git Repos ##

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}

  - name: stacks
    type: git
    source:
      uri: git@github.com:cloudfoundry/stacks.git
      branch: master
      private_key: {{stacks-private-key}}

  - name: new-cves
    type: git
    source:
      uri: {{buildpacks-ci-git-uri}}
      branch: new-cve-notifications
      private_key: {{buildpacks-ci-private-key}}
      paths: [ ubuntu14.04.yaml ]

  - name: deployments-buildpacks
    type: git
    source:
      uri: {{deployments-git-uri}}
      private_key: {{deployments-private-key}}
      branch: master

  - name: bosh-lite
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-lite

  - name: cflinuxfs2-rootfs-release
    type: git
    source:
      uri: git@github.com:cloudfoundry/cflinuxfs2-rootfs-release.git
      branch: master
      private_key: {{cflinuxfs2-rootfs-private-key}}

  - name: stacks-release
    type: git
    source:
      uri: git@github.com:pivotal-cf-experimental/stacks-release.git
      branch: master
      private_key: {{stacks-release-private-key}}

  - name: diego-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/diego-release
      branch: master

  - name: cf-release-rc
    type: git
    source:
      uri: {{cf-release-git-uri}}
      branch: release-candidate

  - name: cf-release-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-release
      branch: develop
      private_key: {{cf-release-private-key}}

  ## S3 Buckets ##

  - name: stack-s3
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: cflinuxfs2-(.*).tar.gz
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  - name: receipt-s3
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: cflinuxfs2_receipt-(.*)
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  ## BOSH Deployments ##

  - name: stacks-cf-deployment
    type: bosh-deployment
    source:
      target: https://stacks.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{bosh-lite-password}}
      deployment: cf-warden
      ignore_ssl: true

  - name: stacks-diego-deployment
    type: bosh-deployment
    source:
      target: https://stacks.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{bosh-lite-password}}
      deployment: cf-warden-diego
      ignore_ssl: true

  - name: stacks-rootfs-deployment
    type: bosh-deployment
    source:
      target: https://stacks.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{bosh-lite-password}}
      deployment: rootfs-smoke-test
      ignore_ssl: true

  ## bosh.io Releases ##

  - name: diego-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/diego-release

  - name: etcd-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry-incubator/etcd-release

  - name: garden-linux-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry-incubator/garden-linux-release

  ## bosh.io stemcell ##

  - name: lite-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent

  ## Docker Image ##

  - name: docker-cflinuxfs2-rootfs
    type: docker-image
    source:
      repository: cloudfoundry/cflinuxfs2
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io

  - name: docker-cflinuxfs2-rootfs-tagged
    type: docker-image
    source:
      repository: cloudfoundry/cflinuxfs2
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io

  ## Github Release ##

  - name: stack-github-release
    type: github-release
    source:
      drafts: true
      user: {{buildpacks-github-org}}
      repository: stacks
      access_token: {{buildpacks-github-token}}

  - name: cflinuxfs2-rootfs-github-release
    type: github-release
    source:
      drafts: false
      user: {{buildpacks-github-org}}
      repository: cflinuxfs2-rootfs-release
      access_token: {{buildpacks-github-token}}

  ## Semver Versions ##

  - name: version
    type: semver
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      key: versions/stack
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  - name: cflinuxfs2-rootfs-release-version
    type: semver
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      initial_version: 0.1.0-rc.1
      key: versions/cflinuxfs2-rootfs-release
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  ## Slack Alerts ##

  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}

jobs: ################################################################################################################

  - name: notification
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: monday-funday
          trigger: true
      - task: create-tracker-story
        file: buildpacks-ci/tasks/create-new-stacks-release-story.yml
        params:
          TRACKER_PROJECT_ID: {{cf-buildpacks-public-tracker-id}}
          TRACKER_API_TOKEN: {{pivotal-tracker-api-token}}
          TRACKER_REQUESTER_ID: {{cf-buildpacks-requester-id}}

  - name: recreate-bosh-lite
    serial: true
    serial_groups:
      - stacks
    public: true
    plan:
      - aggregate:
        - get: deployments-buildpacks
        - get: monday-funday
          passed: [ "notification" ]
          trigger: true
        - get: buildpacks-ci
        - get: new-cves
          trigger: true
      - task: recreate-bosh-lite
        file: buildpacks-ci/tasks/recreate-bosh-lite/task.yml
        params:
          DEPLOYMENT_NAME: stacks.buildpacks.ci
          BOSH_PRIVATE_KEY: {{bosh_private_key}}
          BOSH_USER: {{bosh_user}}
          BOSH_PASSWORD: {{bosh_password}}
          AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
          BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
          BOSH_LITE_SECURITY_GROUP: {{buildpacks_ci_bosh_lite_security_group}}
          BOSH_LITE_SUBNET_ID: {{buildpacks_ci_bosh_lite_subnet_id}}
          BOSH_LITE_DISK_SIZE: 100
          BOSH_GATEWAY_USER: {{buildpacks_ci_bosh_gateway_user}}
          BOSH_TARGET: stacks.buildpacks.ci.cf-app.com
          BOSH_LITE_NAME: stacks.buildpacks.ci
          RUBYGEM_MIRROR: {{rubygem-mirror}}
        attempts: 5
        ensure:
          put: deployments-buildpacks
          params:
            repository: deployments-buildpacks-artifacts
            rebase: true

  - name: build-rootfs
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: deployments-buildpacks
          passed: [ "recreate-bosh-lite" ]
          trigger: true
      - aggregate:
        - get: stacks
        - get: version
          params: { pre: rc }
        - get: cflinuxfs2-rootfs-release-version
          params: { pre: rc }
      - do:
        - task: make-rootfs
          file: buildpacks-ci/tasks/make-rootfs.yml
          privileged: true
        - task: test-rootfs
          file: buildpacks-ci/tasks/test-rootfs.yml
          privileged: true
        - put: stack-s3
          params:
            from: stacks-artifacts/cflinuxfs2-(.*).tar.gz
            to: /rootfs/
        - put: receipt-s3
          params:
            from: receipt-artifacts/cflinuxfs2_receipt-(.*)
            to: /rootfs/
        - put: version
          params: { file: version/number }
        - put: cflinuxfs2-rootfs-release-version
          params: { file: cflinuxfs2-rootfs-release-version/number }
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: generate-stacks-manifests
    serial: true
    serial_groups: [ stacks ]
    public: true
    plan:
      - aggregate:
        - get: deployments-buildpacks
          passed: [ "build-rootfs" ]
        - get: bosh-lite
        - get: buildpacks-ci
        - get: cf-release
          resource: cf-release-rc
        - get: diego-release
        - get: cflinuxfs2-rootfs-release
        - get: lite-stemcell
        - get: stack-s3
          passed: [ build-rootfs ]
        - get: version
          passed: [ build-rootfs ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ build-rootfs ]
        - get: receipt-s3
          passed: [ build-rootfs ]
        - get: stacks
          passed: [ build-rootfs ]
      - do:
        - task: generate-rootfs-smoke-test-manifest
          file: buildpacks-ci/tasks/make-rootfs-smoke-test-manifest.yml
          params:
            DEPLOYMENT_NAME: stacks.buildpacks.ci
            BOSH_PRIVATE_KEY: {{bosh_private_key}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{bosh_password}}
            AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_LITE_SECURITY_GROUP: {{buildpacks_ci_bosh_lite_security_group}}
            BOSH_LITE_SUBNET_ID: {{buildpacks_ci_bosh_lite_subnet_id}}
            BOSH_LITE_DISK_SIZE: 100
            BOSH_GATEWAY_USER: {{buildpacks_ci_bosh_gateway_user}}
            BOSH_TARGET: stacks.buildpacks.ci.cf-app.com
            BOSH_LITE_NAME: stacks.buildpacks.ci
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: rootfs-smoke-test-manifest-artifacts
            rebase: true
        - task: generate-cf-and-diego-manifest
          file: buildpacks-ci/tasks/diego-make-manifest.yml
          params:
            DEPLOYMENT_NAME: stacks.buildpacks.ci
            CI_CF_PASSWORD: {{ci-cf-password}}
            BOSH_PRIVATE_KEY: {{bosh_private_key}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{bosh_password}}
            AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_LITE_SECURITY_GROUP: {{buildpacks_ci_bosh_lite_security_group}}
            BOSH_LITE_SUBNET_ID: {{buildpacks_ci_bosh_lite_subnet_id}}
            BOSH_LITE_DISK_SIZE: 100
            BOSH_GATEWAY_USER: {{buildpacks_ci_bosh_gateway_user}}
            BOSH_TARGET: stacks.buildpacks.ci.cf-app.com
            BOSH_LITE_NAME: stacks.buildpacks.ci
            RUBYGEM_MIRROR: {{rubygem-mirror}}
            DOMAIN_NAME: {{domain-name}}
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: generate-manifest-artifacts
            rebase: true

  - name: deploy-rootfs-to-stacks
    serial: true
    serial_groups: [ stacks ]
    public: true
    plan:
      - aggregate:
        - get: lite-stemcell
        - get: buildpacks-ci
        - get: deployments-buildpacks
          passed: [ 'generate-stacks-manifests' ]
        - get: cf-release
          resource: cf-release-rc
          passed: [ 'generate-stacks-manifests' ]
        - get: cflinuxfs2-rootfs-release
          passed: [ 'generate-stacks-manifests' ]
        - get: stack-s3
          passed: [ 'generate-stacks-manifests' ]
        - get: version
          passed: [ 'generate-stacks-manifests' ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ 'generate-stacks-manifests' ]
        - get: receipt-s3
          passed: [ 'generate-stacks-manifests' ]
        - get: stacks
          passed: [ 'generate-stacks-manifests' ]
      - do:
        - task: overwrite-cflinuxfs2-rootfs-release
          file: buildpacks-ci/tasks/overwrite-cflinuxfs2-rootfs-release.yml
          params:
            ROOTFS_RELEASE: cflinuxfs2-rootfs
        - put: stacks-rootfs-deployment
          params:
            manifest: deployments-buildpacks/deployments/stacks.buildpacks.ci/rootfs-smoke-test.yml
            stemcells: [lite-stemcell/*.tgz]
            releases: [cflinuxfs2-rootfs-release-artifacts/dev_releases/cflinuxfs2-rootfs/*.tgz]
        - task: run-rootfs-smoke-test
          file: buildpacks-ci/tasks/run-rootfs-smoke-test.yml
          params:
            DEPLOYMENT_NAME: stacks.buildpacks.ci
            BOSH_PRIVATE_KEY: {{bosh_private_key}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{bosh_password}}
            AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_LITE_SECURITY_GROUP: {{buildpacks_ci_bosh_lite_security_group}}
            BOSH_LITE_SUBNET_ID: {{buildpacks_ci_bosh_lite_subnet_id}}
            BOSH_LITE_DISK_SIZE: 100
            BOSH_GATEWAY_USER: {{buildpacks_ci_bosh_gateway_user}}
            BOSH_TARGET: stacks.buildpacks.ci.cf-app.com
            BOSH_LITE_NAME: stacks.buildpacks.ci
            RUBYGEM_MIRROR: {{rubygem-mirror}}
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: deploy-cf-to-stacks
    serial: true
    serial_groups: [ stacks ]
    public: true
    plan:
      - aggregate:
        - get: lite-stemcell
        - get: buildpacks-ci
        - get: deployments-buildpacks
          passed: [ 'deploy-rootfs-to-stacks' ]
        - get: cf-release
          resource: cf-release-rc
          passed: [ 'deploy-rootfs-to-stacks' ]
        - get: cflinuxfs2-rootfs-release
          passed: [ 'deploy-rootfs-to-stacks' ]
        - get: stack-s3
          passed: [ 'deploy-rootfs-to-stacks' ]
        - get: version
          passed: [ 'deploy-rootfs-to-stacks' ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ 'deploy-rootfs-to-stacks' ]
        - get: receipt-s3
          passed: [ 'deploy-rootfs-to-stacks' ]
        - get: stacks
          passed: [ 'deploy-rootfs-to-stacks' ]
      - do:
        - task: create-cf-release
          file: buildpacks-ci/tasks/create-cf-release-without-modifying-stacks.yml
          privileged: true
        - put: stacks-cf-deployment
          params:
            manifest: deployments-buildpacks/deployments/stacks.buildpacks.ci/manifest.yml
            stemcells: [lite-stemcell/*.tgz]
            releases: [cf-release-artifacts/dev_releases/cf/*.tgz]
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: deploy-diego-to-stacks
    serial: true
    serial_groups: [ stacks ]
    public: true
    plan:
      - aggregate:
        - get: lite-stemcell
        - get: garden-linux-bosh-release
        - get: diego-bosh-release
        - get: etcd-bosh-release
        - get: deployments-buildpacks
          passed: ['deploy-cf-to-stacks']
          trigger: true
        - get: buildpacks-ci
        - get: stack-s3
          passed: [ deploy-cf-to-stacks ]
        - get: version
          passed: [ deploy-cf-to-stacks ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ deploy-cf-to-stacks ]
        - get: receipt-s3
          passed: [ deploy-cf-to-stacks ]
        - get: stacks
          passed: [ deploy-cf-to-stacks ]
      - put: stacks-diego-deployment
        params:
          manifest: deployments-buildpacks/deployments/stacks.buildpacks.ci/diego.yml
          stemcells: ['lite-stemcell/stemcell.tgz']
          releases:
            - diego-bosh-release/release.tgz
            - garden-linux-bosh-release/release.tgz
            - etcd-bosh-release/release.tgz
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: cats
    serial: true
    serial_groups: [ stacks ]
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: deployments-buildpacks
          passed: ['deploy-diego-to-stacks']
          trigger: true
        - get: stack-s3
          passed: [ deploy-diego-to-stacks ]
        - get: version
          passed: [ deploy-diego-to-stacks ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ deploy-diego-to-stacks ]
        - get: receipt-s3
          passed: [ deploy-diego-to-stacks ]
        - get: stacks
          passed: [ deploy-diego-to-stacks ]
      - do:
        - task: cats
          file: buildpacks-ci/tasks/run-cats.yml
          params:
            DEPLOYMENT_NAME: stacks.buildpacks.ci
            CI_CF_USERNAME: {{ci-cf-username}}
            CI_CF_PASSWORD: {{ci-cf-password}}
            BOSH_PRIVATE_KEY: {{bosh_private_key}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{bosh_password}}
            AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_LITE_SECURITY_GROUP: {{buildpacks_ci_bosh_lite_security_group}}
            BOSH_LITE_SUBNET_ID: {{buildpacks_ci_bosh_lite_subnet_id}}
            BOSH_LITE_DISK_SIZE: 100
            BOSH_GATEWAY_USER: {{buildpacks_ci_bosh_gateway_user}}
            BOSH_TARGET: stacks.buildpacks.ci.cf-app.com
            BOSH_LITE_NAME: stacks.buildpacks.ci
            DIEGO_DOCKER_ON: true
            DOMAIN_NAME: {{domain-name}}
          privileged: true
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: destroy-bosh-lite
    serial: true
    serial_groups:
      - stacks
    public: true
    plan:
      - aggregate:
        - get: deployments-buildpacks
          passed: [ cats ]
          trigger: true
        - get: buildpacks-ci
      - task: destroy-stacks-bosh-lite
        file: buildpacks-ci/tasks/destroy-bosh-lite/task.yml
        params:
          DEPLOYMENT_NAME: stacks.buildpacks.ci
          BOSH_PRIVATE_KEY: {{bosh_private_key}}
          AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
          BOSH_LITE_NAME: stacks.buildpacks.ci
          RUBYGEM_MIRROR: {{rubygem-mirror}}
        attempts: 5

  - name: shipit
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: stack-s3
          passed:
            - cats
        - get: receipt-s3
          passed:
            - cats
        - get: stacks
          resource: stacks
          passed:
            - cats
        - get: version
          passed:
            - cats
          params: { bump: final }
        - get: cflinuxfs2-rootfs-release-version
          passed: [ cats ]
          params: { bump: final }
      - do:
        - task: update-receipt
          file: buildpacks-ci/tasks/update-rootfs-receipt/task.yml
        - task: update-filename
          file: buildpacks-ci/tasks/update-rootfs-filename/task.yml
        - put: stacks
          params:
            repository: new-stack-commit
            tag: version/number
        - put: stack-s3
          params:
            from: stack-archive/cflinuxfs2-(.*).tar.gz
            to: /rootfs/
        - put: version
          params: { file: version/number }
        - put: cflinuxfs2-rootfs-release-version
          params: { file: cflinuxfs2-rootfs-release-version/number }
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: reset-minor-version-to-rc
    serial: true
    public: true
    plan:
      - get: version
        trigger: true
        passed: [ shipit ]
        params: {bump: minor, pre: rc}
      - get: cflinuxfs2-rootfs-release-version
        trigger: true
        passed: [ shipit ]
        params: {bump: minor, pre: rc}
      - put: version
        params: {file: version/number}
      - put: cflinuxfs2-rootfs-release-version
        params: {file: cflinuxfs2-rootfs-release-version/number}

  - name: upload-to-github
    serial: true
    public: true
    plan:
      - aggregate:
        - get: stack-s3
          passed: [ shipit ]
        - get: version
          trigger: true
          passed: [ shipit ]
      - do:
        - put: stack-github-release
          params:
            name: version/number
            tag: version/number
            globs:
              - stack-s3/cflinuxfs2-*.tar.gz
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: upload-to-docker
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: stack-s3
          passed: [ shipit ]
        - get: version
          trigger: true
          passed: [ shipit ]
      - do:
        - task: rename
          file: buildpacks-ci/tasks/rename-rootfs-for-docker.yml
        - aggregate:
          - put: docker latest version
            resource: docker-cflinuxfs2-rootfs
            params:
              import_file: docker-s3/cflinuxfs2.tar.gz
              skip_download: true
          - put: docker tagged version
            resource: docker-cflinuxfs2-rootfs-tagged
            params:
              skip_download: true
              import_file: docker-s3/cflinuxfs2.tar.gz
              tag: version/number
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: create-bosh-release-deprecated
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: blob
          resource: stack-s3
          passed: [ shipit ]
          trigger: true
        - get: version
          passed: [ shipit ]
        - get: release
          resource: stacks-release
      - do:
        - task: run-both-bosh-scripts
          file: buildpacks-ci/tasks/create-bosh-release.yml
          params:
            BLOB_NAME: rootfs
            BLOB_GLOB: blob/cflinuxfs2-*.tar.gz
            RELEASE_NAME: stack
            RELEASE_DIR: release
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
        - put: stacks-release
          params:
            repository: release-artifacts
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: create-cflinuxfs2-rootfs-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: blob
          resource: stack-s3
          passed: [ shipit ]
          trigger: true
        - get: version
          passed: [ shipit ]
        - get: cflinuxfs2-rootfs-release-version
          passed: [ shipit ]
        - get: cflinuxfs2-rootfs-release
      - do:
        - task: create-cflinuxfs2-rootfs-release
          file: buildpacks-ci/tasks/create-cflinuxfs2-rootfs-release.yml
          params:
            BLOB_NAME: rootfs
            BLOB_GLOB: blob/cflinuxfs2-*.tar.gz
            RELEASE_NAME: cflinuxfs2-rootfs
            RELEASE_DIR: cflinuxfs2-rootfs-release
            ACCESS_KEY_ID: {{cloudfoundry-s3-access-key}}
            SECRET_ACCESS_KEY: {{cloudfoundry-s3-secret-key}}
        - task: create-release-body
          file: buildpacks-ci/tasks/create-rootfs-bosh-release-github-release-notes/task.yml
        - task: create-release-commit
          file: buildpacks-ci/tasks/create-rootfs-bosh-release-commit/task.yml
        - put: cflinuxfs2-rootfs-release
          params:
            repository: release-artifacts
        - put: cflinuxfs2-rootfs-github-release
          params:
            name: cflinuxfs2-rootfs-release-version/number
            tag: cflinuxfs2-rootfs-release-version/number
            tag_prefix: 'v'
            commitish: release-commit/sha
            body: release-body/body
            globs:
              - release-artifacts/releases/cflinuxfs2-rootfs/*.tgz
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: upload-to-cf-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: stack-s3
          passed: [ shipit ]
        - get: cf-release-develop
        - get: buildpacks-ci
        - get: version
          trigger: true
          passed: [ shipit ]
        - get: receipt-s3
          passed: [ shipit ]
      - do:
        - task: check-can-i-bump
          file: buildpacks-ci/tasks/check-can-i-bump/task.yml
        - task: upload
          file: buildpacks-ci/tasks/upload-stacks-to-cf-release.yml
          params:
            TERM: xterm-color
            ACCESS_KEY_ID: {{blobstore-access-key}}
            SECRET_ACCESS_KEY: {{blobstore-secret-key}}
          privileged: true
        - put: cf-release-develop
          params:
            repository: cf-release-artifacts
            rebase: true
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
