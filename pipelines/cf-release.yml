<% supported_languages = %w(dotnet-core go ruby binary staticfile nodejs php python java java-offline) %>
---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource

resources:
  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}
  - name: runtime-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/runtime-ci
      branch: master
  - name: bosh-lite
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-lite
  - name: diego-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/diego-release
      branch: master
  - name: cf-release-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-release
      branch: develop
      private_key: {{cf-release-private-key}}
  - name: lite-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent
  - name: deployments-buildpacks
    type: git
    source:
      uri: {{deployments-git-uri}}
      private_key: {{deployments-private-key}}
      branch: master
  - name: cf-release-cf-deployment
    type: bosh-deployment
    source:
      target: https://cf-release.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{gcp_bosh_lite_admin_password}}
      deployment: cf-warden
      ignore_ssl: true
  - name: cf-release-diego-deployment
    type: bosh-deployment
    source:
      target: https://cf-release.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{gcp_bosh_lite_admin_password}}
      deployment: cf-warden-diego
      ignore_ssl: true
  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}
  - name: buildpack-releases
    type: git
    source:
      uri: git@github.com:cloudfoundry-attic/buildpack-releases.git
      private_key: {{buildpack-releases-private-key}}
      branch: master
  - name: diego-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/diego-release
  - name: cflinuxfs2-rootfs-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/cflinuxfs2-rootfs-release
  - name: garden-runc-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/garden-runc-release

<% supported_languages.each do |language| %>
  - name: <%= language %>-buildpack-github-release
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: <%= language.gsub('-offline', '') %>-buildpack
      access_token: {{buildpacks-github-token}}
  - name: <%= language %>-buildpack-bosh-release
    type: git
    source:
      uri: git@github.com:cloudfoundry/<%= language %>-buildpack-release.git
      private_key: {{<%= language %>-buildpack-bosh-release-private-key}}
      branch: master
<% end %>

groups:
  - name: buildpacks
    jobs:
      - recreate-bosh-lite
      - deploy-cf-and-diego-to-cf-release
      - cats
      - destroy-bosh-lite
      - ship-it
<% (supported_languages - %w(java java-offline dotnet-core)).each do |language| %>
      - deprecated-bosh-release-<%= language %>
<% end %>
<% (supported_languages - %w(java java-offline)).each do |language| %>
      - update-<%= language %>-buildpack-bosh-release
      - cf-release for <%= language %>
<% end %>
  - name: java
    jobs:
      - recreate-bosh-lite
      - ship-it-java
      - deprecated-bosh-release-java
      - deprecated-bosh-release-java-offline
      - update-java-buildpack-bosh-release
      - update-java-offline-buildpack-bosh-release
      - cf-release for java
      - cf-release for java-offline

jobs:
  - name: recreate-bosh-lite
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - aggregate:
        - get: deployments-buildpacks
        - get: buildpacks-ci
      - task: recreate-cf-release-bosh-lite
        file: buildpacks-ci/tasks/recreate-bosh-lite/task.yml
        params:
          IAAS: aws
          #GCP_BOSH_DIRECTOR_USER: {{gcp_bosh_admin_user}}
          #GCP_BOSH_DIRECTOR_PASSWORD: {{gcp_bosh_admin_password}}
          #GCP_BOSH_LITE_NAME: cf-release-gcp-bosh-lite
          DEPLOYMENT_NAME: cf-release.buildpacks.ci
          BOSH_USER: {{bosh_user}}
          BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
          BOSH_TARGET: cf-release.buildpacks.ci.cf-app.com
          BOSH_LITE_NAME: cf-release.buildpacks.ci
          RUBYGEM_MIRROR: {{rubygem-mirror}}
          BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
          BOSH_LITE_ADMIN_PASSWORD: {{gcp_bosh_lite_admin_password}}
          BOSH_LITE_HM_PASSWORD: {{gcp_bosh_lite_hm_password}}
          BOSH_LITE_NATS_PASSWORD: {{gcp_bosh_lite_nats_password}}
          BOSH_LITE_BLOBSTORE_AGENT_PASSWORD: {{gcp_bosh_lite_blobstore_agent_password}}
          BOSH_LITE_BLOBSTORE_DIRECTOR_PASSWORD: {{gcp_bosh_lite_blobstore_director_password}}
          BOSH_LITE_POSTGRES_PASSWORD: {{gcp_bosh_lite_postgres_password}}
          ######## For AWS Deploys ##################
          BOSH_PRIVATE_KEY: {{bosh_private_key}}
          AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
          BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
          BOSH_LITE_SUBNET_ID: {{bosh_lite_subnet_id}}
          BOSH_LITE_SECURITY_GROUP: {{bosh_lite_security_group}}
        attempts: 5
        ensure:
          put: deployments-buildpacks
          params:
            repository: deployments-buildpacks-artifacts
            rebase: true
  - name: deploy-cf-and-diego-to-cf-release
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - do:
        - aggregate:
          - get: deployments-buildpacks
            passed: [ recreate-bosh-lite ]
            trigger: true
          - get: buildpacks-ci
          - get: bosh-lite
          - get: cf-release
            resource: cf-release-develop
          - get: diego-release
          - get: garden-runc-bosh-release
          - get: diego-bosh-release
          - get: cflinuxfs2-rootfs-bosh-release
          - get: lite-stemcell
          - get: java-buildpack-github-release
            params:
              globs:
                - java-buildpack-v*.zip
          - get: java-offline-buildpack-github-release
            params:
              globs:
                - java-buildpack-offline-v*.zip
          - get: go-buildpack-github-release
          - get: python-buildpack-github-release
          - get: nodejs-buildpack-github-release
          - get: ruby-buildpack-github-release
          - get: php-buildpack-github-release
          - get: staticfile-buildpack-github-release
          - get: binary-buildpack-github-release
          - get: dotnet-core-buildpack-github-release
        - task: generate-manifest
          file: buildpacks-ci/tasks/generate-cf-and-diego-manifests/task.yml
          params:
            DEPLOYMENT_NAME: cf-release.buildpacks.ci
            CI_CF_PASSWORD: {{ci-cf-password}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
            BOSH_TARGET: cf-release.buildpacks.ci.cf-app.com
            BOSH_LITE_NAME: cf-release.buildpacks.ci
            RUBYGEM_MIRROR: {{rubygem-mirror}}
            BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
            ROOTFS_RELEASE: cflinuxfs2-rootfs
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: generate-manifest-artifacts
            rebase: true
        - task: create-cf-release
          file: buildpacks-ci/tasks/create-cf-bosh-release-to-deploy/task.yml
          privileged: true
        - put: cf-release-cf-deployment
          params:
            manifest: deployments-buildpacks/deployments/cf-release.buildpacks.ci/manifest.yml
            stemcells: [lite-stemcell/*.tgz]
            releases: [cf-release-artifacts/dev_releases/cf/*.tgz]
        - put: cf-release-diego-deployment
          params:
            manifest: deployments-buildpacks/deployments/cf-release.buildpacks.ci/diego.yml
            stemcells: ['lite-stemcell/stemcell.tgz']
            releases:
              - diego-bosh-release/release.tgz
              - cflinuxfs2-rootfs-bosh-release/release.tgz
              - garden-runc-bosh-release/release.tgz
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: cats
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: runtime-ci
        - get: cf-release
          resource: cf-release-develop
          params:
            submodules: [ src/github.com/cloudfoundry/cf-acceptance-tests/ ]
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: deployments-buildpacks
          passed: [ deploy-cf-and-diego-to-cf-release ]
          trigger: true
        - get: java-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: java-offline-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: go-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: nodejs-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: python-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: ruby-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: php-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: staticfile-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: binary-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
        - get: dotnet-core-buildpack-github-release
          passed: [ deploy-cf-and-diego-to-cf-release ]
      - do:
        - task: copy-cf-acceptance-tests
          file: buildpacks-ci/tasks/copy-cf-acceptance-tests/task.yml
        - task: write-cats-config
          file: buildpacks-ci/tasks/write-cats-config/task.yml
          params:
            CI_CF_USERNAME: {{ci-cf-username}}
            CI_CF_PASSWORD: {{ci-cf-password}}
            APPS_DOMAIN: cf-release.buildpacks.ci.cf-app.com
            DIEGO_DOCKER_ON: true
        - task: cats
          file: runtime-ci/scripts/ci/run-cats/task.yml
          params:
            NODES: 4
            CONFIG_FILE_PATH: integration_config.json
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: destroy-bosh-lite
    serial: true
    serial_groups: [ cf-release ]
    public: true
    plan:
      - aggregate:
        - get: deployments-buildpacks
          passed: [ cats ]
          trigger: true
        - get: buildpacks-ci
      - task: destroy-cf-release-bosh-lite
        file: buildpacks-ci/tasks/destroy-bosh-lite/task.yml
        params:
          DEPLOYMENT_NAME: cf-release.buildpacks.ci
          BOSH_USER: {{gcp_bosh_admin_user}}
          BOSH_PASSWORD: {{gcp_bosh_admin_password}}
          GCP_BOSH_LITE_NAME: cf-release-gcp-bosh-lite
          GCP_BOSH_DIRECTOR_USER: {{gcp_bosh_admin_user}}
          GCP_BOSH_DIRECTOR_PASSWORD: {{gcp_bosh_admin_password}}
          BOSH_LITE_NAME: cf-release.buildpacks.ci
          RUBYGEM_MIRROR: {{rubygem-mirror}}
          BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
          IAAS: aws
          ######## For AWS Deploys ##################
          BOSH_PRIVATE_KEY: {{bosh_private_key}}
          AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
        attempts: 5

  - name: ship-it
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: cf-release
          resource: cf-release-develop
          params:
            submodules: none
        - get: go-buildpack-github-release
          passed: [ cats ]
        - get: nodejs-buildpack-github-release
          passed: [ cats ]
        - get: python-buildpack-github-release
          passed: [ cats ]
        - get: ruby-buildpack-github-release
          passed: [ cats ]
        - get: php-buildpack-github-release
          passed: [ cats ]
        - get: staticfile-buildpack-github-release
          passed: [ cats ]
        - get: binary-buildpack-github-release
          passed: [ cats ]
        - get: dotnet-core-buildpack-github-release
          passed: [ cats ]
  - name: ship-it-java
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: cf-release
          resource: cf-release-develop
          params:
            submodules: none
        - get: java-buildpack-github-release
          passed: [ cats ]
        - get: java-offline-buildpack-github-release
          passed: [ cats ]
<% supported_languages.each do |language| %>
  <% if language != 'dotnet-core'%>
  - name: deprecated-bosh-release-<%= language %>
    serial: true
    serial_groups: [cf-release-buildpacks]
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: release
          resource: buildpack-releases
        - get: blob
          resource: <%= language %>-buildpack-github-release
          trigger: true
          passed: [ <%= language.include?('java') ? 'ship-it-java' : 'ship-it' %> ]
      - do:
        - task: convert release version to version resource
          file: buildpacks-ci/tasks/convert-release-to-version/task.yml
        - task: create-bosh-release
          file: buildpacks-ci/tasks/create-bosh-release/task.yml
          params:
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            <% case language
               when /offline/ %>
            BLOB_GLOB: ../blob/java-buildpack-offline*.zip
            BLOB_NAME: java-buildpack
            <% when /java/ %>
            BLOB_GLOB: ../blob/java-buildpack-v*.zip
            BLOB_NAME: java-buildpack
            <% else %>
            BLOB_GLOB: ../blob/<%= language %>*.zip
            BLOB_NAME: <%= language %>-buildpack
            <% end %>
            RELEASE_NAME: <%= language %>-buildpack
            RELEASE_DIR: release/<%= language %>-buildpack-release
        - put: buildpack-releases
          params:
            repository: release-artifacts
            rebase: true
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
    <% end %>
  - name: update-<%= language %>-buildpack-bosh-release
    serial: true
    serial_groups: [cf-release-buildpacks]
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: release
          resource: <%= language %>-buildpack-bosh-release
        - get: blob
          resource: <%= language %>-buildpack-github-release
          trigger: true
          passed: [ <%= language.include?('java') ? 'ship-it-java' : 'ship-it' %> ]
      - do:
        - task: convert release version to version resource
          file: buildpacks-ci/tasks/convert-release-to-version/task.yml
        - task: create-bosh-release
          file: buildpacks-ci/tasks/create-bosh-release/task.yml
          params:
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            <% case language
               when /offline/ %>
            BLOB_GLOB: blob/java-buildpack-offline*.zip
            BLOB_NAME: java-buildpack
            <% when /java/ %>
            BLOB_GLOB: blob/java-buildpack-v*.zip
            BLOB_NAME: java-buildpack
            <% else %>
            BLOB_GLOB: blob/<%= language %>*.zip
            BLOB_NAME: <%= language %>-buildpack
            <% end %>
            RELEASE_NAME: <%= language %>-buildpack
            RELEASE_DIR: release
        - put: <%= language %>-buildpack-bosh-release
          params:
            repository: release-artifacts
            rebase: true
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: cf-release for <%= language %>
    serial: true
    serial_groups: [cf-release-buildpacks]
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: buildpack-bosh-release
          resource: <%= language %>-buildpack-bosh-release
        - get: cf-release
          resource: cf-release-develop
        - get: buildpack-github-release
          resource: <%= language %>-buildpack-github-release
          <% case language; when /offline/ %>
          params:
            globs:
              - java-buildpack-offline-v*.zip
          <% when /java/ %>
          params:
            globs:
              - java-buildpack-v*.zip
          <% end %>
          passed:
          <% if language != 'dotnet-core'%>
            - deprecated-bosh-release-<%= language %>
          <% end %>
            - update-<%= language %>-buildpack-bosh-release
          trigger: true
      - do:
        - task: check-can-i-bump
          file: buildpacks-ci/tasks/check-can-i-bump/task.yml
        - task: upload-blobs
          file: buildpacks-ci/tasks/upload-bosh-blobs-to-cf-release/task.yml
          params:
            ACCESS_KEY_ID: {{blobstore-access-key}}
            SECRET_ACCESS_KEY: {{blobstore-secret-key}}
            BUILDPACK: <%= language %>
          privileged: true
        - put: cf-release-develop
          params:
            repository: cf-release-artifacts
            rebase: true
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
