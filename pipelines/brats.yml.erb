<% languages = %w(apt binary dotnet-core go nodejs python ruby staticfile php nginx) %>
<% stacks = {
"apt" => %w(cflinuxfs4),
"binary" => %w(cflinuxfs4 windows),
"dotnet-core" => %w(cflinuxfs4),
"go" => %w(cflinuxfs4),
"nginx" => %w(cflinuxfs4),
"nodejs" => %w(cflinuxfs4),
"php" => %w(cflinuxfs4),
"python" => %w(cflinuxfs4),
"ruby" => %w(cflinuxfs4),
"staticfile" => %w(cflinuxfs4),
} %>

# The intention of this pipeline is to test against the latest LTS platform.
# This is to make sure that even if a buildpack hasn't had changes/released in
# a while, it stills works well with the latest platform out there.
<% tas_version =  '4.0' %>
<% tas_pool_name = 'tas_four' %>

---
resource_types:
  - name: cron
    type: docker-image
    source:
      repository: cfbuildpacks/cron-resource

  - name: cf-space-resource
    type: docker-image
    source:
      repository: cfbuildpacks/cf-space-resource

  - name: shepherd
    type: registry-image
    source:
      repository: us-west2-docker.pkg.dev/shepherd-268822/shepherd2/concourse-resource
      tag: v1

resources:
  - name: nightly-trigger
    type: cron
    source:
      expression: 0 6 * * *
      location: {{current-timezone}}

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}

  - name: env-repo
    type: git
    source:
      uri: git@github.com:cloudfoundry/buildpacks-envs
      branch: master
      private_key: '((cloudfoundry-buildpacks-envs-deploy-key.private_key))'

  - name: shepherd-tas-<%= tas_version %>-environment
    type: shepherd
    source:
      url: https://v2.shepherd.run
      service-account-key: ((shepherd-buildpacks-service-account-key))
      lease:
        namespace: buildpacks
        pool:
          namespace: official
          name: <%= tas_pool_name %>
      compatibility-mode: environments-app

  - name: shepherd-cf-environment
    type: shepherd
    source:
      url: https://v2.shepherd.run
      service-account-key: ((shepherd-buildpacks-service-account-key))
      lease:
        namespace: buildpacks
        pool:
          namespace: official
          name: cfd
      compatibility-mode: environments-app

  - name: cf-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment

<% languages.each do |language| %>
  - name: buildpack-<%= language %>
    type: git
    webhook_token: ob0aigh3
    source:
      uri: git@github.com:cloudfoundry/<%= language %>-buildpack.git
      private_key: ((cloudfoundry-<%= language %>-buildpack-deploy-key.private_key))
      branch: master
<% end %>

jobs:
  <% languages.each do |language| %>
  - name: brats-<%= language %>-lts
    serial: true
    public: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: buildpack
          resource: buildpack-<%= language %>
        - get: nightly-trigger
          trigger: true
      - do:
        - put: shepherd-tas-<%= tas_version %>-environment
          params:
            action: create
            duration: 6h
            resource: shepherd-tas-<%= tas_version %>-environment
            description: |
              Running <%= language %>-buildpack brats-lts job.
        - task: create-cf-space
          attempts: 5
          file: buildpacks-ci/tasks/create-cf-space-toolsmiths/task.yml
          input_mapping:
            environment: shepherd-tas-<%= tas_version %>-environment
          params:
            ORG: pivotal

        - task: run-brats-cflinuxfs4
          file: buildpacks-ci/tasks/<%= language.to_s == 'php' ? 'run-bp-brats-jammy' : 'run-bp-brats' %>/task.yml
          attempts: <%= if language == "ruby" then 3 else 1 end %>
          params:
            CF_STACK: cflinuxfs4
            GINKGO_ATTEMPTS: 4
            GINKGO_NODES: 6
        ensure:
          in_parallel:
          - put: shepherd-tas-<%= tas_version %>-environment
            params:
              action: release
              resource: shepherd-tas-<%= tas_version %>-environment
  - name: brats-<%= language %>-edge
    serial: true
    public: true
    plan:
      - do:
        - put: shepherd-cf-environment
          params:
            action: create
            duration: 6h
            resource: shepherd-cf-environment
            description: |
              Running <%= language %>-buildpack brats-edge job.
          timeout: 6h
        - in_parallel:
          - get: buildpacks-ci
          - get: env-repo
          - get: buildpack
            resource: buildpack-<%= language %>
          - get: nightly-trigger
            trigger: true
<% if stacks[language].include?('windows')%>
          - get: cf-deployment
        - task: redeploy
          file: buildpacks-ci/tasks/cf/redeploy/task.yml
          input_mapping:
            ci: buildpacks-ci
            lock: shepherd-cf-environment
          params:
            DEPLOY_WINDOWS_CELL: true
<% end %>
        - in_parallel:
<% stacks[language].each do |stack| %>
          - do:
            - task: create-cf-space
              attempts: 5
              file: buildpacks-ci/tasks/cf/create-space/task.yml
              params:
                DOMAIN: cf-app.com
                ORG: pivotal
              input_mapping:
                ci: buildpacks-ci
                lock: shepherd-cf-environment
            - task: run-brats-<%= stack %>
              file: buildpacks-ci/tasks/<%= language.to_s == 'php' ? 'run-bp-brats-jammy' : 'run-bp-brats' %>/task.yml
              input_mapping: {cf-space: space}
              params:
                CF_STACK: <%= stack %>
                GINKGO_ATTEMPTS: 4
                GINKGO_NODES: 6
<% end %>
        ensure:
          put: shepherd-cf-environment
          params:
            action: release
            resource: shepherd-cf-environment
<% end %>
