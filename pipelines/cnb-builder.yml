<%
  require 'yaml'
  config = YAML.load_file(File.join(__dir__, 'config', 'cnb-builders.yml'))

  builders = config['builders']
  all_cnbs = config['cnbs']
  cnbs = all_cnbs.select{|cnb, data| data["public"]}
  piv_cnbs = all_cnbs.select{|cnb, data| data["private"]}
  cnb_child_images = %w(run build)
%>

---
resources:
  # Github Repos
  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: master

  - name: cnb-builder
    type: git
    source:
      uri: https://github.com/cloudfoundry/cnb-builder
      branch: master

  - name: p-cnb-builder
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-cnb-builder
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master

<% all_cnbs.each do |cnb_name, data| %>
  - name: <%= cnb_name %>-cnb
    type: git
    check_every: 15m # to avoid thundering herd of cnb autobumping
    source:
      uri: <%= data['git_repo'] %>
      private_key: {{cf-buildpacks-eng-github-ssh-key}}

  - name: <%= cnb_name %>-cnb-release # move this github release resource
    type: git
    check_every: 15m # to avoid thundering herd of cnb autobumping
    source:
      uri: <%= data['git_repo'] %>
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      tag_filter: "v*"
<% end %>

  - name: tiny-image
    type: docker-image
    source:
      repository: cloudfoundry/tiny
      tag: latest
      email: {{buildpacks-docker-user-email}}
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}

  - name: tiny-cnb-base-image
    type: docker-image
    source:
      repository: cloudfoundry/cnb-base
      tag: tiny
      email: {{buildpacks-docker-user-email}}
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}

  - name: tiny-cnb-run-image
    type: docker-image
    source:
      repository: cloudfoundry/cnb-run
      tag: tiny
      email: {{buildpacks-docker-user-email}}
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}

  - name: tiny-stack-base-git
    type: git
    source:
      uri: https://github.com/cloudfoundry/stacks
      paths: [ tiny/base/* ]
      branch: master

  - name: tiny-stack-cnb-git
    type: git
    source:
      uri: https://github.com/cloudfoundry/stacks
      paths: [ tiny/cnb/* ]
      branch: master

  - name: new-cves
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      branch: master
      paths: [ new-cve-notifications/ubuntu18.04-tiny.yml ]
      private_key: {{public-buildpacks-ci-robots-private-key}}

  - name: packager
    type: git
    source:
      uri: https://github.com/cloudfoundry/libcfbuildpack
      branch: master

  - name: pack-release
    type: git
    source:
      uri: https://github.com/buildpack/pack.git
      branch: master
      tag_filter: "v*"

  - name: pack-master
    type: git
    source:
      uri: https://github.com/buildpack/pack.git
      branch: master

  - name: cnb-lifecycle-release
    type: github-release
    source:
      repository: lifecycle
      user: buildpack
      access_token: {{buildpacks-github-token}}

  # Dockerfiles for cnb bionic stack images
<% cnb_child_images.each do |image_type| %>
  - name: cflinuxfs3-<%= image_type %>-cnb-dockerfile
    type: git
    source:
      uri: https://github.com/cloudfoundry/stacks
      branch: master
      paths: [ "cflinuxfs3/cnb/<%= image_type %>/**" ]

  - name: bionic-<%= image_type %>-base-dockerfile
    type: git
    source:
      uri: https://github.com/cloudfoundry/stacks
      branch: master
      paths: [ "bionic/base/<%= image_type %>/**" ]

  - name: bionic-<%= image_type %>-cnb-dockerfile
    type: git
    source:
      uri: https://github.com/cloudfoundry/stacks
      branch: master
      paths: [ "bionic/cnb/<%= image_type %>/**" ]
<% end %>

  # Versions
  - name: cflinuxfs3-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/cflinuxfs3
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: cflinuxfs3-piv-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/cflinuxfs3-piv
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: bionic-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/bionic
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: bionic-piv-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/bionic-piv
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  # Docker Images
  - name: builder-image
    type: docker-image
    source:
      email: cf-buildpacks-eng@pivotal.io
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      repository: cloudfoundry/cnb

  - name: pivotal-builder-image
    type: docker-image
    source:
      repository: gcr.io:443/cf-buildpacks/p-cnb-builder # port needed for private repos
      username: _json_key
      password: {{gcp-service-account-key}}

  # CNB stack images
<% cnb_child_images.each do |image_type| %>
  - name: bionic-<%= image_type %>-base-image
    type: docker-image
    source:
      repository: cloudfoundry/<%= image_type %>
      tag: base
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io

  - name: bionic-<%= image_type %>-cnb-image
    type: docker-image
    source:
      repository: cloudfoundry/<%= image_type %>
      tag: base-cnb
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io

  - name: cflinuxfs3-<%= image_type %>-base-image
    type: docker-image
    source:
      repository: cloudfoundry/<%= image_type %>
      tag: full
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io

  - name: cflinuxfs3-<%= image_type %>-cnb-image
    type: docker-image
    source:
      repository: cloudfoundry/<%= image_type %>
      tag: full-cnb
      email: {{buildpacks-docker-user-email}}
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
<% end %>

jobs:
  - name: test-tiny
    plan:
      - get: tiny-stack-base-git
        trigger: true
      - get: new-cves
        trigger: true
      - task: integration-test
        privileged: true
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: pivotalnavcon/docker-go
          inputs:
            - name: tiny-stack-base-git
          run:
            path: /bin/bash
            args:
              - -c
              - |
                  set -eux -o pipefail
                  source /opt/resource/common.sh
                  sanitize_cgroups
                  start_docker 3 3 "" ""

                  apk add coreutils ncurses curl
                  curl -#L https://github.com/bats-core/bats-core/archive/master.zip | unzip -
                  bash bats-core-master/install.sh /usr/local

                  cd tiny-stack-base-git/tiny/base/run
                  docker build -t tiny .
                  bats -t ./tests/test.bats && bats -t ./tests/testapp.bats

  - name: build-and-publish-tiny-base
    public: true
    plan:
      - get: tiny-stack-base-git
        passed: [test-tiny]
        trigger: true
      - get: new-cves
        passed: [test-tiny]
        trigger: true
      - put: tiny-image
        params:
          build: tiny-stack-base-git/tiny/base/run
          build_args:
            squash: squash
        attempts: 2
      - put: tiny-cnb-base-image
        params:
          build: tiny-stack-base-git/tiny/base/run
          build_args:
            squash: squash
        attempts: 2

  - name: build-and-publish-tiny-cnb
    public: true
    plan:
      - get: tiny-stack-cnb-git
        trigger: true
      - get: tiny-cnb-base-image
        passed: [ build-and-publish-tiny-base ]
        trigger: true
      - put: tiny-cnb-run-image
        params:
          build: tiny-stack-cnb-git/tiny/cnb/run
          build_args:
            squash: squash
        attempts: 2


<% cnb_child_images.each do |image_type| %>
  - name: update-cflinuxfs3-<%= image_type %>-cnb-image
    public: true
    plan:
      - get: cflinuxfs3-<%= image_type %>-cnb-dockerfile
        trigger: true
      - get: cflinuxfs3-<%= image_type %>-base-image
        trigger: true
      - put: cflinuxfs3-<%= image_type %>-cnb-image
        params:
          build: cflinuxfs3-<%= image_type %>-cnb-dockerfile/cflinuxfs3/cnb/<%= image_type %>
          build_args:
            base_image: "cloudfoundry/<%= image_type %>:full"
            squash: squash
        attempts: 2

  - name: update-bionic-<%= image_type %>-base-image
    public: true
    plan:
    - get: bionic-<%= image_type %>-base-dockerfile
      trigger: true
    - put: bionic-<%= image_type %>-base-image
      params:
        build: bionic-<%= image_type %>-base-dockerfile/bionic/base/<%= image_type %>
        build_args:
          squash: squash
        attempts: 2

  - name: update-bionic-<%= image_type %>-cnb-image
    public: true
    plan:
    - get: bionic-<%= image_type %>-cnb-dockerfile
      trigger: true
    - get: bionic-<%= image_type %>-base-image
      trigger: true
      passed:
        - update-bionic-<%= image_type %>-base-image
    - put: bionic-<%= image_type %>-cnb-image
      params:
        build: bionic-<%= image_type %>-cnb-dockerfile/bionic/cnb/<%= image_type %>
        build_args:
          base_image: "cloudfoundry/<%= image_type %>:base"
          squash: squash
        attempts: 2
        tag_as_latest: true
<% end %>

<% builders.each do |builder_name, builder_data|
     all_cnb_hash = builder_data["private"] ? piv_cnbs : cnbs
     cnb_hash = all_cnb_hash.reject{|cnb, data| data.fetch("skip_stack",[]).include? builder_data.fetch("stack")} %>
  - name: smoke-test-<%= builder_name %>
    plan:
      - in_parallel:
        - get: cnb-builder
          trigger: true
          <% if builder_data["private"] %>
          resource: p-cnb-builder
          <% end %>
        - get: <%= builder_data["stack"] %>-build-cnb-image
          trigger: true
          passed:
            - update-<%= builder_data["stack"] %>-build-cnb-image
        - get: <%= builder_data["stack"] %>-run-cnb-image
          trigger: true
          passed:
            - update-<%= builder_data["stack"] %>-run-cnb-image
        <% cnb_hash.each do |cnb_name, cnb_data| %>
        - get: <%= cnb_name %>-cnb
          trigger: true
        <% end %>
        - get: pack # do we need this anymore
          resource: pack-master
          trigger: true
        - get: buildpacks-ci
        - get: version
          params: {pre: "rc"}
          resource: <%= builder_data["version-resource"] %>
        - get: packager
        - get: lifecycle # use lifecycle version in order.toml instead?
          resource: cnb-lifecycle-release
          trigger: true
      # Should create-builder-image just ls *-cnb?
      - task: get-cnb-sources
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfbuildpacks/ci
          inputs:
            <% cnb_hash.keys.each do |cnb_name| %>
            - name: <%= cnb_name %>-cnb
            <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
                <% cnb_hash.keys.each do |cnb_name| %>
                  cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
                <% end %>
      - task: create-builder-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
          <% (builder_data['builder-image-params'] || []).each do |key, value| %>
          <%= key %>: <%= value%>
          <% end %>
      - task: smoke-test-builder
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: <%= builder_data["stack"] %>
          REPO: <%= builder_data.fetch("builder-image-params",[]).fetch("REPO") %>
          RUN_IMAGE: <%= builder_data.fetch("builder-image-params",[]).fetch("RUN_IMAGE") %>

  - name: release-<%=builder_name%>
    plan:
      - in_parallel:
        - get: <%= builder_data["stack"] %>-build-cnb-image
          trigger: true
          passed:
            - update-<%= builder_data["stack"] %>-build-cnb-image
        - get: <%= builder_data["stack"] %>-run-cnb-image
          trigger: true
          passed:
            - update-<%= builder_data["stack"] %>-run-cnb-image
        <% cnb_hash.keys.each do |cnb_name| %>
        - get: <%= cnb_name %>-cnb
          resource: <%= cnb_name %>-cnb-release
        <% end %>
        - get: cnb-builder
          <% if builder_data["private"] %>
          resource: p-cnb-builder
          <% end %>
        - get: pack
          resource: pack-release
          trigger: true
        - get: packager
        - get: buildpacks-ci
        - get: version
          params: {bump: "final"}
          resource: <%= builder_data.fetch("version-resource") %>
        - get: lifecycle
          resource: cnb-lifecycle-release
      - task: get-cnb-sources
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfbuildpacks/ci
          inputs:
              <% cnb_hash.keys.each do |cnb_name| %>
                - name: <%= cnb_name %>-cnb
                <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
                <% cnb_hash.keys.each do |cnb_name| %>
                  cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
                <% end %>
      - task: create-builder-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
          <% (builder_data['builder-image-params'] || []).each do |key, value| %>
          <%= key %>: <%= value%>
          <% end %>
          FINAL: true
      - task: smoke-test-builder
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: <%= builder_data["stack"] %>
          REPO: <%= builder_data.fetch("builder-image-params",[]).fetch("REPO") %>
          RUN_IMAGE: <%= builder_data.fetch("builder-image-params",[]).fetch("RUN_IMAGE") %>
      - put: <%= builder_data["private"] ? "pivotal-":""%>builder-image
        params:
          additional_tags: release-tag/name
          load_file: builder-image/builder.tgz
          load_repository: <%= builder_data.fetch("builder-image-params",[]).fetch("REPO") %> # must match REPO
          load_tag: <%= builder_data["stack"] %>
          tag_file: tag/name
          tag_as_latest: <%= builder_data["stack"] != "bionic" %>
      - put: <%= builder_data.fetch("version-resource") %>
        params:
          bump: patch
<% end %>
