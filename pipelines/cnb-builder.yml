<% cnb_child_images = %w(run build) %>
<% cnb_images = cnb_child_images + ['base'] %>

<%
  $cnbs = {
    'node-engine'              => {'git_repo' => 'https://github.com/cloudfoundry/node-engine-cnb', 'p_cnb' => true},
    'npm'                      => {'git_repo' => 'https://github.com/cloudfoundry/npm-cnb', 'p_cnb' => true},
    'yarn'                     => {'git_repo' => 'https://github.com/cloudfoundry/yarn-cnb', 'p_cnb' => true},
    'python'                   => {'git_repo' => 'https://github.com/cloudfoundry/python-cnb', 'skip_bionic' => true},
    'pip'                      => {'git_repo' => 'https://github.com/cloudfoundry/pip-cnb', 'skip_bionic' => true},
    'pipenv'                   => {'git_repo' => 'https://github.com/cloudfoundry/pipenv-cnb', 'skip_bionic' => true},
    'openjdk'                  => {'git_repo' => 'https://github.com/cloudfoundry/openjdk-cnb'},
    'buildsystem'              => {'git_repo' => 'https://github.com/cloudfoundry/build-system-cnb'},
    'jvmapplication'           => {'git_repo' => 'https://github.com/cloudfoundry/jvm-application-cnb', 'p_cnb' => true},
    'azureapplicationinsights' => {'git_repo' => 'https://github.com/cloudfoundry/azure-application-insights-cnb', 'p_cnb' => true},
    'debug'                    => {'git_repo' => 'https://github.com/cloudfoundry/debug-cnb', 'p_cnb' => true},
    'googlestackdriver'        => {'git_repo' => 'https://github.com/cloudfoundry/google-stackdriver-cnb', 'p_cnb' => true},
    'jmx'                      => {'git_repo' => 'https://github.com/cloudfoundry/jmx-cnb', 'p_cnb' => true},
    'procfile'                 => {'git_repo' => 'https://github.com/cloudfoundry/procfile-cnb', 'p_cnb' => true},
    'dotnet-core-conf'         => {'git_repo' => 'https://github.com/cloudfoundry/dotnet-core-conf-cnb', 'p_cnb' => true},
    'archivexpanding'             => {'git_repo' => 'https://github.com/cloudfoundry/archive-expanding-cnb', 'p_cnb' => true},
    'tomcat'                      => {'git_repo' => 'https://github.com/cloudfoundry/tomcat-cnb', 'p_cnb' => true},
    'jdbc'                        => {'git_repo' => 'https://github.com/cloudfoundry/jdbc-cnb', 'p_cnb' => true},
    'springautoreconfiguration'   => {'git_repo' => 'https://github.com/cloudfoundry/spring-auto-reconfiguration-cnb', 'p_cnb' => true},
    'springboot'                  => {'git_repo' => 'https://github.com/cloudfoundry/spring-boot-cnb', 'p_cnb' => true},
    'distzip'                   => {'git_repo' => 'https://github.com/cloudfoundry/dist-zip-cnb', 'p_cnb' => true },
  }

  $pcnbs = {
    'p-openjdk'                   => {'git_repo' => 'git@github.com:pivotal-cf/p-openjdk-cnb.git'},
    'p-appdynamics'               => {'git_repo' => 'git@github.com:pivotal-cf/p-appdynamics-cnb.git'},
    'p-buildsystem'               => {'git_repo' => 'git@github.com:pivotal-cf/p-build-system-cnb.git'},
    'p-aspectj'                   => {'git_repo' => 'git@github.com:pivotal-cf/p-aspectj-cnb.git'},
    'p-caintroscope'              => {'git_repo' => 'git@github.com:pivotal-cf/p-ca-introscope-cnb.git'},
    'p-clientcertificatemapper'   => {'git_repo' => 'git@github.com:pivotal-cf/p-client-certificate-mapper-cnb.git'},
    'p-elasticapm'                => {'git_repo' => 'git@github.com:pivotal-cf/p-elastic-apm-cnb.git'},
    'p-jacoco'                    => {'git_repo' => 'git@github.com:pivotal-cf/p-jacoco-cnb.git'},
    'p-jprofiler'                 => {'git_repo' => 'git@github.com:pivotal-cf/p-jprofiler-cnb.git'},
    'p-jrebel'                    => {'git_repo' => 'git@github.com:pivotal-cf/p-jrebel-cnb.git'},
    'p-newrelic'                  => {'git_repo' => 'git@github.com:pivotal-cf/p-new-relic-cnb.git'},
    'p-overops'                   => {'git_repo' => 'git@github.com:pivotal-cf/p-overops-cnb.git'},
    'p-riverbedappinternals'      => {'git_repo' => 'git@github.com:pivotal-cf/p-riverbed-appinternals-cnb.git'},
    'p-skywalking'                => {'git_repo' => 'git@github.com:pivotal-cf/p-skywalking-cnb.git'},
    'p-yourkit'                   => {'git_repo' => 'git@github.com:pivotal-cf/p-yourkit-cnb.git'},
  }

  def piv_cnbs
    $cnbs.select{|k,v|v['p_cnb']}.merge($pcnbs)
  end
%>


---
resources:
  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: master

  - name: cnb-builder
    type: git
    source:
      uri: https://github.com/cloudfoundry/cnb-builder
      branch: master

  - name: p-cnb-builder
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-cnb-builder
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master

  <% $cnbs.keys.each do |cnb_name| %>
  - name: <%= cnb_name %>-cnb
    type: git
    source:
      uri: <%= $cnbs[cnb_name]['git_repo'] %>
      private_key: {{cf-buildpacks-eng-github-ssh-key}}

  - name: <%= cnb_name %>-cnb-release
    type: git
    source:
      uri: <%= $cnbs[cnb_name]['git_repo'] %>
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      tag_filter: "v*"
  <% end %>

  <% $pcnbs.each do |cnb_name, data| %>
  - name: <%= cnb_name %>-cnb
    type: git
    source:
      uri: <%= data['git_repo'] %>
      private_key: {{cf-buildpacks-eng-github-ssh-key}}

  - name: <%= cnb_name %>-cnb-release
    type: git
    source:
      uri: <%= data['git_repo'] %>
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      tag_filter: "v*"
  <% end %>

  - name: packager
    type: git
    source:
      uri: https://github.com/cloudfoundry/libcfbuildpack
      branch: master

  - name: cflinuxfs3-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/cflinuxfs3
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: cflinuxfs3-piv-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/cflinuxfs3-piv
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: bionic-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/bionic
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: builder-image
    type: docker-image
    source:
      email: cf-buildpacks-eng@pivotal.io
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      repository: cloudfoundry/cnb

  - name: pivotal-builder-image
    type: docker-image
    source:
      repository: gcr.io:443/cf-buildpacks/p-cnb-builder # port needed for private repos
      username: _json_key
      password: {{gcp-service-account-key}}

  # Rootfs Docker Image
  - name: cflinuxfs3-image
    type: docker-image
    source:
      repository: cloudfoundry/cflinuxfs3
      username: {{dockerhub-cflinuxfs-username}}
      password: {{dockerhub-cflinuxfs-password}}
      email: cf-buildpacks-eng@pivotal.io

<% cnb_images.each do |image_type| %>
  - name: cflinuxfs3-cnb-<%= image_type %>-image
    type: docker-image
    check_every: 15s
    source:
      repository: cfbuildpacks/cflinuxfs3-cnb-experimental
      tag: <%= image_type %>
      email: {{buildpacks-docker-user-email}}
      username: {{buildpacks-docker-user-username}}
      password: {{buildpacks-docker-user-password}}

  - name: cloudfoundry-cflinuxfs3-cnb-<%= image_type %>-image
    type: docker-image
    check_every: 15s
    source:
      repository: cloudfoundry/cnb-<%= image_type %>
      tag: cflinuxfs3
      email: {{buildpacks-docker-user-email}}
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
<% end %>

  - name: pack-release
    type: git
    source:
      uri: https://github.com/buildpack/pack.git
      branch: master
      tag_filter: "v*"

  - name: pack-master
    type: git
    source:
      uri: https://github.com/buildpack/pack.git
      branch: master

  # Dockerfiles for cnb stack images
  <% cnb_images.each do |image_type| %>
  - name: cflinuxfs3-cnb-<%= image_type %>-dockerfile-master
    type: git
    check_every: 15s
    source:
      uri: https://github.com/cloudfoundry/cflinuxfs3
      branch: master
      paths: [ "cnb/<%= image_type %>/**" ]
  <% end %>

  - name: cnb-lifecycle-master
    type: git
    source:
      uri: https://github.com/buildpack/lifecycle
      branch: master

  - name: cnb-lifecycle-release
    type: github-release
    source:
      repository: lifecycle
      user: buildpack
      access_token: {{buildpacks-github-token}}

jobs:
  - name: update-cflinuxfs3-cnb-base-image
    public: true
    plan:
      # Changes in cnb stack image Dockerfiles
      - get: cflinuxfs3-cnb-base-dockerfile-master
        trigger: true
      # Changes in lifecycle repo should trigger an update for base
      - get: cnb-lifecycle-master
        trigger: true
      # Changes in cflinuxfs3 image should trigger an update for base
      - get: cflinuxfs3-image
        trigger: true
      - put: cflinuxfs3-cnb-base-image
        params:
          build: cflinuxfs3-cnb-base-dockerfile-master/cnb/base
          build_args:
            squash: squash
        attempts: 2
      # update new cloudfoundry-base-image
      - put: cloudfoundry-cflinuxfs3-cnb-base-image
        params:
          tag_as_latest: true
          build: cflinuxfs3-cnb-base-dockerfile-master/cnb/base
          build_args:
            squash: squash
        attempts: 2

<% cnb_child_images.each do |image_type| %>
  - name: update-cflinuxfs3-cnb-<%= image_type %>-image
    public: true
    plan:
      # Changes in cnb stack image Dockerfiles
      - get: cflinuxfs3-cnb-<%= image_type %>-dockerfile-master
        trigger: true
      # Changes in base image should also trigger an update for children
      - get: cloudfoundry-cflinuxfs3-cnb-base-image
        trigger: true
        passed:
          - update-cflinuxfs3-cnb-base-image
      - put: cflinuxfs3-cnb-<%= image_type %>-image
        params:
          build: cflinuxfs3-cnb-<%= image_type %>-dockerfile-master/cnb/<%= image_type %>
          build_args:
            squash: squash
        attempts: 2
      - put: cloudfoundry-cflinuxfs3-cnb-<%= image_type %>-image
        params:
          tag_as_latest: true
          build: cflinuxfs3-cnb-<%= image_type %>-dockerfile-master/cnb/<%= image_type %>
          build_args:
            squash: squash
        attempts: 2
<% end %>

  - name: smoke-test-cf-builder-cflinuxfs3
    plan:
      - aggregate:
        - get: cnb-builder
          trigger: true
        - get: cloudfoundry-cflinuxfs3-cnb-base-image
          trigger: true
          passed:
            - update-cflinuxfs3-cnb-run-image
            - update-cflinuxfs3-cnb-build-image
      <% cnb_child_images.each do |image_type| %>
        - get: cflinuxfs3-cnb-<%= image_type %>-dockerfile-master
          trigger: true
          passed:
            - update-cflinuxfs3-cnb-<%= image_type %>-image
        - get: cloudfoundry-cflinuxfs3-cnb-<%= image_type %>-image
          params: {skip_download: true}
        <% end %>
        <% $cnbs.keys.each do |cnb_name| %>
        - get: <%= cnb_name %>-cnb
          trigger: true
        <% end %>
        - get: pack
          trigger: true
          resource: pack-master
        - get: packager
        - get: buildpacks-ci
        - get: version
          params: {pre: "rc"}
          resource: cflinuxfs3-version
        - get: lifecycle
          resource: cnb-lifecycle-release
          trigger: true
      - task: get-cnb-sources
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfbuildpacks/ci
          inputs:
            <% $cnbs.keys.each do |cnb_name| %>
            - name: <%= cnb_name %>-cnb
            <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
                <% $cnbs.keys.each do |cnb_name| %>
                  cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
                <% end %>
      - task: create-builder-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
          REPO: cloudfoundry/cnb
          STACK: "org.cloudfoundry.stacks.cflinuxfs3"
          BUILD_IMAGE: "cloudfoundry/cnb-build:cflinuxfs3"
          RUN_IMAGE: "cloudfoundry/cnb-run:cflinuxfs3"
          HOST: "hub.docker.com"
      - task: smoke-test-builder
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: cflinuxfs3
          REPO: cloudfoundry/cnb

  - name: release-cf-builder-cflinuxfs3
    plan:
      - aggregate:
        <% cnb_child_images.each do |image_type| %>
        - get: cloudfoundry-cflinuxfs3-cnb-<%= image_type %>-image
          params: {skip_download: true}
        <% end %>
        <% $cnbs.keys.each do |cnb_name| %>
        - get: <%= cnb_name %>-cnb
          resource: <%= cnb_name %>-cnb-release
        <% end %>
        - get: cnb-builder
        - get: pack
          resource: pack-release
          trigger: true
        - get: packager
        - get: buildpacks-ci
        - get: version
          params: {bump: "final"}
          resource: cflinuxfs3-version
        - get: lifecycle
          resource: cnb-lifecycle-release
      - task: get-cnb-sources
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfbuildpacks/ci
          inputs:
            <% $cnbs.keys.each do |cnb_name| %>
            - name: <%= cnb_name %>-cnb
            <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
                <% $cnbs.keys.each do |cnb_name| %>
                  cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
                <% end %>
      - task: create-builder-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
          REPO: cloudfoundry/cnb
          STACK: "org.cloudfoundry.stacks.cflinuxfs3"
          BUILD_IMAGE: "cloudfoundry/cnb-build:cflinuxfs3"
          RUN_IMAGE: "cloudfoundry/cnb-run:cflinuxfs3"
          HOST: "hub.docker.com"
          FINAL: true
      - task: smoke-test-builder
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: cflinuxfs3
          REPO: cloudfoundry/cnb
      - put: builder-image
        params:
          additional_tags: release-tag/name
          load_file: builder-image/builder.tgz
          load_repository: cloudfoundry/cnb # must match REPO
          load_tag: cflinuxfs3
          tag_file: tag/name
          tag_as_latest: true
      - put: cflinuxfs3-version
        params:
          bump: patch

  - name: smoke-test-p-builder-cflinuxfs3
    plan:
      - aggregate:
        - get: cnb-builder
          resource: p-cnb-builder
          trigger: true
        - get: cloudfoundry-cflinuxfs3-cnb-base-image
          trigger: true
          passed:
            - update-cflinuxfs3-cnb-run-image
            - update-cflinuxfs3-cnb-build-image
        <% cnb_child_images.each do |image_type| %>
        - get: cflinuxfs3-cnb-<%= image_type %>-dockerfile-master
          trigger: true
          passed:
            - update-cflinuxfs3-cnb-<%= image_type %>-image
        - get: cloudfoundry-cflinuxfs3-cnb-<%= image_type %>-image
          params: {skip_download: true}
        <% end %>
        <% piv_cnbs.keys.each do |cnb_name| %>
        - get: <%= cnb_name %>-cnb
          trigger: true
        <% end %>
        - get: pack
          resource: pack-master
          trigger: true
        - get: buildpacks-ci
        - get: version
          params: {pre: "rc"}
          resource: cflinuxfs3-piv-version
        - get: packager
        - get: lifecycle
          resource: cnb-lifecycle-release
          trigger: true
      - task: get-cnb-sources
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfbuildpacks/ci
          inputs:
            <% piv_cnbs.keys.each do |cnb_name| %>
            - name: <%= cnb_name %>-cnb
            <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
                <% piv_cnbs.keys.each do |cnb_name| %>
                  cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
                <% end %>
      - task: create-builder-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
          REPO: p-cnb-builder
          STACK: "org.cloudfoundry.stacks.cflinuxfs3"
          BUILD_IMAGE: "cloudfoundry/cnb-build:cflinuxfs3"
          RUN_IMAGE: "cloudfoundry/cnb-run:cflinuxfs3"
          ENTERPRISE: true
      - task: smoke-test-builder
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: cflinuxfs3
          REPO: p-cnb-builder

  - name: release-p-builder-cflinuxfs3
    plan:
      - aggregate:
        <% cnb_child_images.each do |image_type| %>
        - get: cloudfoundry-cflinuxfs3-cnb-<%= image_type %>-image
          params: {skip_download: true}
        <% end %>
        <% piv_cnbs.keys.each do |cnb_name| %>
        - get: <%= cnb_name %>-cnb
          resource: <%= cnb_name %>-cnb-release
        <% end %>
        - get: cnb-builder
          resource: p-cnb-builder
        - get: pack
          resource: pack-release
          trigger: true
        - get: packager
        - get: buildpacks-ci
        - get: version
          params: {bump: "final"}
          resource: cflinuxfs3-piv-version
        - get: lifecycle
          resource: cnb-lifecycle-release
      - task: get-cnb-sources
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfbuildpacks/ci
          inputs:
            <% piv_cnbs.keys.each do |cnb_name| %>
            - name: <%= cnb_name %>-cnb
            <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
                <% piv_cnbs.keys.each do |cnb_name| %>
                  cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
                <% end %>
      - task: create-builder-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
          REPO: p-cnb-builder
          STACK: "org.cloudfoundry.stacks.cflinuxfs3"
          BUILD_IMAGE: "cloudfoundry/cnb-build:cflinuxfs3"
          RUN_IMAGE: "cloudfoundry/cnb-run:cflinuxfs3"
          FINAL: true
          ENTERPRISE: true
      - task: smoke-test-builder
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: cflinuxfs3
          REPO: p-cnb-builder
      - put: pivotal-builder-image
        params:
          additional_tags: release-tag/name
          load_file: builder-image/builder.tgz
          load_repository: p-cnb-builder # must match REPO
          load_tag: cflinuxfs3
          tag_file: tag/name
          tag_as_latest: true
      - put: cflinuxfs3-piv-version
        params:
          bump: patch

  - name: smoke-test-cf-builder-bionic
    plan:
      - aggregate:
        <% $cnbs.keys.each do |cnb_name| %>
        <% next if $cnbs[cnb_name]['skip_bionic'] %>
        - get: <%= cnb_name %>-cnb
          trigger: true
        <% end %>
        - get: pack
          resource: pack-master
          trigger: true
        - get: cnb-builder
        - get: buildpacks-ci
        - get: version
          resource: bionic-version
          params: {pre: "rc"}
        - get: packager
        - get: lifecycle
          resource: cnb-lifecycle-release
          trigger: true
      - task: get-cnb-sources
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: cfbuildpacks/ci
          inputs:
              <% $cnbs.keys.each do |cnb_name| %>
              <% next if $cnbs[cnb_name]['skip_bionic'] %>
                - name: <%= cnb_name %>-cnb
              <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
                <% $cnbs.keys.each do |cnb_name| %>
                <% next if $cnbs[cnb_name]['skip_bionic'] %>
                  cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
                <% end %>
      - task: create-builder-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
          REPO: cloudfoundry/cnb
          STACK: "io.buildpacks.stacks.bionic"
          BUILD_IMAGE: "cnbs/build:0.0.1"
          RUN_IMAGE: "cnbs/run:0.0.1"
          HOST: "hub.docker.com"
      - task: smoke-test-builder
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: bionic
          REPO: cloudfoundry/cnb

  - name: release-cf-builder-bionic
    plan:
    - aggregate:
      <% $cnbs.keys.each do |cnb_name| %>
      <% next if $cnbs[cnb_name]['skip_bionic'] %>
      - get: <%= cnb_name %>-cnb
        resource: <%= cnb_name %>-cnb-release
      <% end %>
      - get: pack
        resource: pack-release
        trigger: true
      - get: cnb-builder
      - get: buildpacks-ci
      - get: version
        resource: bionic-version
        params: {bump: "final"}
      - get: packager
      - get: lifecycle
        resource: cnb-lifecycle-release
    - task: get-cnb-sources
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: cfbuildpacks/ci
        inputs:
            <% $cnbs.keys.each do |cnb_name| %>
            <% next if $cnbs[cnb_name]['skip_bionic'] %>
              - name: <%= cnb_name %>-cnb
            <% end %>
        outputs:
          - name: sources
        run:
          path: bash
          args:
            - -cl
            - |
              <% $cnbs.keys.each do |cnb_name| %>
              <% next if $cnbs[cnb_name]['skip_bionic'] %>
                cp -r <%= cnb_name %>-cnb sources/<%= cnb_name %>-cnb
              <% end %>
    - task: create-builder-image
      file: buildpacks-ci/tasks/create-builder/task.yml
      privileged: true
      params:
        REPO: cloudfoundry/cnb
        STACK: "io.buildpacks.stacks.bionic"
        BUILD_IMAGE: "cnbs/build:0.0.1"
        RUN_IMAGE: "cnbs/run:0.0.1"
        HOST: "hub.docker.com"
        FINAL: true
    - task: smoke-test-builder
      file: buildpacks-ci/tasks/test-builder/task.yml
      privileged: true
      params:
        STACK: bionic
        REPO: cloudfoundry/cnb
    - put: builder-image
      params:
        load_file: builder-image/builder.tgz
        load_repository: cloudfoundry/cnb # must match REPO
        load_tag: bionic
        tag_file: tag/name
        tag_as_latest: false
        additional_tags: release-tag/name
    - put: bionic-version
      params:
        bump: patch
