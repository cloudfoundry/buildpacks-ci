---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final
  - name: cron
    type: docker-image
    source:
      repository: cftoolsmiths/cron-test

resources: ###########################################################################################################

  ## Cron Resource ##

  - name: monday-funday
    type: cron
    source:
      expression: 0 5 * * 1
      location: {{current-timezone}}

  ## Git Repos ##

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}

  - name: runtime-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/runtime-ci
      branch: master

  - name: stacks
    type: git
    source:
      uri: git@github.com:pivotal-cf/stacks-nc.git
      branch: master
      private_key: {{stacks-nc-private-key}}

  - name: new-cves
    type: git
    source:
      uri: {{buildpacks-ci-git-uri}}
      branch: new-cves-stacks-nc
      private_key: {{buildpacks-ci-private-key}}
      paths: [ ubuntu14.04.yml ]

  - name: deployments-buildpacks
    type: git
    source:
      uri: {{deployments-git-uri}}
      private_key: {{deployments-private-key}}
      branch: master

  - name: bosh-lite
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-lite

  - name: cflinuxfs2-rootfs-release
    type: git
    source:
      uri: git@github.com:pivotal-cf/cflinuxfs2-nc-rootfs-release.git
      branch: master
      private_key: {{cflinuxfs2-nc-rootfs-private-key}}

  - name: diego-release
    type: git
    source:
      uri: https://github.com/cloudfoundry/diego-release
      branch: master

  - name: cf-release-develop
    type: git
    source:
      uri: git@github.com:cloudfoundry/cf-release
      branch: develop
      private_key: {{cf-release-private-key}}

  - name: rootfs-pivnet-metadata
    type: git
    source:
      branch: master
      private_key: {{pivotal-cf-buildpacks-ci-robots}}
      uri: git@github.com:pivotal-cf/buildpacks-ci-robots.git
      paths: [ pivnet-metadata/rootfs-nc.yml ]

  ## S3 Buckets ##

  - name: stack-s3
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: cflinuxfs2_nc-(.*).tar.gz
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  - name: receipt-s3
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: cflinuxfs2_receipt_nc-(.*)
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  - name: bosh-release-s3
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: cflinuxfs2-nc-rootfs-(.*).tgz
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  ## BOSH Deployments ##

  - name: stacks-cf-deployment
    type: bosh-deployment
    source:
      target: https://stacks-nc.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{gcp_bosh_lite_admin_password}}
      deployment: cf-warden
      ignore_ssl: true

  - name: stacks-diego-deployment
    type: bosh-deployment
    source:
      target: https://stacks-nc.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{gcp_bosh_lite_admin_password}}
      deployment: cf-warden-diego
      ignore_ssl: true

  - name: stacks-rootfs-deployment
    type: bosh-deployment
    source:
      target: https://stacks-nc.buildpacks.ci.cf-app.com:25555
      username: admin
      password: {{gcp_bosh_lite_admin_password}}
      deployment: rootfs-smoke-test
      ignore_ssl: true

  ## bosh.io Releases ##

  - name: diego-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/diego-release

  - name: garden-runc-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/garden-runc-release

  ## bosh.io stemcell ##

  - name: lite-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent

  ## Github Release ##

  - name: stack-github-release-drafts
    type: github-release
    source:
      drafts: true
      user: pivotal-cf
      repository: stacks-nc
      access_token: {{buildpacks-github-token}}

  - name: stack-github-release-final
    type: github-release
    source:
      drafts: false
      user: pivotal-cf
      repository: stacks-nc
      access_token: {{buildpacks-github-token}}

  ## Semver Versions ##

  - name: version
    type: semver
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      key: versions/stack-nc
      initial_version: 0.1.0-rc.1
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  - name: cflinuxfs2-rootfs-release-version
    type: semver
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      initial_version: 0.1.0-rc.1
      key: versions/cflinuxfs2-rootfs-nc-release
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  ## Slack Alerts ##

  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}

  ## Pivnet Resource ##

  - name: pivnet-production
    type: pivnet
    source:
      endpoint: https://network.pivotal.io
      bucket: pivotalnetwork
      api_token: {{pivnet-apikey}}
      product_slug: rootfs
      access_key_id: {{pivnet-access-key}}
      secret_access_key: {{pivnet-secret-key}}

jobs: ################################################################################################################

  - name: notification
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: monday-funday
          trigger: true
      - task: create-tracker-story
        file: buildpacks-ci/tasks/create-new-stacks-release-story/task.yml
        params:
          TRACKER_PROJECT_ID: {{cf-buildpacks-private-tracker-id}}
          TRACKER_API_TOKEN: {{pivotal-tracker-api-token}}
          TRACKER_REQUESTER_ID: {{cf-buildpacks-requester-id}}

  - name: build-rootfs
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: new-cves
          trigger: true
        - get: stacks
        - get: version
          params: { pre: rc }
        - get: cflinuxfs2-rootfs-release-version
          params: { pre: rc }
        - get: monday-funday
          passed: [ "notification" ]
          trigger: true
      - do:
        - task: make-rootfs
          file: buildpacks-ci/tasks/make-rootfs/task.yml
          privileged: true
          params:
            STACKS_SUFFIX: _nc
        - task: test-rootfs
          file: buildpacks-ci/tasks/test-rootfs/task.yml
          privileged: true
          params:
            STACKS_SUFFIX: _nc
        - put: stack-s3
          params:
            from: stacks-artifacts/cflinuxfs2_nc-(.*).tar.gz
            to: /rootfs-nc/
        - put: receipt-s3
          params:
            from: receipt-artifacts/cflinuxfs2_receipt_nc-(.*)
            to: /rootfs-nc/
        - put: version
          params: { file: version/number }
        - put: cflinuxfs2-rootfs-release-version
          params: { file: cflinuxfs2-rootfs-release-version/number }

  - name: recreate-bosh-lite
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: deployments-buildpacks
        - get: buildpacks-ci
        - get: new-cves
          passed: [ build-rootfs ]
        - get: stack-s3
          passed: [ build-rootfs ]
        - get: version
          passed: [ build-rootfs ]
        - get: cflinuxfs2-rootfs-release-version
          passed: [ build-rootfs ]
        - get: receipt-s3
          passed: [ build-rootfs ]
          trigger: true
        - get: stacks
          passed: [ build-rootfs ]
      - task: recreate-bosh-lite
        file: buildpacks-ci/tasks/recreate-bosh-lite/task.yml
        params:
          IAAS: aws
          #GCP_BOSH_DIRECTOR_USER: {{gcp_bosh_admin_user}}
          #GCP_BOSH_DIRECTOR_PASSWORD: {{gcp_bosh_admin_password}}
          #GCP_BOSH_LITE_NAME: stacks-nc-gcp-bosh-lite
          DEPLOYMENT_NAME: stacks-nc.buildpacks.ci
          BOSH_USER: {{bosh_user}}
          BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
          BOSH_TARGET: stacks-nc.buildpacks.ci.cf-app.com
          BOSH_LITE_NAME: stacks-nc.buildpacks.ci
          RUBYGEM_MIRROR: {{rubygem-mirror}}
          BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
          BOSH_LITE_ADMIN_PASSWORD: {{gcp_bosh_lite_admin_password}}
          BOSH_LITE_HM_PASSWORD: {{gcp_bosh_lite_hm_password}}
          BOSH_LITE_NATS_PASSWORD: {{gcp_bosh_lite_nats_password}}
          BOSH_LITE_BLOBSTORE_AGENT_PASSWORD: {{gcp_bosh_lite_blobstore_agent_password}}
          BOSH_LITE_BLOBSTORE_DIRECTOR_PASSWORD: {{gcp_bosh_lite_blobstore_director_password}}
          BOSH_LITE_POSTGRES_PASSWORD: {{gcp_bosh_lite_postgres_password}}
          ######## For AWS Deploys ##################
          BOSH_PRIVATE_KEY: {{bosh_private_key}}
          AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
          BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
          BOSH_LITE_SUBNET_ID: {{bosh_lite_subnet_id}}
          BOSH_LITE_SECURITY_GROUP: {{bosh_lite_security_group}}
        attempts: 5
        ensure:
          put: deployments-buildpacks
          params:
            repository: deployments-buildpacks-artifacts
            rebase: true

  - name: generate-stacks-manifests
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: bosh-lite
        - get: cf-release
          resource: cf-release-develop
        - get: diego-release
        - get: cflinuxfs2-rootfs-release
        - get: lite-stemcell
        - get: new-cves
          passed: [ recreate-bosh-lite ]
        - get: deployments-buildpacks
          passed: [ recreate-bosh-lite ]
        - get: stack-s3
          passed: [ recreate-bosh-lite ]
        - get: version
          passed: [ recreate-bosh-lite ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ recreate-bosh-lite ]
        - get: receipt-s3
          passed: [ recreate-bosh-lite ]
        - get: stacks
          passed: [ recreate-bosh-lite ]
      - do:
        - task: generate-rootfs-smoke-test-manifest
          file: buildpacks-ci/tasks/make-rootfs-smoke-test-manifest/task.yml
          params:
            DEPLOYMENT_NAME: stacks-nc.buildpacks.ci
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
            BOSH_TARGET: stacks-nc.buildpacks.ci.cf-app.com
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: rootfs-smoke-test-manifest-artifacts
            rebase: true
        - task: generate-cf-and-diego-manifest
          file: buildpacks-ci/tasks/generate-cf-and-diego-manifests/task.yml
          params:
            DEPLOYMENT_NAME: stacks-nc.buildpacks.ci
            CI_CF_PASSWORD: {{ci-cf-password}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
            BOSH_TARGET: stacks-nc.buildpacks.ci.cf-app.com
            BOSH_LITE_NAME: stacks-nc.buildpacks.ci
            RUBYGEM_MIRROR: {{rubygem-mirror}}
            BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
            ROOTFS_RELEASE: cflinuxfs2-nc-rootfs
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: generate-manifest-artifacts
            rebase: true

  - name: deploy-rootfs-to-stacks-nc
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: lite-stemcell
        - get: buildpacks-ci
        - get: new-cves
          passed: [ 'generate-stacks-manifests' ]
        - get: deployments-buildpacks
          passed: [ 'generate-stacks-manifests' ]
        - get: cf-release
          resource: cf-release-develop
          passed: [ 'generate-stacks-manifests' ]
        - get: cflinuxfs2-rootfs-release
          passed: [ 'generate-stacks-manifests' ]
        - get: stack-s3
          passed: [ 'generate-stacks-manifests' ]
        - get: version
          passed: [ 'generate-stacks-manifests' ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ 'generate-stacks-manifests' ]
        - get: receipt-s3
          passed: [ 'generate-stacks-manifests' ]
        - get: stacks
          passed: [ 'generate-stacks-manifests' ]
      - do:
        - task: overwrite-cflinuxfs2-rootfs-release
          file: buildpacks-ci/tasks/overwrite-cflinuxfs2-rootfs-release/task.yml
          params:
            ROOTFS_RELEASE: cflinuxfs2-nc-rootfs
        - put: stacks-rootfs-deployment
          params:
            manifest: deployments-buildpacks/deployments/stacks-nc.buildpacks.ci/rootfs-smoke-test.yml
            stemcells: [lite-stemcell/*.tgz]
            releases: [cflinuxfs2-rootfs-release-artifacts/dev_releases/cflinuxfs2-nc-rootfs/*.tgz]
        - task: run-rootfs-smoke-test
          file: buildpacks-ci/tasks/run-rootfs-smoke-test/task.yml
          params:
            DEPLOYMENT_NAME: stacks-nc.buildpacks.ci
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
            BOSH_TARGET: stacks-nc.buildpacks.ci.cf-app.com
            RUBYGEM_MIRROR: {{rubygem-mirror}}
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: deploy-cf-to-stacks-nc
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: lite-stemcell
        - get: buildpacks-ci
        - get: new-cves
          passed: [ deploy-rootfs-to-stacks-nc ]
        - get: deployments-buildpacks
          passed: [ deploy-rootfs-to-stacks-nc ]
        - get: cf-release
          resource: cf-release-develop
          passed: [ deploy-rootfs-to-stacks-nc ]
        - get: cflinuxfs2-rootfs-release
          passed: [ deploy-rootfs-to-stacks-nc ]
        - get: stack-s3
          passed: [ deploy-rootfs-to-stacks-nc ]
        - get: version
          passed: [ deploy-rootfs-to-stacks-nc ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ deploy-rootfs-to-stacks-nc ]
        - get: receipt-s3
          passed: [ deploy-rootfs-to-stacks-nc ]
        - get: stacks
          passed: [ deploy-rootfs-to-stacks-nc ]
      - do:
        - task: create-cf-release
          file: buildpacks-ci/tasks/create-cf-release-without-modifying-stacks/task.yml
          privileged: true
        - put: stacks-cf-deployment
          params:
            manifest: deployments-buildpacks/deployments/stacks-nc.buildpacks.ci/manifest.yml
            stemcells: [lite-stemcell/*.tgz]
            releases: [cf-release-artifacts/dev_releases/cf/*.tgz]
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: deploy-diego-to-stacks-nc
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: lite-stemcell
        - get: garden-runc-bosh-release
        - get: diego-bosh-release
        - get: new-cves
          passed: [ deploy-cf-to-stacks-nc ]
        - get: deployments-buildpacks
          passed: [ deploy-cf-to-stacks-nc ]
          trigger: true
        - get: buildpacks-ci
        - get: stack-s3
          passed: [ deploy-cf-to-stacks-nc ]
        - get: version
          passed: [ deploy-cf-to-stacks-nc ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ deploy-cf-to-stacks-nc ]
        - get: receipt-s3
          passed: [ deploy-cf-to-stacks-nc ]
        - get: stacks
          passed: [ deploy-cf-to-stacks-nc ]
      - put: stacks-diego-deployment
        params:
          manifest: deployments-buildpacks/deployments/stacks-nc.buildpacks.ci/diego.yml
          stemcells: ['lite-stemcell/stemcell.tgz']
          releases:
            - diego-bosh-release/release.tgz
            - garden-runc-bosh-release/release.tgz
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: cflinuxfs2-nc-specs
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: new-cves
          passed: [ deploy-diego-to-stacks-nc ]
        - get: deployments-buildpacks
          passed: [ deploy-diego-to-stacks-nc ]
        - get: stack-s3
          passed: [ deploy-diego-to-stacks-nc ]
        - get: receipt-s3
          passed: [ deploy-diego-to-stacks-nc ]
        - get: cflinuxfs2-rootfs-release
        - get: stacks
          passed: [ deploy-diego-to-stacks-nc ]
        - get: version
          passed: [ deploy-diego-to-stacks-nc ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ deploy-diego-to-stacks-nc ]
      - do:
        - task: run-cflinuxfs2-nc-specs
          file: buildpacks-ci/tasks/run-cflinuxfs2-nc-specs/task.yml
          params:
            DEPLOYMENT_NAME: stacks-nc.buildpacks.ci
            BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
            CF_PASSWORD: {{ci-cf-password}}
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: cats
    serial: true
    serial_groups: [ stacks-nc ]
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: runtime-ci
        - get: cf-release
          resource: cf-release-develop
          params:
            submodules: [ src/github.com/cloudfoundry/cf-acceptance-tests/ ]
        - get: new-cves
          passed: [ cflinuxfs2-nc-specs ]
        - get: deployments-buildpacks
          passed: [ cflinuxfs2-nc-specs ]
          trigger: true
        - get: stack-s3
          passed: [ cflinuxfs2-nc-specs ]
        - get: version
          passed: [ cflinuxfs2-nc-specs ]
          trigger: true
        - get: cflinuxfs2-rootfs-release-version
          passed: [ cflinuxfs2-nc-specs ]
        - get: receipt-s3
          passed: [ cflinuxfs2-nc-specs ]
        - get: stacks
          passed: [ cflinuxfs2-nc-specs ]
      - do:
        - task: copy-cf-acceptance-tests
          file: buildpacks-ci/tasks/copy-cf-acceptance-tests/task.yml
        - task: write-cats-config
          file: buildpacks-ci/tasks/write-cats-config/task.yml
          params:
            CI_CF_USERNAME: {{ci-cf-username}}
            CI_CF_PASSWORD: {{ci-cf-password}}
            APPS_DOMAIN: stacks-nc.buildpacks.ci.cf-app.com
            DIEGO_DOCKER_ON: true
        - task: cats
          file: runtime-ci/scripts/ci/run-cats/task.yml
          params:
            NODES: 4
            CONFIG_FILE_PATH: integration_config.json
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: destroy-bosh-lite
    serial: true
    serial_groups: [ stacks-nc ]
    plan:
      - aggregate:
        - get: deployments-buildpacks
          passed: [ cats ]
          trigger: true
        - get: buildpacks-ci
      - task: destroy-stacks-nc-bosh-lite
        file: buildpacks-ci/tasks/destroy-bosh-lite/task.yml
        params:
          DEPLOYMENT_NAME: stacks-nc.buildpacks.ci
          BOSH_USER: {{gcp_bosh_admin_user}}
          BOSH_PASSWORD: {{gcp_bosh_admin_password}}
          GCP_BOSH_LITE_NAME: stacks-nc-gcp-bosh-lite
          GCP_BOSH_DIRECTOR_USER: {{gcp_bosh_admin_user}}
          GCP_BOSH_DIRECTOR_PASSWORD: {{gcp_bosh_admin_password}}
          BOSH_LITE_NAME: stacks-nc.buildpacks.ci
          RUBYGEM_MIRROR: {{rubygem-mirror}}
          BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
          IAAS: aws
          ######## For AWS Deploys ##################
          BOSH_PRIVATE_KEY: {{bosh_private_key}}
          AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
        attempts: 5

  - name: shipit
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: new-cves
          passed: [ cats ]
        - get: stack-s3
          passed: [ cats ]
        - get: receipt-s3
          passed: [ cats ]
        - get: stacks
          resource: stacks
          passed: [ cats ]
        - get: version
          passed: [ cats ]
          params: { bump: final }
        - get: cflinuxfs2-rootfs-release-version
          passed: [ cats ]
          params: { bump: final }
      - do:
        - task: update-receipt
          file: buildpacks-ci/tasks/update-rootfs-receipt/task.yml
          params:
            ROOTFS_SUFFIX: _nc
        - task: update-filename
          file: buildpacks-ci/tasks/update-rootfs-filename/task.yml
          params:
            ROOTFS_SUFFIX: _nc
        - put: stacks
          params:
            repository: new-stack-commit
            tag: version/number
            rebase: true
        - put: stack-s3
          params:
            from: stack-archive/cflinuxfs2_nc-(.*).tar.gz
            to: /rootfs-nc/
        - put: version
          params: { file: version/number }
        - put: cflinuxfs2-rootfs-release-version
          params: { file: cflinuxfs2-rootfs-release-version/number }
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: upload-to-github
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: previous-stacks-release
          resource: stack-github-release-final
        - get: stacks
          passed: [ shipit ]
        - get: new-cves
          passed: [ shipit ]
        - get: stack-s3
          passed: [ shipit ]
        - get: version
          trigger: true
          passed: [ shipit ]
      - do:
        - task: generate-release-notes
          file: buildpacks-ci/tasks/generate-stacks-release-notes/task.yml
          params:
            STACK: stacks-nc
            GITHUB_USERNAME: {{github-username}}
            GITHUB_PASSWORD: {{github-password}}
        - put: stack-github-release-drafts
          params:
            name: version/number
            tag: version/number
            body: release-body/body
            globs:
              - stack-s3/cflinuxfs2_nc-*.tar.gz
        - put: new-cves
          params:
            repository: new-cves-artifacts
            rebase: true
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: reset-minor-version-to-rc
    serial: true
    plan:
      - get: version
        trigger: true
        passed: [ shipit ]
        params: {bump: minor, pre: rc}
      - get: cflinuxfs2-rootfs-release-version
        trigger: true
        passed: [ shipit ]
        params: {bump: minor, pre: rc}
      - put: version
        params: {file: version/number}
      - put: cflinuxfs2-rootfs-release-version
        params: {file: cflinuxfs2-rootfs-release-version/number}

  - name: create-cflinuxfs2-nc-rootfs-release
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: blob
          resource: stack-s3
          passed: [ shipit ]
          trigger: true
        - get: version
          passed: [ shipit ]
        - get: cflinuxfs2-rootfs-release-version
          passed: [ shipit ]
        - get: cflinuxfs2-rootfs-release
      - do:
        - task: create-cflinuxfs2-rootfs-release
          file: buildpacks-ci/tasks/create-cflinuxfs2-rootfs-release/task.yml
          params:
            BLOB_NAME: rootfs-nc
            BLOB_GLOB: blob/cflinuxfs2_nc-*.tar.gz
            RELEASE_NAME: cflinuxfs2-nc-rootfs
            RELEASE_DIR: cflinuxfs2-rootfs-release
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
        - put: cflinuxfs2-rootfs-release
          params:
            repository: release-artifacts
        - put: bosh-release-s3
          params:
            from: release-artifacts/releases/cflinuxfs2-nc-rootfs/cflinuxfs2-nc-rootfs-(.*).tgz
            to: /cflinuxfs2-nc/
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png

  - name: write-pivnet-metadata
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: stack-s3
          passed: [ create-cflinuxfs2-nc-rootfs-release ]
          trigger: true
        - get: cflinuxfs2-rootfs-release
          passed: [ create-cflinuxfs2-nc-rootfs-release ]
        - get: version
          passed: [ create-cflinuxfs2-nc-rootfs-release ]
        - get: cflinuxfs2-rootfs-release-version
          passed: [ create-cflinuxfs2-nc-rootfs-release ]
        - get: bosh-release-s3
          passed: [ create-cflinuxfs2-nc-rootfs-release ]
        - get: rootfs-pivnet-metadata
      - do:
        - task: write-cflinuxfs2-release-pivnet-metadata
          file: buildpacks-ci/tasks/write-cflinuxfs2-release-pivnet-metadata/task.yml
        - put: rootfs-pivnet-metadata
          params:
            repository: pivnet-metadata-artifacts
            rebase: true

  - name: release-to-pivnet
    serial: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: bosh-release-s3
          passed: [ write-pivnet-metadata ]
        - get: rootfs-pivnet-metadata
          passed: [ write-pivnet-metadata ]
          trigger: true
        - get: cflinuxfs2-rootfs-release
          passed: [ write-pivnet-metadata ]
      - task: collect-cflinuxfs2-nc-files
        file: buildpacks-ci/tasks/collect-cflinuxfs2-nc-files/task.yml
      - put: pivnet-production
        params:
          file_glob: 'files-to-upload/*'
          s3_filepath_prefix: product-files/rootfs
          metadata_file: rootfs-pivnet-metadata/pivnet-metadata/rootfs-nc.yml
