<%
  require 'yaml'
  config = YAML.load_file(File.join(__dir__, 'config', 'cnb-builder.yml'))

  stacks = config['stacks']
  builders = config['builders']
  cnbs = config['cnbs']

  def cnbs_for_builder(cnbs, builder_data)
    cnbs.reject {|_, cnb| cnb.fetch('skip_stack', []).include?(builder_data['stack']) }.keys
  end
%>
---
resource_types:
  - name: cron
    type: docker-image
    source:
      repository: cfbuildpacks/cron-resource

resources:
  # Github Repos
  - name: buildpacks-ci
    type: git
    source:
      uri: ((buildpacks-ci-git-uri-public))
      branch: master

  - name: cnb-builder
    type: git
    source:
      uri: https://github.com/cloudfoundry/cnb-builder
      branch: master

<% cnbs.each do |cnb, cnb_data| %>
  - name: <%= cnb %>-cnb-release
    type: git
    check_every: 15m # to avoid thundering herd of cnb autobumping
    source:
      uri: <%= cnb_data['git_repo'] %>
      private_key: ((cf-buildpacks-eng-github-ssh-key))
      tag_filter: 'v*'
<% end %>

  - name: packager
    type: git
    source:
      uri: https://github.com/cloudfoundry/libcfbuildpack
      branch: master

  - name: pack-release
    type: github-release
    source:
      user: buildpacks
      repository: pack
      access_token: ((buildpacks-github-token))
      globs: ['*-linux.tgz']

  - name: cnb-lifecycle-release
    type: github-release
    source:
      repository: lifecycle
      user: buildpacks
      access_token: ((buildpacks-github-token))

  # Versions
<% builders.each do |_, builder_data| %>
  - name: <%= builder_data['version-key'] %>-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/<%= builder_data['version-key'] %>
      access_key_id: ((pivotal-offline-buildpacks-s3-access-key))
      secret_access_key: ((pivotal-offline-buildpacks-s3-secret-key))
<% end %>

  # Docker Images
<% builders.each do |builder, builder_data| %>
  - name: <%= builder %>-builder-image
    type: registry-image
    source:
      repository: <%= builder_data['repository'] %>
      tag: <%= builder_data['stack'] %>
      username: ((buildpacks-docker-username))
      password: ((buildpacks-docker-password))

  - name: <%= builder %>-rc-image
    type: registry-image
    source:
      repository: gcr.io/cf-buildpacks/builder-rcs
      tag: <%= builder %>
      username: _json_key
      password: ((gcp-service-account-key))
<% end %>

<% stacks.each do |stack, stack_data| %>
  <% %w(build run).each do |image| %>
  - name: <%= stack %>-<%= image %>-cnb-image
    type: registry-image
    source:
      repository: cloudfoundry/<%= image %>
      tag: <%= stack_data['tag'] %>-cnb
      username: ((buildpacks-docker-username))
      password: ((buildpacks-docker-password))
  <% end %>
<% end %>

  - name: ci-image
    type: registry-image
    source:
      repository: cfbuildpacks/ci
      username: ((buildpacks-docker-username))
      password: ((buildpacks-docker-password))

  - name: sunday-night
    type: cron
    source:
      expression: 0 18 * * 0
      location: {{current-timezone}}

jobs:
<% builders.each do |builder, builder_data| %>
  - name: create-<%= builder %>-builder-rc
    plan:
      - in_parallel:
        - get: sunday-night
          trigger: true
        - get: buildpacks-ci
        - get: ci-image
        - get: packager
        - get: pack
          resource: pack-release
          trigger: true
        - get: lifecycle
          resource: cnb-lifecycle-release
        - get: <%= builder_data['stack'] %>-build-cnb-image
          trigger: true
        - get: <%= builder_data['stack'] %>-run-cnb-image
          trigger: true
  <% cnbs_for_builder(cnbs, builder_data).each do |cnb| %>
        - get: <%= cnb %>-cnb
          resource: <%= cnb %>-cnb-release
  <% end %>
        - get: cnb-builder
        - get: version
          resource: <%= builder_data['version-key'] %>-version
          params:
            pre: rc
      - task: get-cnb-sources
        image: ci-image
        config:
          platform: linux
          inputs:
  <% cnbs_for_builder(cnbs, builder_data).each do |cnb| %>
            - name: <%= cnb %>-cnb
  <% end %>
          outputs:
            - name: sources
          run:
            path: bash
            args:
              - -cl
              - |
  <% cnbs_for_builder(cnbs, builder_data).each do |cnb| %>
                cp -r <%= cnb %>-cnb sources/
  <% end %>
      - task: create-builder-image
        image: ci-image
        file: buildpacks-ci/tasks/create-builder/task.yml
        privileged: true
        params:
  <% builder_data.fetch('builder-image-params', {}).each do |key, value| %>
            <%= key %>: <%= value%>
  <% end %>
      - put: <%= builder %>-rc-image
        params:
          additional_tags: tag/name
          image: builder-image/builder.tgz
      - put: version
        resource: <%= builder_data['version-key'] %>-version
        params:
          file: version/version

  - name: test-<%= builder %>-builder-rc
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: ci-image
        - get: version
          resource: <%= builder_data['version-key'] %>-version
          passed: [create-<%= builder %>-builder-rc]
        - get: builder-image
          resource: <%= builder %>-rc-image
          trigger: true
          passed: [create-<%= builder %>-builder-rc]
          params:
            format: oci
        - get: pack
          resource: pack-release
        - get: cnb-builder
      - task: smoke-test-builder
        image: ci-image
        file: buildpacks-ci/tasks/test-builder/task.yml
        privileged: true
        params:
          STACK: <%= builder %>
          REPO: gcr.io/cf-buildpacks/builder-rcs
          RUN_IMAGE: <%= builder_data.fetch('builder-image-params', {}).fetch('RUN_IMAGE') %> # Why do we need this?
      - task: builder-release-story
        image: ci-image
        file: buildpacks-ci/tasks/builder-release-story/task.yml
        params:
          GCP_SERVICE_ACCOUNT_KEY: ((gcp-service-account-key))
          TAG: <%= builder %>
          TRACKER_API_TOKEN: ((pivotal-tracker-api-token))
          TRACKER_PROJECT_ID: ((cf-buildpacks-rel-eng-tracker-id))

  - name: ship-<%= builder %>-builder
    plan:
      - get: ci-image
      - get: buildpacks-ci
      - get: <%= builder %>-rc-image
        passed: [test-<%= builder %>-builder-rc]
        params:
          format: oci
      - get: version
        resource: <%= builder_data['version-key'] %>-version
        passed: [test-<%= builder %>-builder-rc]
        params:
          bump: final
          pre: <%= builder %>
          pre_without_version: true
      - task: write-tags-list
        image: ci-image
        file: buildpacks-ci/tasks/write-tags-list/task.yml
        params:
          TAGS: <%= "#{builder_data['stack']} #{stacks[builder_data['stack']]['tag']} #{builder_data['latest'] ? 'latest' : ''}" %>
      - put: <%= builder %>-builder-image
        params:
          additional_tags: tags/tags
          image: <%= builder %>-rc-image/image.tar
      - put: version
        resource: <%= builder_data['version-key'] %>-version
        params:
          bump: patch
<% end %>

groups:
  - name: all
    jobs:
<% builders.keys.each do |builder| %>
    - create-<%= builder %>-builder-rc
    - test-<%= builder %>-builder-rc
    - ship-<%= builder %>-builder
<% end %>


<% builders.keys.each do |builder| %>
  - name: <%= builder %>-builder
    jobs:
    - create-<%= builder %>-builder-rc
    - test-<%= builder %>-builder-rc
    - ship-<%= builder %>-builder
<% end %>
