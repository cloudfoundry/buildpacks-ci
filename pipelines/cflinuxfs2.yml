---
resource_types:
  - name: bosh-deployment
    type: docker-image
    source:
      repository: cloudfoundry/bosh-deployment-resource

  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final

resources: ###########################################################################################################

  ## Git Repos ##
  - name: cf-deployment-concourse-tasks
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
      tag_filter: v8.*

  - name: cf-deployment-concourse-tasks-latest
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git

  - name: cf-acceptance-tests
    type: git
    source:
      branch: master
      uri: https://github.com/cloudfoundry/cf-acceptance-tests.git

  - name: bbl-state
    type: git
    source:
      uri: git@github.com:cloudfoundry/buildpacks-envs
      branch: master
      private_key: {{buildpacks-envs-private-key}}

  - name: bosh-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-deployment.git
      branch: master

  - name: cf-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment
      branch: master

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}

  - name: p-cflinuxfs2
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-cflinuxfs2.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master

  - name: p-cflinuxfs2-github-tags
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-cflinuxfs2.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master
      tag_filter: "*"

  - name: p-cflinuxfs2-build-trigger
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-cflinuxfs2.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master
      ignore_paths:
      - cflinuxfs2/cflinuxfs2_receipt
      - README.md
      - .gitignore

  - name: new-cves
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      branch: master
      paths: [ new-cve-notifications/ubuntu14.04.yml ]
      private_key: {{public-buildpacks-ci-robots-private-key}}

  - name: receipt-diff
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      branch: master
      paths: [ receipt-diffs/cflinuxfs2-diff ]
      private_key: {{public-buildpacks-ci-robots-private-key}}
      tag_filter: "newpackages_cflinuxfs2_*"

  - name: public-robots
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      branch: master
      private_key: {{public-buildpacks-ci-robots-private-key}}


  - name: p-cflinuxfs2-release
    type: git
    source:
      uri: git@github.com:pivotal-cf/p-cflinuxfs2-release.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master

  - name: p-cflinuxfs2-esm-github-release
    type: github-release
    source:
      owner: pivotal-cf
      repository: p-cflinuxfs2-release
      access_token: {{buildpacks-github-token}}

  - name: p-cflinuxfs2-release-pivnet-release
    type: pivnet
    source:
      endpoint: https://pivnet-integration.cfapps.io/
      api_token: yjm2jhyXi9m-1VXRP2X2
      product_slug: cflinuxfs2-esm


  ## S3 Buckets ##
  - name: stack-s3
    type: s3
    source:
      bucket: {{p-cflinuxfs2-s3-bucket}}
      regexp: rootfs/cflinuxfs2-(.*).tar.gz
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  - name: receipt-s3
    type: s3
    source:
      bucket: {{p-cflinuxfs2-s3-bucket}}
      regexp: rootfs/cflinuxfs2_receipt-(.*)
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

  ## BOSH Deployments ##

  - name: cflinuxfs2-cf-deployment
    type: bosh-deployment
    source:
      deployment: cf
      skip_check: true

  - name: cflinuxfs2-rootfs-smoke-test-deployment
    type: bosh-deployment
    source:
      deployment: rootfs-smoke-test
      skip_check: true

  ## bosh.io stemcell ##

  - name: gcp-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-xenial-go_agent

  ## Github Release ##

#  - name: p-cflinuxfs2-release-github-release
#    type: github-release
#    source:
#      drafts: false
#      user: pivotal-cf
#      access_token: {{buildpacks-github-token}}
#      repository: p-cflinuxfs2-release

  ## Semver Versions ##

  - name: version
    type: semver
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      key: versions/stack
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

jobs: ################################################################################################################

  - name: build-rootfs
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - in_parallel:
        - get: previous-cflinuxfs2-release
          resource: p-cflinuxfs2-github-tags
        - get: buildpacks-ci
        - get: new-cves
          trigger: true
        - get: cflinuxfs2
          resource: p-cflinuxfs2
        - get: cflinuxfs2-build-trigger
          resource: p-cflinuxfs2-build-trigger
          trigger: true
        - get: version
          params: { pre: rc }
        - get: public-robots
      - do:
        - task: make-rootfs
          file: buildpacks-ci/tasks/make-rootfs-cflinuxfs2/task.yml
          privileged: true
          params:
            ESM_TOKEN: {{ci-cflinuxfs2-esm-token}}
        - task: test-rootfs
          file: buildpacks-ci/tasks/test-cflinuxfs2/task.yml
          privileged: true
          params:
            STACK: cflinuxfs2
        - put: stack-s3
          params:
            file: cflinuxfs2-artifacts/cflinuxfs2-*.tar.gz
        - put: receipt-s3
          params:
            file: receipt-artifacts/cflinuxfs2_receipt-*
        - put: version
          params: { file: version/number }
        - task: generate-receipt-diff
          file: buildpacks-ci/tasks/generate-cflinuxfs2-receipt-diff/task.yml
          params:
            STACK: cflinuxfs2
        - put: public-robots
          params:
            repository: public-robots-artifacts
            rebase: true
            tag: git-tags/TAG

  - name: bbl-up
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
        - get: bbl-config
          resource: bbl-state
        - get: bosh-deployment
        - get: buildpacks-ci
        - get: receipt-diff
          trigger: true
        - get: new-cves
          passed: [ build-rootfs ]
        - get: stack-s3
          passed: [ build-rootfs ]
        - get: version
          passed: [ build-rootfs ]
        - get: receipt-s3
          passed: [ build-rootfs ]
        - get: cflinuxfs2
          resource: p-cflinuxfs2
          passed: [ build-rootfs ]
      - task: bbl-up
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        params:
          BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
          BBL_GCP_PROJECT_ID: cf-buildpacks
          BBL_GCP_ZONE: us-east1-c
          BBL_GCP_REGION: us-east1
          BBL_IAAS: gcp
          BBL_LB_CERT: {{cflinuxfs2-lb-cert}}
          BBL_LB_KEY: {{cflinuxfs2-lb-key}}
          LB_DOMAIN: cflinuxfs2.buildpacks-gcp.ci.cf-app.com
          BBL_ENV_NAME: cflinuxfs2
          BBL_STATE_DIR: cflinuxfs2
        input_mapping:
          ops-files: bosh-deployment
        ensure:
          put: bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
      - task: add-gcp-parent-dns-record
        file: buildpacks-ci/tasks/add-gcp-parent-dns-record/task.yml
        params:
          ENV_NAME: cflinuxfs2
          GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}

  - name: deploy
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - do:
        - in_parallel:
          - get: new-cves
            passed: [ bbl-up ]
          - get: stack-s3
            passed: [ bbl-up ]
          - get: version
            passed: [ bbl-up ]
            trigger: true
          - get: receipt-s3
            passed: [ bbl-up ]
          - get: cflinuxfs2
            resource: p-cflinuxfs2
            passed: [ bbl-up ]
          - get: cflinuxfs2-release
            resource: p-cflinuxfs2-release
          - get: buildpacks-ci
          - get: bbl-state
          - get: cf-deployment
          - get: gcp-stemcell
          - get: bosh-deployment
        - in_parallel:
          - task: create-deployment-source-config
            file: buildpacks-ci/tasks/create-deployment-source-config/task.yml
            params:
              ENV_NAME: cflinuxfs2
          - task: overwrite-cflinuxfs2-release
            file: buildpacks-ci/tasks/overwrite-cflinuxfs2-release/task.yml
            params:
              ROOTFS_RELEASE: cflinuxfs2
        - put: cflinuxfs2-rootfs-smoke-test-deployment
          params:
            source_file: deployment-source-config/source_file.yml
            manifest: cflinuxfs2-release-artifacts/manifests/manifest.yml
            releases:
              - cflinuxfs2-release-artifacts/dev_releases/cflinuxfs2/*.tgz
            stemcells:
              - gcp-stemcell/*.tgz
        - task: run-rootfs-smoke-test
          file: buildpacks-ci/tasks/run-rootfs-smoke-test/task.yml
          params:
            ENV_NAME: cflinuxfs2
        - put: cflinuxfs2-cf-deployment
          params:
            source_file: deployment-source-config/source_file.yml
            manifest: cf-deployment/cf-deployment.yml
            releases:
              - cflinuxfs2-release-artifacts/dev_releases/cflinuxfs2/*.tgz
            stemcells:
              - gcp-stemcell/*.tgz
            ops_files:
              - buildpacks-ci/deployments/operations/no-canaries.yml
              - buildpacks-ci/deployments/operations/cflinuxfs2-rootfs-certs-as-list.yml
              - cflinuxfs2-release-artifacts/use-dev-release-opsfile.yml
              - cf-deployment/operations/use-latest-stemcell.yml
            vars:
              system_domain: cflinuxfs2.buildpacks-gcp.ci.cf-app.com

  - name: cats
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - in_parallel:
        - get: bbl-state
        - get: buildpacks-ci
        - get: cf-deployment-concourse-tasks
          resource: cf-deployment-concourse-tasks-latest
        - get: cf-acceptance-tests
        - get: new-cves
          passed: [ deploy ]
        - get: stack-s3
          passed: [ deploy ]
        - get: version
          passed: [ deploy ]
          trigger: true
        - get: receipt-s3
          passed: [ deploy ]
        - get: cflinuxfs2
          resource: p-cflinuxfs2
          passed: [ deploy ]
      - do:
        - task: get-cf-creds
          file: buildpacks-ci/tasks/get-cf-creds/task.yml
          params:
            ENV_NAME: cflinuxfs2
        - task: write-cats-config
          file: buildpacks-ci/tasks/write-cats-config/task.yml
          params:
            APPS_DOMAIN: cflinuxfs2.buildpacks-gcp.ci.cf-app.com
            DIEGO_DOCKER_ON: true
            STACKS: cflinuxfs2
        - task: cats
          attempts: 3
          file: cf-deployment-concourse-tasks/run-cats/task.yml
          params:
            NODES: 12
            CONFIG_FILE_PATH: integration_config.json
            FLAKE_ATTEMPTS: 3

  - name: check-for-race-condition
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: version
          passed: [ cats ]
          trigger: true
        - get: latest-version
          resource: version
      - task: check-for-rootfs-race-condition
        file: buildpacks-ci/tasks/check-for-rootfs-race-condition/task.yml

  - name: delete-deployment
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - in_parallel:
        - get: version
          passed: [ check-for-race-condition ]
          trigger: true
        - get: bbl-state
        - get: buildpacks-ci
      - task: create-deployment-source-config
        file: buildpacks-ci/tasks/create-deployment-source-config/task.yml
        params:
          ENV_NAME: cflinuxfs2
      - put: cflinuxfs2-rootfs-smoke-test-deployment
        params:
          source_file: deployment-source-config/source_file.yml
          delete:
            enabled: true
            force: true
      - put: cflinuxfs2-cf-deployment
        params:
          source_file: deployment-source-config/source_file.yml
          delete:
            enabled: true
            force: true

  - name: bbl-destroy
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: bbl-state
        - get: buildpacks-ci
        - get: version
          passed: [ delete-deployment ]
          trigger: true
      - task: remove-gcp-parent-dns-record
        file: buildpacks-ci/tasks/remove-gcp-parent-dns-record/task.yml
        params:
          GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
          ENV_NAME: cflinuxfs2
      - task: bbl-destroy
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        params:
          BBL_STATE_DIR: cflinuxfs2
          BBL_GCP_PROJECT_ID: cf-buildpacks
          BBL_GCP_SERVICE_ACCOUNT_KEY: {{gcp-service-account-key}}
        ensure:
          put: bbl-state
          params:
            repository: updated-bbl-state
            rebase: true

  - name: release-p-cflinuxfs2
    serial: true
    serial_groups: [ p-cflinuxfs2 ]
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: new-cves
          passed: [ 'cats' ]
        - get: stack-s3
          passed:
            - cats
        - get: receipt-s3
          passed:
            - cats
        - get: rootfs
          resource: p-cflinuxfs2
          passed:
            - cats
        - get: version
          passed:
            - bbl-destroy
          trigger: true
          params: { bump: final }
      - do:
        - task: update-receipt
          file: buildpacks-ci/tasks/update-cflinuxfs2-receipt/task.yml
          params:
            STACK: cflinuxfs2
        - task: update-filename
          file: buildpacks-ci/tasks/update-rootfs-filename/task.yml
          params:
            STACK: cflinuxfs2
        - put: p-cflinuxfs2
          params:
            repository: new-rootfs-commit
            tag: version/number
            rebase: true
        - put: stack-s3
          params:
            file: rootfs-archive/cflinuxfs2-*.tar.gz
        - put: version
          params: { file: version/number }

  - name: reset-minor-version-to-rc
    serial: true
    plan:
      - get: version
        trigger: true
        passed: [ release-p-cflinuxfs2 ]
        params: {bump: minor, pre: rc}
      - put: version
        params: {file: version/number}

  - name: generate-release-notes
    serial: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: previous-cflinuxfs2-release
          resource: p-cflinuxfs2-github-tags
        - get: cflinuxfs2
          resource: p-cflinuxfs2
          passed: [ release-p-cflinuxfs2 ]
        - get: new-cves
          passed: [ release-p-cflinuxfs2 ]
        - get: stack-s3
          passed: [ release-p-cflinuxfs2 ]
        - get: version
          trigger: true
          passed: [ release-p-cflinuxfs2 ]
      - do:
        - task: generate-rootfs-release-notes
          file: buildpacks-ci/tasks/generate-cflinuxfs2-release-notes/task.yml
          params:
            STACK: cflinuxfs2
        - put: new-cves
          params:
            repository: new-cves-artifacts
            rebase: true

  - name: finalize-security-notices
    serial: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
          resource: buildpacks-ci
        - get: version
          trigger: true
          passed: [ generate-release-notes ]
      - do:
        - task: finalize-security-notices
          file: buildpacks-ci/tasks/finalize-security-notice-stories/task.yml
          attempts: 20
          params:
            TRACKER_PROJECT_ID: '{{cf-buildpacks-private-tracker-id}}'
            TRACKER_REQUESTER_ID: '{{cf-buildpacks-requester-id}}'
            TRACKER_API_TOKEN: {{pivotal-tracker-api-token}}
            STACK: cflinuxfs2

  - name: create-cflinuxfs2-esm-release
    serial: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: blob
          resource: stack-s3
          passed: [ release-p-cflinuxfs2 ]
          trigger: true
        - get: version
          passed: [ release-p-cflinuxfs2 ]
        - get: release
          resource: p-cflinuxfs2-release
      - do:
        - task: create-cflinuxfs2-esm-release
          file: buildpacks-ci/tasks/create-cflinuxfs2-release/task.yml
          params:
            BLOB_NAME: rootfs
            BLOB_GLOB: blob/cflinuxfs2-*.tar.gz
            RELEASE_NAME: cflinuxfs2
            ACCESS_KEY_ID: {{cloudfoundry-s3-access-key}}
            SECRET_ACCESS_KEY: {{cloudfoundry-s3-secret-key}}
        - task: create-release-body
          file: buildpacks-ci/tasks/create-rootfs-bosh-release-github-release-notes/task.yml
          params:
            STACK: p-cflinuxfs2
            ORG: pivotal-cf
        - task: create-release-commit
          file: buildpacks-ci/tasks/create-rootfs-bosh-release-commit/task.yml
        - put: p-cflinuxfs2-release
          params:
            repository: release-artifacts

  - name: upload-cflinuxfs2-esm-to-pivnet
    serial: true
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: p-cflinuxfs2-esm-github-release
          params:
            include_source_tarball: true
        - get: p-cflinuxfs2-release
          passed: [ create-cflinuxfs2-esm-release ]
          trigger: true
      - do:
        - task: generate-esm-pivnet-metadata
          file: buildpacks-ci/tasks/write-esm-pivnet-metadata/task.yml
        - put: p-cflinuxfs2-release-pivnet-release
          params:
            file_glob: p-cflinuxfs2-esm-github-release/source.tar.gz
            s3_filepath_prefix: p-cflinuxfs2/rootfs
            metadata_file: pivnet-esm-metadata/esm.yml
