<% dependencies = {
  pipenv: { python: {} },
  setuptools: { python: {} },
  rubygems: { ruby: {} },
  yarn: { nodejs: {}, ruby: {} },
  go: { go: { line: "minor", keep_master: true } },
  ruby: { ruby: { line: "minor", keep_master: true } },
  python: { python: { line: "minor", keep_master: true } },
  r: { r: { line: "minor", keep_master: true } },
  nginx: { nginx: { line: "minor", keep_master: true } },
  # node: { node: { line: "major", keep_master: true }, ruby: { line: "major", keep_master: false } },
} %>
resource_types:
- name: depwatcher
  type: docker-image
  source:
    repository: cfbuildpacks/depwatcher
resources:
- name: binary-builder
  type: git
  source:
    uri: {{binary-builder-git-uri}}
- name: buildpacks-ci
  type: git
  source:
    uri: {{buildpacks-ci-git-uri-public}}
    branch: {{buildpacks-ci-git-uri-public-branch}}

- name: source-pipenv
  type: depwatcher
  check_every: 1h
  source:
    type: pypi
    name: pipenv
- name: source-setuptools
  type: depwatcher
  check_every: 1h
  source:
    type: pypi
    name: setuptools
- name: source-rubygems
  type: depwatcher
  check_every: 1h
  source:
    type: rubygems_cli
    name: rubygems
- name: source-ruby
  type: depwatcher
  check_every: 1h
  source:
    type: ruby_lang
    name: ruby
- name: source-python
  type: depwatcher
  check_every: 1h
  source:
    type: python
    name: python
- name: source-go
  type: depwatcher
  check_every: 1h
  source:
    type: golang
    name: go
- name: source-r
  type: depwatcher
  check_every: 1h
  source:
    type: rlang
    name: r
- name: source-yarn
  type: depwatcher
  check_every: 1h
  source:
    type: github_releases
    repo: yarnpkg/yarn
    name: yarn
- name: source-nginx
  type: depwatcher
  check_every: 1h
  source:
    type: nginx
    name: nginx
<% dependencies.each do |dep, _| %>
- name: buildpacks-bucket-<%= dep %>
  type: s3
  source:
    bucket: {{buildpacks-binaries-s3-bucket}}
    access_key_id: {{pivotal-buildpacks-s3-access-key}}
    secret_access_key: {{pivotal-buildpacks-s3-secret-key}}
    regexp: dependencies/<%= dep %>/<%= dep %>.*(\d+.\d+.\d+)(.*)
<% end %>

- name: builds
  type: git
  source:
    uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
    branch: master
    paths: [ binary-builds-new/ ]
    private_key: {{public-buildpacks-ci-robots-private-key}}

<% dependencies.values.map(&:keys).flatten.uniq.each do |buildpack| %>
- name: <%= buildpack %>-buildpack
  type: git
  source:
    uri: git@github.com:cloudfoundry/<%= buildpack %>-buildpack.git
    private_key: {{<%= buildpack %>-buildpack-private-key}}
    branch: develop
- name: <%= buildpack %>-buildpack-master
  type: git
  source:
    uri: git@github.com:cloudfoundry/<%= buildpack %>-buildpack.git
    private_key: {{<%= buildpack %>-buildpack-private-key}}
    branch: master
<% end %>

jobs:
<% dependencies.each do |dep, buildpacks| %>
- name: create-<%= dep %>-story
  serial: true
  public: true
  plan:
  - aggregate:
    - get: buildpacks-ci
    - get: source
      resource: source-<%= dep %>
      trigger: true
      version: every
    - get: builds
  - do:
    - task: create-tracker-story
      file: buildpacks-ci/tasks/build-binary-new/create.yml
      params:
        TRACKER_PROJECT_ID: {{cf-buildpacks-public-tracker-id}}
        TRACKER_REQUESTER_ID: {{cf-buildpacks-requester-id}}
        TRACKER_API_TOKEN: {{pivotal-tracker-api-token}}
        BUILDPACKS: <%= buildpacks.keys.join(' ') %>
    - put: builds
      params:
        repository: builds-artifacts
        rebase: true

- name: build-<%= dep %>
  serial: true
  public: true
  plan:
  - aggregate:
    - get: buildpacks-ci
    - get: binary-builder
    - get: source
      resource: source-<%= dep %>
      trigger: true
      version: every
      passed: [ create-<%= dep %>-story ]
    - get: builds
  - do:
    - task: build-binary
      file: buildpacks-ci/tasks/build-binary-new/build.yml
    - put: buildpacks-bucket-<%= dep %>
      params:
        file: artifacts/<%= dep %>*
    - put: builds
      params:
        repository: builds-artifacts
        rebase: true

<% buildpacks.each do |buildpack, options| %>
- name: update-<%= dep %>-<%= buildpack %>
  serial: true
  public: true
  plan:
  - aggregate:
    - get: buildpack
      resource: <%= buildpack %>-buildpack
    - get: buildpack-master
      resource: <%= buildpack %>-buildpack-master
    - get: buildpacks-ci
    - get: source
      resource: source-<%= dep %>
      passed: [build-<%= dep %>]
      version: every
      trigger: true
    - get: builds
  - do:
    - task: update-buildpack-dependency
      file: buildpacks-ci/tasks/update-buildpack-dependency/task.yml
      params:
        VERSION_LINE: <%= options[:line] %>
        KEEP_MASTER: <%= options[:keep_master] %>
    - put: <%= buildpack %>-buildpack
      params:
        repository: artifacts
        rebase: true
<% end %>

<% if buildpacks.any? %>
- name: finish-<%= dep %>-story
  serial: true
  public: true
  plan:
  - aggregate:
    - get: buildpacks-ci
    - get: source
      resource: source-<%= dep %>
      trigger: true
      version: every
      passed:
      <% buildpacks.each do |buildpack, _| %>
      - update-<%= dep %>-<%= buildpack %>
      <% end %>
    - get: builds
  - do:
    - task: finish-<%= dep %>-story
      file: buildpacks-ci/tasks/build-binary-new/finish.yml
      params:
        TRACKER_API_TOKEN: {{pivotal-tracker-api-token}}
        TRACKER_PROJECT_ID: {{cf-buildpacks-public-tracker-id}}
<% end %>
<% end %>
