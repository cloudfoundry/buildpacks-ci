<%
  require 'yaml'
  config = YAML.load_file(File.join(__dir__, 'config', 'stacks.yml'))

  stacks = config['stacks']
%>

resources:
  # Github Repos
  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: master

  - name: new-cves
    type: git
    source:
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
      branch: master
      paths: [ new-cve-notifications/ubuntu18.04-tiny.yml ]
      private_key: {{public-buildpacks-ci-robots-private-key}}

<% stacks.each do |stack, stack_data| %>
  <% stack_data["images"].each do |image| %>
# CNB stack images
  - name: <%= stack %>-<%= image %>-base-image
    type: docker-image
    source:
      repository: cloudfoundry/<%= image %>
      tag: <%= stack_data["tag"] %>
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io

  - name: <%= stack %>-<%= image %>-cnb-image
    type: docker-image
    source:
      repository: cloudfoundry/<%= image %>
      tag: <%= stack_data["tag"] %>-cnb
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}
      email: cf-buildpacks-eng@pivotal.io

# Dockerfiles
  - name: <%= stack %>-<%= image %>-cnb-dockerfile
    type: git
    source:
      uri: https://github.com/cloudfoundry/stacks
      branch: master
      paths: [ "<%= stack %>/cnb/<%= image %>/**" ]

    <% if stack_data["base"] %>
  - name: <%= stack %>-<%= image %>-base-dockerfile
    type: git
    source:
      uri: https://github.com/cloudfoundry/stacks
      branch: master
      paths: [ "<%= stack %>/base/<%= image %>/**" ]
    <% end %>

# Versions
  - name: <%= stack %>-<%= image %>-cnb-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/<%= stack %>-<%= image %>-cnb
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}

    <% if stack_data["base"] %>
  - name: <%= stack %>-<%= image %>-base-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/<%= stack %>-<%= image %>-base
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}
    <% end %>
  <% end %>
<% end %>

  # Tiny's build image is a re-tagged version of the bionic image (and not built from a dockerfile)
  # so it is a special case
  - name: tiny-build-cnb-image
    type: docker-image
    source:
      repository: cloudfoundry/build
      tag: tiny-cnb
      email: {{buildpacks-docker-user-email}}
      username: {{buildpacks-docker-username}}
      password: {{buildpacks-docker-password}}

  - name: tiny-build-cnb-version
    type: semver
    source:
      initial_version: 0.0.1
      bucket: cnb-versions
      key: builder/tiny-build-cnb
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}


jobs:
  - name: test-tiny
    plan:
      - get: tiny-run-base-dockerfile
        trigger: true
      - get: buildpacks-ci
      - get: new-cves
        trigger: true
      - task: integration-test
        privileged: true
        file: buildpacks-ci/tasks/test-tiny-docker-image/task.yml

  - name: update-tiny-build-cnb-image
    public: true
    plan:
      - get: bionic-build-cnb-dockerfile
        trigger: true
      - get: bionic-build-base-image
        trigger: true
        passed:
          - update-bionic-build-base-image
      - get: version
        resource: tiny-build-cnb-version
        params:
          pre: tiny-cnb
          pre_without_version: true
      - put: tiny-build-cnb-image
        attempts: 2
        params:
          additional_tags: version/version
          build: bionic-build-cnb-dockerfile/bionic/cnb/build
          build_args:
            base_image: "cloudfoundry/build:base"
            stack_id: "org.cloudfoundry.stacks.tiny"
            squash: squash
      - put: version
        resource: tiny-build-cnb-version
        params:
          bump: patch

<% stacks.each do |stack, stack_data| %>
  <% stack_data["images"].each do |image| %>
    <% if stack_data["base"] %>
  - name: update-<%= stack %>-<%= image %>-base-image
    public: true
    plan:
      - get: <%= stack %>-<%= image %>-base-dockerfile
        trigger: true
      <% if stack == "tiny" %>
        passed: [test-tiny]
      - get: new-cves
        passed: [test-tiny]
        trigger: true
      <% end %>
      - get: version
        resource: <%= stack %>-<%= image %>-base-version
        params:
          pre: <%= stack_data["tag"] %>
          pre_without_version: true
      - put: <%= stack %>-<%= image %>-base-image
        attempts: 2
        params:
          additional_tags: version/version
          build: <%= stack %>-<%= image %>-base-dockerfile/<%= stack %>/base/<%= image %>
          build_args:
            squash: squash
      - put: version
        resource: <%= stack %>-<%= image %>-base-version
        params:
          bump: patch
    <% end %>

  - name: update-<%= stack %>-<%= image %>-cnb-image
    public: true
    plan:
      - get: <%= stack %>-<%= image %>-cnb-dockerfile
        trigger: true
      - get: <%= stack %>-<%= image %>-base-image
        trigger: true
    <% if stack_data["base"] %>
        passed: [ update-<%= stack %>-<%= image %>-base-image ]
    <% end %>
      - get: version
        resource: <%= stack %>-<%= image %>-cnb-version
        params:
          pre: <%= stack_data["tag"] %>-cnb
          pre_without_version: true
      - put: <%= stack %>-<%= image %>-cnb-image
        attempts: 2
        params:
          additional_tags: version/version
          build: <%= stack %>-<%= image %>-cnb-dockerfile/<%= stack %>/cnb/<%= image %>
          build_args:
            base_image: "cloudfoundry/<%= image %>:<%= stack_data["tag"] %>"
            squash: squash
    <% if stack_data["latest"] %>
          tag_as_latest: true
    <% end %>
      - put: version
        resource: <%= stack %>-<%= image %>-cnb-version
        params:
          bump: patch
  <% end %>
<% end %>
