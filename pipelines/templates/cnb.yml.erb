<% require 'yaml'
  buildpacks = YAML.load_file(File.join(__dir__, '..', 'config', 'cnb-builds.yml'))
%>
---

resources: ############################################################################################################
  ## Git ##
  - name: buildpack-git
    type: git
    webhook_token: ob0aigh3
    source:
      uri: git@github.com:cloudfoundry/<%= language %>-cnb.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: master

  - name: cnb-tools-git
    type: git
    source:
      uri: git@github.com:cloudfoundry/cnb-tools.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master

  - name: libcfbuildpack
    type: git
    source:
      uri: git@github.com:cloudfoundry/libcfbuildpack.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master

  <% if buildpacks[language]['integration'] %>
  - name: dagger
    type: git
    source:
      uri: git@github.com:cloudfoundry/dagger.git
      private_key: {{cf-buildpacks-eng-github-ssh-key}}
      branch: master
  <% end %>

  ## Github Releases ##
  <% if buildpacks[language]['integration'] %>
  - name: pack
    type: github-release
    source:
      repository: pack
      user: buildpack
      access_token: {{buildpacks-github-token}}
  <% end %>

  - name: buildpack-github-release
    type: github-release
    source:
      repository: <%=language%>-cnb
      user: cloudfoundry
      access_token: {{buildpacks-github-token}}

  - name: <%= language %>-cnb-version
    type: semver
    source:
      initial_version: 0.0.0
      driver: gcs
      bucket: artifacts.cf-buildpacks.appspot.com
      key: cnb-versions/<%= language %>-version
      json_key: {{gcp-service-account-key}}

  <% if buildpacks[language]['build_cache'] %>
  - name: cached-cnb
    type: s3
    source:
      bucket: {{cached-cnb-bucket}}
      regexp: <%= language%>/<%= language %>-cnb-*-cached.tgz
      access_key_id: {{pivotal-offline-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-offline-buildpacks-s3-secret-key}}
  <% end %>

jobs: ################################################################################################################

  - name: update-cnb-tools
    public: true
    serial: true
    serial_groups: [ update ]
    plan:
    - in_parallel:
      - get: buildpacks-ci
      - get: cnb-tools-git
        trigger: true
      - get: buildpack
        resource: buildpack-git
    - task: update-cnb-tools
      file: buildpacks-ci/tasks/update-cnb-tools/task.yml
    - put: buildpack-git
      params:
        repository: buildpack-artifacts
        rebase: true

  - name: update-libcfbuildpack
    public: true
    serial: true
    serial_groups: [ update ]
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: libcfbuildpack
          trigger: true
        - get: project
          resource: buildpack-git
      - task: update-libcfbuildpack
        file: buildpacks-ci/tasks/update-go-module/task.yml
        attempts: 2
        params:
          MODULE_PATH: github.com/cloudfoundry/libcfbuildpack
          VENDOR: true
      - put: buildpack-git
        params:
          repository: project
          rebase: true

<% if buildpacks[language]['integration'] %>
  - name: update-dagger
    public: true
    serial: true
    serial_groups: [ update ]
    plan:
      - in_parallel:
        - get: buildpacks-ci
        - get: dagger
          trigger: true
        - get: project
          resource: buildpack-git
      - task: update-dagger
        file: buildpacks-ci/tasks/update-go-module/task.yml
        attempts: 2
        params:
          MODULE_PATH: github.com/cloudfoundry/dagger
          VENDOR: true
      - put: buildpack-git
        params:
          repository: project
          rebase: true
<% end %>

  - name: specs-unit
    public: true
    serial: true
    plan:
      - do:
        - in_parallel:
          - get: buildpacks-ci
          - get: repo
            resource: buildpack-git
            trigger: true
        - do:
          - task: unit tests
            file: buildpacks-ci/tasks/run-scripts-unit/task.yml

<% if buildpacks[language]['integration'] %>
  - name: specs-integration
    public: true
    serial: true
    plan:
      - in_parallel:
          - get: buildpacks-ci
          - get: packager
            resource: libcfbuildpack
          - get: pack
          - get: buildpack
            resource: buildpack-git
            trigger: true
            passed:
              - specs-unit
      - task: integration-tests
        file: buildpacks-ci/tasks/run-packaged-v3-bp-integration/task.yml
        privileged: true
        params:
          GIT_TOKEN: {{buildpacks-github-token}}
<% end %>

  - name: build-and-release-buildpack
    public: true
    serial: true
    plan:
      - in_parallel:
          - get: version
            resource: <%= language %>-cnb-version
            params:
              bump: patch
          - get: buildpacks-ci
          - get: packager
            resource: libcfbuildpack
          - get: buildpack
            resource: buildpack-git
            trigger: true
            passed:
              <% if buildpacks[language]['integration'] %>
              - specs-integration
              <% else %>
              - specs-unit
              <% end %>
      - task: package-buildpack
        file: buildpacks-ci/tasks/package-v3-buildpack/task.yml
        params:
          LANGUAGE: <%= language %>
      - put: buildpack-github-release
        params:
          name: release-artifacts/name
          tag: release-artifacts/tag
          body: release-artifacts/body
          globs:
            - release-artifacts/<%= language %>-cnb-*.tgz
      - put: version
        resource: <%= language %>-cnb-version
        params:
          file: version/version
      <% if buildpacks[language]['build_cache'] %>
      - put: cached-cnb
        params:
          file: release-artifacts/<%= language %>-cnb-*-cached.tgz
      <% end %>
