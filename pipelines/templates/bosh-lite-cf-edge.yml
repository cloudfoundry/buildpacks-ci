resource_types:
  - name: cron
    type: docker-image
    source:
      repository: cftoolsmiths/cron-test
resources:
  - name: nightly-trigger
    type: cron
    source:
      expression: <%= deployment_name.bytes.reduce(&:+) % 10 %> 0 * * *
      location: {{current-timezone}}
  - name: cf-deployment
    type: bosh-deployment
    source:
      target: https://<%= full_deployment_name +  '.' + bosh_lite_domain_name %>:25555
      username: admin
      password: {{gcp_bosh_lite_admin_password}}
      deployment: cf-warden
      ignore_ssl: true
  - name: diego-deployment
    type: bosh-deployment
    source:
      target: https://<%= full_deployment_name +  '.' + bosh_lite_domain_name %>:25555
      username: admin
      password: {{gcp_bosh_lite_admin_password}}
      deployment: cf-warden-diego
      ignore_ssl: true
  - name: deployments-buildpacks
    type: git
    source:
      uri: {{deployments-git-uri}}
      private_key: {{deployments-private-key}}
      branch: master
  - name: bosh-lite
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-lite
  - name: resource-pools
    type: pool
    source:
      branch: resource-pools
      pool: {{resource-pool}}
      private_key: {{buildpacks-ci-private-key}}
      uri: {{buildpacks-ci-git-uri}}
  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}
  - name: machete
    type: git
    source:
      uri: {{machete-git-uri-public}}
      branch: master
  - name: cflinuxfs2-rootfs-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/cflinuxfs2-rootfs-release
  - name: cf-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/cf-release
  - name: diego-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/diego-release
  - name: garden-runc-bosh-release
    type: bosh-io-release
    tarball: true
    source:
      repository: cloudfoundry/garden-runc-release
  - name: bosh-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent

jobs:
  - name: remove-environment
    serial_groups: [ deploy ]
    serial: true
    public: true
    plan:
      - get: nightly-trigger
        trigger: true
      - put: resource-pools
        params:
          claim: {{deployment-name}}
        timeout: 3h
      - put: resource-pools
        params:
          remove: resource-pools
        timeout: 3h
  - name: recreate-bosh-lite
    serial_groups: [ deploy ]
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: deployments-buildpacks
          - get: resource-pools
          - get: bosh-lite-resource
            resource: resource-pools
            passed: [remove-environment]
            trigger: true
        - task: check-if-bosh-lite-resource-exists
          file: buildpacks-ci/tasks/check-if-bosh-lite-resource-exists/task.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
        - task: recreate-bosh-lite
          file: buildpacks-ci/tasks/recreate-bosh-lite/task.yml
          params:
            IAAS: {{iaas}}
            GCP_BOSH_DIRECTOR_USER: {{gcp_bosh_admin_user}}
            GCP_BOSH_DIRECTOR_PASSWORD: {{gcp_bosh_admin_password}}
            GCP_BOSH_LITE_NAME: {{bosh-lite-name}}
            DEPLOYMENT_NAME: {{deployment-name}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
            BOSH_TARGET: <%= full_deployment_name +  '.' + bosh_lite_domain_name %>
            BOSH_LITE_NAME: {{deployment-name}}
            RUBYGEM_MIRROR: {{rubygem-mirror}}
            BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
            BOSH_LITE_ADMIN_PASSWORD: {{gcp_bosh_lite_admin_password}}
            BOSH_LITE_HM_PASSWORD: {{gcp_bosh_lite_hm_password}}
            BOSH_LITE_NATS_PASSWORD: {{gcp_bosh_lite_nats_password}}
            BOSH_LITE_BLOBSTORE_AGENT_PASSWORD: {{gcp_bosh_lite_blobstore_agent_password}}
            BOSH_LITE_BLOBSTORE_DIRECTOR_PASSWORD: {{gcp_bosh_lite_blobstore_director_password}}
            BOSH_LITE_POSTGRES_PASSWORD: {{gcp_bosh_lite_postgres_password}}
            ######## For AWS Deploys ##################
            BOSH_PRIVATE_KEY: {{bosh_private_key}}
            AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_AWS_ACCESS_KEY_ID: {{buildpacks_ci_aws_access_key_id}}
            BOSH_AWS_SECRET_ACCESS_KEY: {{buildpacks_ci_aws_secret_access_key}}
            BOSH_LITE_SUBNET_ID: {{bosh_lite_subnet_id}}
            BOSH_LITE_SECURITY_GROUP: {{bosh_lite_security_group}}

          ensure:
            put: deployments-buildpacks
            params:
              repository: deployments-buildpacks-artifacts
              rebase: true
  - name: generate-manifest
    serial_groups: [ deploy ]
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: deployments-buildpacks
            passed: ['recreate-bosh-lite']
            trigger: true
          - get: buildpacks-ci
          - get: bosh-lite
          - get: cf-bosh-release
            params:
              tarball: false
          - get: diego-bosh-release
            params:
              tarball: false
          - get: resource-pools
        - aggregate:
          - task: cf-release-checkout
            file: buildpacks-ci/tasks/checkout-cf-release/task.yml
          - task: diego-release-checkout
            file: buildpacks-ci/tasks/checkout-diego-release/task.yml
        - task: check-if-bosh-lite-resource-exists
          file: buildpacks-ci/tasks/check-if-bosh-lite-resource-exists/task.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
        - task: generate-manifest
          file: buildpacks-ci/tasks/generate-cf-and-diego-manifests/task.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
            CI_CF_PASSWORD: {{ci-cf-password}}
            BOSH_USER: {{bosh_user}}
            BOSH_PASSWORD: {{gcp_bosh_lite_admin_password}}
            BOSH_TARGET: <%= full_deployment_name +  '.' + bosh_lite_domain_name %>
            BOSH_LITE_NAME: {{deployment-name}}
            RUBYGEM_MIRROR: {{rubygem-mirror}}
            BOSH_LITE_DOMAIN_NAME: {{bosh-lite-domain-name}}
            ROOTFS_RELEASE: cflinuxfs2-rootfs
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: generate-manifest-artifacts
            rebase: true
  - name: deploy-cf
    serial_groups: [ deploy ]
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: deployments-buildpacks
            passed: ['generate-manifest']
            trigger: true
          - get: bosh-lite
          - get: buildpacks-ci
          - get: bosh-stemcell
          - get: cf-bosh-release
          - get: resource-pools
        - task: check-if-bosh-lite-resource-exists
          file: buildpacks-ci/tasks/check-if-bosh-lite-resource-exists/task.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
        - put: cf-deployment
          params:
            manifest: {{cf-manifest-location}}
            stemcells: ['bosh-stemcell/stemcell.tgz']
            releases:
              - cf-bosh-release/release.tgz
  - name: deploy-diego
    serial_groups: [ deploy ]
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: deployments-buildpacks
            passed: ['deploy-cf']
            trigger: true
          - get: buildpacks-ci
          - get: bosh-stemcell
          - get: cflinuxfs2-rootfs-bosh-release
          - get: diego-bosh-release
          - get: garden-runc-bosh-release
          - get: resource-pools
        - task: check-if-bosh-lite-resource-exists
          file: buildpacks-ci/tasks/check-if-bosh-lite-resource-exists/task.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
        - put: diego-deployment
          params:
            manifest: {{diego-manifest-location}}
            stemcells: ['bosh-stemcell/stemcell.tgz']
            releases:
              - cflinuxfs2-rootfs-bosh-release/release.tgz
              - diego-bosh-release/release.tgz
              - garden-runc-bosh-release/release.tgz
  - name: update-machete
    serial_groups: [ deploy ]
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: deployments-buildpacks
            passed: ['deploy-diego']
            trigger: true
          - get: machete
          - get: resource-pools
        - task: check-if-bosh-lite-resource-exists
          file: buildpacks-ci/tasks/check-if-bosh-lite-resource-exists/task.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
        - task: configure-deployment
          file: buildpacks-ci/tasks/machete-configure-deployment/task.yml
          params:
            BOSH_TARGET: <%= full_deployment_name +  '.' + bosh_lite_domain_name %>
            CI_CF_PASSWORD: {{ci-cf-password}}
            CI_CF_USERNAME: {{ci-cf-username}}
  - name: restore-environment
    serial_groups: [ deploy ]
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: deployments-buildpacks
            passed: ['update-machete']
            trigger: true
          - get: resource-pools
      - task: check-if-bosh-lite-resource-exists
        file: buildpacks-ci/tasks/check-if-bosh-lite-resource-exists/task.yml
        params:
          DEPLOYMENT_NAME: {{deployment-name}}
      - task: write-bosh-lite-resource-metadata
        file: buildpacks-ci/tasks/write-bosh-lite-resource-metadata/task.yml
        params:
          DEPLOYMENT_NAME: {{deployment-name}}
      - put: resource-pools
        params:
          add: new-bosh-lite-resource
