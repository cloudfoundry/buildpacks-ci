<% compile_extensions = %w(php) %>
<% no_brats = %w(credhub hwc multi r) %>
<% non_published = %(apt credhub hwc multi nginx r) %>
<% push_to_pws = %(hwc) %>
<% non_lts = %(apt credhub hwc) %>
<% skip_docker_start = %w(binary r) %>
<% stacks = {
  "hwc" => %w(windows2012R2 windows2016),
  "apt" => %w(cflinuxfs2),
  "binary" => %w(cflinuxfs2),
  "credhub" => %w(cflinuxfs2),
  "dotnet-core" => %w(cflinuxfs2),
  "go" => %w(cflinuxfs2),
  "multi" => %w(cflinuxfs2),
  "nginx" => %w(cflinuxfs2),
  "nodejs" => %w(cflinuxfs2),
  "php" => %w(cflinuxfs2),
  "python" => %w(cflinuxfs2),
  "r" => %w(cflinuxfs2),
  "ruby" => %w(cflinuxfs2),
  "staticfile" => %w(cflinuxfs2)
} %>

---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
  - name: pivnet
    type: docker-image
    source:
      repository: pivotalcf/pivnet-resource
      tag: latest-final
  - name: cf-space-resource
    type: docker-image
    source:
      repository: cfbuildpacks/cf-space-resource
  - name: cron
    type: docker-image
    source:
      repository: cfbuildpacks/cron-resource

resources: ############################################################################################################

  ## cf-space-resource ##

  - name: cf-bp-space
    type: cf-space-resource
    source:
      target: api.edge.buildpacks-gcp.ci.cf-app.com
      username: {{ci-cf-username}}
      password: {{ci_cf_edge_password}}
      organization: pivotal

<% unless no_brats.include?(language) %>
  - name: cf-brat-space
    type: cf-space-resource
    source:
      target: api.edge.buildpacks-gcp.ci.cf-app.com
      username: {{ci-cf-username}}
      password: {{ci_cf_edge_password}}
      organization: pivotal
<% end %>

<% unless non_lts.include? language %>
  - name: cf-lts-space
    type: cf-space-resource
    source:
      target: {{ci-cf-lts-target}}
      username: admin
      password: {{ci-cf-lts-password}}
      organization: pivotal

<% unless no_brats.include?(language) %>
  - name: cf-lts-brat-space
    type: cf-space-resource
    source:
      target: {{ci-cf-lts-target}}
      username: admin
      password: {{ci-cf-lts-password}}
      organization: pivotal
<% end %>
<% end %>

  ## Git ##

  - name: buildpack-develop
    type: git
    webhook_token: ob0aigh3
    source:
      uri: git@github.com:<%= organization %>/<%= language %>-buildpack.git
      private_key: {{<%= language %>-buildpack-private-key}}
      branch: develop
      ignore_paths:
        - VERSION
        - CHANGELOG

  - name: buildpack-new-version
    type: git
    source:
      uri: git@github.com:<%= organization %>/<%= language %>-buildpack.git
      private_key: {{<%= language %>-buildpack-private-key}}
      branch: develop
      paths:
        - VERSION
        - CHANGELOG

  - name: buildpack-master
    type: git
    source:
      uri: git@github.com:<%= organization %>/<%= language %>-buildpack.git
      private_key: {{<%= language %>-buildpack-private-key}}
      branch: master

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}

<% unless non_published.include? language %>
  - name: pivnet-buildpack-metadata
    type: git
    source:
      branch: master
      private_key: {{pivotal-cf-buildpacks-ci-robots}}
      uri: git@github.com:pivotal-cf/buildpacks-ci-robots.git # pivotal-cf because pivnet is not foundation's
      paths: [ pivnet-metadata/<%= language %>.yml ]
<% end %>

  - name: libbuildpack
    type: git
    webhook_token: ob0aigh3
    source:
      uri: https://github.com/cloudfoundry/libbuildpack.git
<% if compile_extensions.include? language %>
  - name: compile-extensions
    type: git
    source:
      uri: https://github.com/cloudfoundry/compile-extensions.git
<% end %>

<% if language == 'multi' %>
  - name: buildpackapplifecycle
    type: git
    source:
      uri: https://github.com/cloudfoundry/buildpackapplifecycle.git
<% end %>

  - name: buildpack-checksums
    type: git
    source:
      uri: git@bitbucket.org:cloudfoundry-buildpacks/buildpack-checksums.git
      private_key: {{buildpack-checksums-private-key}}
      branch: master

<% if language == 'hwc' %>
  - name: buildpack-bosh-release
    type: git
    source:
      uri: git@github.com:<%= organization %>/<%= language %>-buildpack-release.git
      private_key: {{<%= language %>-buildpack-bosh-release-private-key}}
      branch: master
  - name: offline-buildpack-bosh-release
    type: git
    source:
      uri: git@github.com:pivotal-cf/<%= language %>-offline-buildpack-release.git
      private_key: {{<%= language %>-offline-buildpack-bosh-release-private-key}}
      branch: master
<% end %>


  ## Github Releases ##

  - name: buildpack-github-release
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: <%= language %>-buildpack
      access_token: {{buildpacks-github-token}}

<% if language == 'hwc' %>
  - name: binary-buildpack-github-release
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: binary-buildpack
      access_token: {{buildpacks-github-token}}

  - name: buildpack-bosh-release-github-release
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: <%= language %>-buildpack-release
      access_token: {{buildpacks-github-token}}
  - name: offline-buildpack-bosh-release-github-release
    type: github-release
    source:
      user: pivotal-cf
      repository: <%= language %>-offline-buildpack-release
      access_token: {{buildpacks-github-token}}
<% end %>

<% if compile_extensions.include? language %>
  - name: buildpack-packager
    type: github-release
    source:
      user: {{buildpacks-github-org}}
      repository: buildpack-packager
      access_token: {{buildpacks-github-token}}
<% end %>

  ## Pivnet Release ##

<% unless non_published.include? language %>
  - name: pivnet-production
    type: pivnet
    source:
      endpoint: https://network.pivotal.io
      bucket: pivotalnetwork
      api_token: {{pivnet-apikey}}
      product_slug: buildpacks
      access_key_id: {{pivnet-access-key}}
      secret_access_key: {{pivnet-secret-key}}
<% end %>

  ## S3 Buckets ##

  - name: pivotal-buildpack
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: buildpack-release-candidates/<%= language%>/<%= language %>_buildpack-v(.*).zip
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  - name: pivotal-buildpack-cached
    type: s3
    source:
      bucket: {{buildpacks-binaries-s3-bucket}}
      regexp: buildpack-release-candidates/<%= language%>/<%= language %>_buildpack-cached-.*-v(.*).zip
      access_key_id: {{pivotal-buildpacks-s3-access-key}}
      secret_access_key: {{pivotal-buildpacks-s3-secret-key}}

  ## Resource Pools ##

  - name: edge-shared-environments
    type: pool
    source:
      branch: master
      pool: edge-shared-environments
      private_key: {{public-buildpacks-ci-robots-private-key}}
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots

<% unless non_lts.include? language %>
  - name: lts-shared-environments
    type: pool
    source:
      branch: master
      pool: lts-shared-environments
      private_key: {{public-buildpacks-ci-robots-private-key}}
      uri: git@github.com:cloudfoundry/public-buildpacks-ci-robots
<% end %>

  ## Alerts ##

  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}

  - name: sunday-night
    type: cron
    source:
      expression: 0 18 * * 0
      location: {{current-timezone}}

jobs: ################################################################################################################
<% if language == "php" %>
  - name: ensure-manifest-has-modules
    serial: true
    public: true
    plan:
      - get: buildpacks-ci
      - get: buildpack
        resource: buildpack-develop
        trigger: true
      - task: check-modules
        file: buildpacks-ci/tasks/check-php-modules-in-manifest/task.yml
<% end %>
  - name: specs-unit-develop
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: buildpack
            resource: buildpack-develop
<% if language == "php" %>
            passed: [ ensure-manifest-has-modules ]
<% end %>
            trigger: true
        - do:
          - task: ginkgo
            file: buildpacks-ci/tasks/run-buildpack-unit-specs/task.yml
  - name: create-buildpack-release-story
    serial: true
    public: true
    plan:
      - get: sunday-night
        trigger: true
      - aggregate:
        - get: pivotal-buildpack
        - get: pivotal-buildpack-cached
        - get: buildpacks-ci
        - get: buildpack
          resource: buildpack-master
      - do:
        - task: create-buildpack-release-story
          file: buildpacks-ci/tasks/create-buildpack-release-tracker-story/task.yml
          params:
            BUILDPACK_NAME: <%= language %>
            TRACKER_PROJECT_ID: {{cf-buildpacks-public-tracker-id}}
            TRACKER_REQUESTER_ID: {{cf-buildpacks-requester-id}}
            TRACKER_API_TOKEN: {{pivotal-tracker-api-token}}
  - name: detect-new-version-and-upload-artifacts
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: buildpack
          resource: buildpack-master
          trigger: true
        - get: pivotal-buildpack-cached
        - get: pivotal-buildpack
      - do:
        - aggregate:
<% stacks[language].each do |stack| %>
          - do:
            - task: detect-and-upload-<%= stack %>
              file: buildpacks-ci/tasks/detect-and-upload/task.yml
              params:
                GIT_REPO_ORG: <%= organization %>
                BUILDPACK_NAME: <%= language %>-buildpack
                RUBYGEM_MIRROR: {{rubygem-mirror}}
                CF_STACK: <%= stack %>
            - put: pivotal-buildpack
              params:
                file: buildpack-artifacts/*_buildpack-v*.zip
            - put: pivotal-buildpack-cached
              params:
                file: buildpack-artifacts/*_buildpack-cached-<%= stack %>-v*.zip
<% end %>
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: specs-edge-master
    serial: true
    public: true
    plan:
      - put: cf-environments
        resource: edge-shared-environments
        params:
          claim: <%= language %>
        timeout: 3h
      - aggregate:
        - get: buildpacks-ci
        - get: buildpack
          passed: [ "detect-new-version-and-upload-artifacts" ]
          resource: buildpack-master
          trigger: true
        - get: repo
          resource: buildpack-master
        - get: pivotal-buildpacks
          resource: pivotal-buildpack
          passed: [ "detect-new-version-and-upload-artifacts" ]
          trigger: true
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ "detect-new-version-and-upload-artifacts" ]
          trigger: true
      - do:
        - task: unit
          file: buildpacks-ci/tasks/run-buildpack-unit-specs/task.yml
        - put: cf-bp-space
<% stacks[language].each do |stack| %>
        - task: ginkgo-<%= stack %>
          file: buildpacks-ci/tasks/run-buildpack-integration-specs/task.yml
          params:
            CF_STACK: <%= stack %>
            GINKGO_ATTEMPTS: 4
            GINKGO_NODES: 6
            <% if language == 'php' %>
            COMPOSER_GITHUB_OAUTH_TOKEN: {{composer-github-oauth-token}}
            <% end %>
<% if skip_docker_start.include?(language) %>
            SKIP_DOCKER_START: true
<% else %>
          privileged: true
<% end %>
<% end %>
          ensure:
            task: delete-cf-space
            file: buildpacks-ci/tasks/delete-cf-space/task-bp.yml
        on_success:
          task: github-set-status-success
          file: buildpacks-ci/tasks/set-status-success/task.yml
          params:
            GITHUB_ACCESS_TOKEN: {{buildpacks-github-token}}
            GITHUB_REPO: <%= organization %>/<%= language %>-buildpack
            GITHUB_STATUS_CONTEXT: 'buildpacks-ci/edge-master'
            GITHUB_STATUS_DESCRIPTION: 'Buildpacks CI edge master spec passed'
            PIPELINE_URI: {{buildpacks-ci-pipeline-uri}}
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        ensure:
          put: edge-shared-environments
          params:
            release: cf-environments
<% unless non_lts.include? language %>
  - name: specs-lts-master
    serial: true
    public: true
    plan:
      - put: cf-environments
        resource: lts-shared-environments
        params:
          claim: <%= language %>
        timeout: 3h
      - aggregate:
        - get: buildpacks-ci
        - get: buildpack
          passed: [ "detect-new-version-and-upload-artifacts" ]
          resource: buildpack-master
          trigger: true
        - get: repo
          resource: buildpack-master
        - get: pivotal-buildpacks
          resource: pivotal-buildpack
          passed: [ "detect-new-version-and-upload-artifacts" ]
          trigger: true
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ "detect-new-version-and-upload-artifacts" ]
          trigger: true
      - do:
        - task: unit
          file: buildpacks-ci/tasks/run-buildpack-unit-specs/task.yml
        - put: cf-bp-space
          resource: cf-lts-space
<% stacks[language].each do |stack| %>
        - task: ginkgo-<%= stack %>
          file: buildpacks-ci/tasks/run-buildpack-integration-specs/task.yml
          params:
            CF_STACK: <%= stack %>
            GINKGO_ATTEMPTS: 4
            GINKGO_NODES: 6
            SKIP_WINDOWS_TESTS: true
            <% if language == 'php' %>
            COMPOSER_GITHUB_OAUTH_TOKEN: {{composer-github-oauth-token}}
            <% end %>
<% if skip_docker_start.include?(language) %>
            SKIP_DOCKER_START: true
<% else %>
          privileged: true
<% end %>
<% end %>
          ensure:
            task: delete-cf-space
            file: buildpacks-ci/tasks/delete-cf-space/task-bp.yml
        on_success:
          task: github-set-status-success
          file: buildpacks-ci/tasks/set-status-success/task.yml
          params:
            GITHUB_ACCESS_TOKEN: {{buildpacks-github-token}}
            GITHUB_REPO: <%= organization %>/<%= language %>-buildpack
            GITHUB_STATUS_CONTEXT: 'buildpacks-ci/lts-master'
            GITHUB_STATUS_DESCRIPTION: 'Buildpacks CI LTS master spec passed'
            PIPELINE_URI: {{buildpacks-ci-pipeline-uri}}
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        ensure:
          put: lts-shared-environments
          params:
            release: cf-environments
<% end %>
  - name: ship-it
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed:
            <% unless non_lts.include? language %>
            - specs-lts-master
            <% end %>
            - specs-edge-master
        - get: pivotal-buildpacks
          resource: pivotal-buildpack
          passed:
            <% unless non_lts.include? language %>
            - specs-lts-master
            <% end %>
            - specs-edge-master
        - get: buildpack
          passed:
            <% unless non_lts.include? language %>
            - specs-lts-master
            <% end %>
            - specs-edge-master
          resource: buildpack-master
      - task: check tag not already added
        file: buildpacks-ci/tasks/check-tag-not-already-added/task.yml
      - put: buildpack-master
        params:
          repository: buildpack
          tag: buildpack/VERSION
          tag_prefix: v
  - name: buildpack-to-github
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ ship-it ]
          trigger: true
        - get: pivotal-buildpacks
          resource: pivotal-buildpack
          passed: [ ship-it ]
        - get: buildpack
          resource: buildpack-master
          passed: [ ship-it ]
          trigger: true
        - get: buildpack-checksums
      - task: finalize-buildpack
        file: buildpacks-ci/tasks/finalize-buildpack/task.yml
      - task: commit-shas
        file: buildpacks-ci/tasks/get-commit-shasums/task.yml
      - put: buildpack-checksums
        params:
          repository: sha-artifacts
          rebase: true
      - put: buildpack-github-release
        params:
          name: buildpack-artifacts/tag
          tag: buildpack-artifacts/tag
          body: buildpack-artifacts/RECENT_CHANGES
          globs:
            - buildpack-artifacts/*-buildpack-v*.zip
            - buildpack-artifacts/*-buildpack-v*.zip.SHA256SUM.txt

<% if !non_published.include?(language) || push_to_pws.include?(language) %>
  - name: buildpack-to-pws
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ ship-it ]
          trigger: true
      - task: update-buildpack
        file: buildpacks-ci/tasks/pws-update-buildpack/task.yml
        params:
          CF_API: https://api.run.pivotal.io
          USERNAME: {{pws_buildpacks_cf_admin_username}}
          PASSWORD: {{pws_buildpacks_cf_admin_password}}
          BUILDPACK_NAME: <%= language %>
<% end %>
<% unless non_published.include? language %>
  - name: write-pivnet-metadata
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: pivnet-buildpack-metadata
        - get: pivotal-buildpacks-cached
          resource: pivotal-buildpack-cached
          passed: [ ship-it ]
          trigger: true
        - get: pivotal-buildpacks
          resource: pivotal-buildpack
          passed: [ ship-it ]
        - get: buildpack
          resource: buildpack-master
          passed: [ ship-it ]
          trigger: true
      - task: finalize-buildpack
        file: buildpacks-ci/tasks/finalize-buildpack/task.yml
      - task: write-pivnet-metadata
        file: buildpacks-ci/tasks/write-buildpack-pivnet-metadata/task.yml
        params:
          BUILDPACK: <%= language %>
      - put: pivnet-buildpack-metadata
        params:
          repository: pivnet-buildpack-metadata-artifacts
          rebase: true

  - name: release-to-pivnet
    public: true
    plan:
      - get: pivotal-buildpack-cached
        passed: [ write-pivnet-metadata ]
        trigger: true
      - get: pivnet-buildpack-metadata
        passed: [ write-pivnet-metadata ]
        trigger: true
      - put: pivnet-production
        params:
          file_glob: pivotal-buildpack-cached/<%= language %>_buildpack-cached-*-v*.zip
          s3_filepath_prefix: product-files/buildpacks
          metadata_file: pivnet-buildpack-metadata/pivnet-metadata/<%= language %>.yml
<% end %>
  - name: specs-edge-integration-develop
    serial: true
    public: true
    plan:
      - do:
        - put: cf-environments
          resource: edge-shared-environments
          params:
            claim: <%= language %>
          timeout: 3h
        - aggregate:
          - get: buildpacks-ci
          - get: buildpack
            resource: buildpack-develop
            trigger: true
            passed:
            - specs-unit-develop
          - get: repo
            resource: buildpack-develop
        - do:
          - put: cf-bp-space
<% stacks[language].each do |stack| %>
          - task: ginkgo-<%= stack %>
            file: buildpacks-ci/tasks/run-buildpack-integration-specs/task.yml
            params:
              CF_STACK: <%= stack %>
              GINKGO_ATTEMPTS: 4
              GINKGO_NODES: 6
              <% if language == 'php' %>
              COMPOSER_GITHUB_OAUTH_TOKEN: {{composer-github-oauth-token}}
              <% end %>
<% if skip_docker_start.include?(language) %>
              SKIP_DOCKER_START: true
<% else %>
            privileged: true
<% end %>
<% end %>
          ensure:
            task: delete-cf-space
            file: buildpacks-ci/tasks/delete-cf-space/task-bp.yml
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        ensure:
          put: edge-shared-environments
          params:
            release: cf-environments
<% unless no_brats.include?(language) %>
  - name: specs-edge-brats-develop
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: buildpack
            resource: buildpack-develop
            trigger: true
            passed:
            - specs-unit-develop
        - do:
          - put: cf-brat-space
<% stacks[language].each do |stack| %>
          - task: brats-<%= stack %>
            file: buildpacks-ci/tasks/run-bp-brats/task.yml
            input_mapping: {cf-space: cf-brat-space}
            params:
              CF_STACK: <%= stack %>
              GINKGO_ATTEMPTS: 4
              GINKGO_NODES: 6
<% end %>
          ensure:
            task: delete-cf-space
            file: buildpacks-ci/tasks/delete-cf-space/task-brat.yml
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
  - name: specs-edge-shared-develop
    serial: true
    public: true
    plan:
      - do:
        - get: buildpacks-ci
        - get: repo
          resource: buildpack-develop
          trigger: true
          passed:
<% unless no_brats.include?(language) %>
          - specs-edge-brats-develop
<% end %>
          - specs-edge-integration-develop
        on_success:
          task: github-set-status-success
          file: buildpacks-ci/tasks/set-status-success/task.yml
          params:
            GITHUB_ACCESS_TOKEN: {{buildpacks-github-token}}
            GITHUB_REPO: <%= organization %>/<%= language %>-buildpack
            GITHUB_STATUS_CONTEXT: 'buildpacks-ci/edge-develop'
            GITHUB_STATUS_DESCRIPTION: 'Buildpacks CI edge develop spec passed'
            PIPELINE_URI: {{buildpacks-ci-pipeline-uri}}

<% unless non_lts.include? language %>
  - name: specs-lts-integration-develop
    serial: true
    public: true
    plan:
      - do:
        - put: cf-environments
          resource: lts-shared-environments
          params:
            claim: <%= language %>
          timeout: 3h
        - aggregate:
          - get: buildpacks-ci
          - get: buildpack
            resource: buildpack-develop
            trigger: true
            passed:
            - specs-unit-develop
          - get: repo
            resource: buildpack-develop
        - do:
          - put: cf-bp-space
            resource: cf-lts-space
<% stacks[language].each do |stack| %>
          - task: ginkgo-<%= stack %>
            file: buildpacks-ci/tasks/run-buildpack-integration-specs/task.yml
            params:
              CF_STACK: <%= stack %>
              GINKGO_ATTEMPTS: 4
              GINKGO_NODES: 6
              SKIP_WINDOWS_TESTS: true
              <% if language == 'php' %>
              COMPOSER_GITHUB_OAUTH_TOKEN: {{composer-github-oauth-token}}
              <% end %>
<% if skip_docker_start.include?(language) %>
              SKIP_DOCKER_START: true
<% else %>
            privileged: true
<% end %>
<% end %>
          ensure:
            task: delete-cf-space
            file: buildpacks-ci/tasks/delete-cf-space/task-bp.yml
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
        ensure:
          put: lts-shared-environments
          params:
            release: cf-environments
<% unless no_brats.include?(language) %>
  - name: specs-lts-brats-develop
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: buildpack
            resource: buildpack-develop
            trigger: true
            passed:
            - specs-unit-develop
        - do:
          - put: cf-brat-space
            resource: cf-lts-brat-space
<% stacks[language].each do |stack| %>
          - task: brats-<%= stack %>
            file: buildpacks-ci/tasks/run-bp-brats/task.yml
            input_mapping: {cf-space: cf-brat-space}
            params:
              CF_STACK: <%= stack %>
              GINKGO_ATTEMPTS: 4
              GINKGO_NODES: 6
<% end %>
          ensure:
            task: delete-cf-space
            file: buildpacks-ci/tasks/delete-cf-space/task-brat.yml
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
  - name: specs-lts-gcp-develop
    serial: true
    public: true
    plan:
      - do:
        - get: buildpacks-ci
        - get: repo
          resource: buildpack-develop
          trigger: true
          passed:
<% unless no_brats.include?(language) %>
          - specs-lts-brats-develop
<% end %>
          - specs-lts-integration-develop
        on_success:
          task: github-set-status-success
          file: buildpacks-ci/tasks/set-status-success/task.yml
          params:
            GITHUB_ACCESS_TOKEN: {{buildpacks-github-token}}
            GITHUB_REPO: <%= organization %>/<%= language %>-buildpack
            GITHUB_STATUS_CONTEXT: 'buildpacks-ci/lts-develop'
            GITHUB_STATUS_DESCRIPTION: 'Buildpacks CI lts develop spec passed'
            PIPELINE_URI: {{buildpacks-ci-pipeline-uri}}
<% end %>
  - name: buildpack-to-master
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: repo
          trigger: true
          resource: buildpack-new-version
      - task: merge-to-master
        file: buildpacks-ci/tasks/buildpack-to-master/task.yml
        params:
          GITHUB_ACCESS_TOKEN: {{buildpacks-github-token}}
          GITHUB_REPO: <%= organization %>/<%= language %>-buildpack
          GITHUB_STATUS_CONTEXT: 'buildpacks-ci/passed-dev-specs'
          GITHUB_STATUS_DESCRIPTION: 'Buildpacks CI develop specs passed'
          PIPELINE_URI: {{buildpacks-ci-pipeline-uri}}
  - name: update-libbuildpack
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: libbuildpack
          trigger: true
        - get: buildpack
          resource: buildpack-develop
      - task: update-libbuildpack
        file: buildpacks-ci/tasks/update-libbuildpack/task.yml
        params:
          LANGUAGE: <%= language %>
      - put: buildpack-develop
        params:
          repository: buildpack-artifacts
          rebase: true
<% if compile_extensions.include? language %>
  - name: update-compile-extensions
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: compile-extensions
          trigger: true
        - get: buildpack
          resource: buildpack-develop
      - task: update-compile-extensions
        file: buildpacks-ci/tasks/update-compile-extensions/task.yml
        params: { RUBYGEM_MIRROR: {{rubygem-mirror}}  }
      - put: buildpack-develop
        params:
          repository: buildpack-artifacts
          rebase: true
  - name: update-buildpack-packager
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: gem
          resource: buildpack-packager
          trigger: true
        - get: repo-with-gemfile
          resource: buildpack-develop
      - task: update-buildpack-packager
        file: buildpacks-ci/tasks/update-gem-in-gemfile/task.yml
        params:
          RUBYGEM_MIRROR: {{rubygem-mirror}}
          GEM_NAME: buildpack-packager
          GEM_GIT_REPOSITORY: {{buildpack-packager-git-uri-public}}
          GEMFILE_NAME: cf.Gemfile
      - put: buildpack-develop
        params:
          repository: repo-with-gemfile-artifacts
          rebase: true
<% end %>
<% if language == 'multi' %>
  - name: update-buildpackapplifecycle
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: buildpackapplifecycle
          trigger: true
        - get: buildpack
          resource: buildpack-develop
      - task: update-buildpackapplifecycle
        file: buildpacks-ci/tasks/update-buildpackapplifecycle/task.yml
        params:
          LANGUAGE: <%= language %>
      - put: buildpack-develop
        params:
          repository: buildpack-artifacts
          rebase: true
<% end %>

<% if language == 'hwc' %>
  - name: update-buildpack-bosh-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: release
          resource: buildpack-bosh-release
        - get: blob
          resource: buildpack-github-release
          trigger: true
          passed: [ buildpack-to-github ]
        - get: extra-blob
          resource: binary-buildpack-github-release
      - do:
        - task: convert release version to version resource
          file: buildpacks-ci/tasks/convert-release-to-version/task.yml
        - task: add-extra-blob-for-bosh-release
          file: buildpacks-ci/tasks/add-extra-blob-for-bosh-release/task.yml
          params:
            LANGUAGE: binary
        - task: create-online-bosh-release
          file: buildpacks-ci/tasks/create-online-bosh-release/task.yml
          params:
            ACCESS_KEY_ID: {{pivotal-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-buildpacks-s3-secret-key}}
            LANGUAGES: "hwc binary"
            RELEASE_NAME: hwc-buildpack
            RELEASE_DIR: release
        - put: buildpack-bosh-release
          params:
            repository: release-artifacts
            rebase: true
            tag: blob/version
        - put: buildpack-bosh-release-github-release
          params:
            name: blob/version
            tag: blob/version
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
  - name: update-offline-buildpack-bosh-release
    serial: true
    public: true
    plan:
      - aggregate:
        - get: buildpacks-ci
        - get: release
          resource: offline-buildpack-bosh-release
        - get: blob
          resource: buildpack-github-release
          trigger: true
          passed: [ buildpack-to-github ]
          params:
            include_source_tarball: true
      - do:
        - task: build-offline-buildpacks
          file: buildpacks-ci/tasks/build-offline-buildpacks-cutlass/task.yml
          params:
            LANGUAGE: hwc
            CF_STACKS: <%= stacks['hwc'].join(' ') %>
        - task: build-offline-buildpacks
          file: buildpacks-ci/tasks/build-offline-buildpacks-cutlass/task.yml
          params:
            LANGUAGE: binary
            CF_STACKS: "windows2012R windows2016"
        - task: convert release version to version resource
          file: buildpacks-ci/tasks/convert-release-to-version/task.yml
        - task: create-offline-bosh-release
          file: buildpacks-ci/tasks/create-offline-bosh-release/task.yml
          params:
            ACCESS_KEY_ID: {{pivotal-offline-buildpacks-s3-access-key}}
            SECRET_ACCESS_KEY: {{pivotal-offline-buildpacks-s3-secret-key}}
            LANGUAGES: "hwc binary"
            RELEASE_NAME: hwc-offline-buildpack
            RELEASE_DIR: release
        - put: offline-buildpack-bosh-release
          params:
            repository: release-artifacts
            rebase: true
            tag: blob/version
        - put: offline-buildpack-bosh-release-github-release
          params:
            name: blob/version
            tag: blob/version
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
<% end %>
