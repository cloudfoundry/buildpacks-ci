resources:
  - name: nightly-trigger
    type: cron
    source:
      expression: <%= deployment_name.bytes.reduce(&:+) % 10 %> 0 * * *
      location: America/New_York
  - name: cf-deployment
    type: bosh-deployment
    source:
      target: https://{{deployment-name}}.cf-app.com:25555
      username: admin
      password: {{bosh-lite-password}}
      deployment: cf-warden
      ignore_ssl: true
  - name: diego-deployment
    type: bosh-deployment
    source:
      target: https://{{deployment-name}}.cf-app.com:25555
      username: admin
      password: {{bosh-lite-password}}
      deployment: cf-warden-diego
      ignore_ssl: true
  - name: deployments-buildpacks
    type: git
    source:
      uri: git@github.com:pivotal-cf/deployments-buildpacks
      private_key: {{deployments-private-key}}
      branch: master
  - name: bosh-lite
    type: git
    source:
      uri: https://github.com/cloudfoundry/bosh-lite
  - name: resource-pools
    type: pool
    source:
      branch: resource-pools
      pool: {{resource-pool}}
      private_key: {{resource-pools-private-key}}
      uri: git@github.com:cloudfoundry/buildpacks-ci.git
  - name: buildpacks-ci
    type: git
    source:
      uri: https://github.com/cloudfoundry/buildpacks-ci
  - name: machete
    type: git
    source:
      uri: https://github.com/cloudfoundry/machete.git
      branch: master
  - name: bosh-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-warden-boshlite-ubuntu-trusty-go_agent

jobs:
  - name: checkout-environment
    serial_groups: [ deploy ]
    serial: true
    plan:
      - get: nightly-trigger
        trigger: true
      - put: resource-pools
        params:
          claim: {{deployment-name}}
        timeout: 3h
  - name: recreate-bosh-lite
    serial_groups: [ deploy ]
    serial: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
          - get: deployments-buildpacks
          - get: resource-pools
            passed: [checkout-environment]
            trigger: true
        - task: recreate-bosh-lite
          file: buildpacks-ci/tasks/recreate-bosh-lite.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
            PASSWORD: {{bosh-lite-password}}
          ensure:
            put: deployments-buildpacks
            params:
              repository: deployments-buildpacks-artifacts
              rebase: true
        on_failure:
          put: resource-pools
          params:
            release: resource-pools
  - name: generate-manifest
    serial_groups: [ deploy ]
    serial: true
    plan:
      - do:
        - aggregate:
          - get: deployments-buildpacks
            passed: ['recreate-bosh-lite']
            trigger: true
          - get: resource-pools
            passed: ['recreate-bosh-lite']
            trigger: true
          - get: buildpacks-ci
          - get: bosh-lite
        - aggregate:
          - task: cf-release-checkout
            file: buildpacks-ci/tasks/checkout-cf-lts-release.yml
            params:
              RELEASE_VERSION: {{cf-version}}
        - task: generate-manifest
          file: buildpacks-ci/tasks/make-manifest.yml
          params:
            DEPLOYMENT_NAME: {{deployment-name}}
            CI_CF_PASSWORD: {{ci-cf-password}}
          privileged: true
        - put: deployments-buildpacks
          params:
            repository: deployments-buildpacks-artifacts
            rebase: true
        on_failure:
          put: resource-pools
          params:
            release: resource-pools
  - name: deploy-cf
    serial_groups: [ deploy ]
    serial: true
    plan:
      - do:
        - aggregate:
          - get: deployments-buildpacks
            passed: ['generate-manifest']
            trigger: true
          - get: resource-pools
            passed: ['generate-manifest']
            trigger: true
          - get: bosh-lite
          - get: buildpacks-ci
          - get: bosh-stemcell
        - aggregate:
          - task: cf-release
            file: buildpacks-ci/tasks/checkout-cf-lts-release.yml
            params:
              RELEASE_VERSION: {{cf-version}}
          - task: cf-release-tarball
            file: buildpacks-ci/tasks/cf-bosh-release.yml
            params:
              RELEASE_VERSION: {{cf-version}}
        - put: cf-deployment
          params:
            manifest: {{cf-manifest-location}}
            stemcells: ['bosh-stemcell/stemcell.tgz']
            releases:
              - cf-bosh-release-artifacts/release.tgz
        on_failure:
          put: resource-pools
          params:
            release: resource-pools
  - name: update-machete
    serial_groups: [ deploy ]
    serial: true
    plan:
      - do:
        - aggregate:
          - get: buildpacks-ci
            passed: ['deploy-cf']
            trigger: true
          - get: resource-pools
            passed: ['deploy-cf']
            trigger: true
          - get: machete
        - task: configure-deployment
          file: buildpacks-ci/tasks/machete-configure-deployment.yml
          params:
            BOSH_TARGET: {{deployment-name}}.cf-app.com
            DEPLOYMENT_NAME: {{deployment-name}}
            CI_CF_PASSWORD: {{ci-cf-password}}
            CI_CF_USERNAME: {{ci-cf-username}}
        on_failure:
          put: resource-pools
          params:
            release: resource-pools
  - name: unclaim
    serial_groups: [ deploy ]
    serial: true
    plan:
      - get: buildpacks-ci
      - get: resource-pools
        passed: [ update-machete ]
        trigger: true
      - put: resource-pools
        params:
          release: resource-pools
