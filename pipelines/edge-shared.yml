---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
  - name: cron
    type: docker-image
    source:
      repository: cfbuildpacks/cron-resource
  - name: bosh-deployment
    type: docker-image
    source:
      repository: cloudfoundry/bosh-deployment-resource
resources:
  - name: nightly-trigger
    type: cron
    source:
      expression: 0 3 * * *
      location: {{current-timezone}}

  - name: buildpacks-ci
    type: git
    source:
      uri: {{buildpacks-ci-git-uri-public}}
      branch: {{buildpacks-ci-git-uri-public-branch}}

  - name: cf-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment
      branch: master

  - name: bbl-state
    type: git
    source:
      uri: git@github.com:cloudfoundry/buildpacks-envs
      branch: master
      private_key: {{buildpacks-envs-private-key}}

  - name: edge-cf-deployment
    type: bosh-deployment
    source:
      deployment: cf
      vars_store:
        provider: gcs
        config:
          bucket: edge-cf-deployment
          file_name: vars-store.yml
          json_key: {{edge-cf-deployment-gcs-service-account-key}}

  - name: gcp-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-ubuntu-trusty-go_agent

  - name: windows2012-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-windows2012R2-go_agent

  - name: windows2016-stemcell
    type: bosh-io-stemcell
    source:
      name: bosh-google-kvm-windows2016-go_agent

  - name: failure-alert
    type: slack-notification
    source:
      url: {{concourse-job-failure-notifications-slack-webhook}}

jobs:
  - name: deploy-edge
    serial: true
    public: true
    plan:
      - do:
        - aggregate:
          - get: nightly-trigger
            trigger: true
          - get: buildpacks-ci
          - get: cf-deployment
          - get: bbl-state
          - get: windows2012-stemcell
          - get: windows2016-stemcell
          - get: gcp-stemcell
        - task: create-deployment-source-config
          file: buildpacks-ci/tasks/create-deployment-source-config/task.yml
          params:
            ENV_NAME: edge
        - put: edge-cf-deployment
          params:
            source_file: deployment-source-config/source_file.yml
            manifest: cf-deployment/cf-deployment.yml
            stemcells:
              - gcp-stemcell/*.tgz
              - windows2012-stemcell/*.tgz
              - windows2016-stemcell/*.tgz
            ops_files:
            - cf-deployment/operations/windows-cell.yml
            - cf-deployment/operations/windows2016-cell.yml
            - cf-deployment/operations/use-latest-windows-stemcell.yml
            - cf-deployment/operations/experimental/enable-prefer-declarative-healthchecks-windows.yml
            - cf-deployment/operations/experimental/enable-instance-identity-credentials.yml
            - cf-deployment/operations/experimental/enable-instance-identity-credentials-windows.yml
            - cf-deployment/operations/experimental/enable-instance-identity-credentials-windows2016.yml
            - cf-deployment/operations/experimental/secure-service-credentials.yml
            - cf-deployment/operations/experimental/secure-service-credentials-windows-cell.yml
            - cf-deployment/operations/experimental/secure-service-credentials-windows2016-cell.yml
            - cf-deployment/operations/experimental/enable-traffic-to-internal-networks.yml
            - cf-deployment/operations/experimental/disable-interpolate-service-bindings.yml
            - cf-deployment/operations/experimental/use-bosh-dns.yml
            - cf-deployment/operations/experimental/use-bosh-dns-for-containers.yml
            - cf-deployment/operations/experimental/use-bosh-dns-for-windows2016-containers.yml
            - buildpacks-ci/deployments/operations/no-canaries.yml
            - buildpacks-ci/deployments/edge-shared/num-cells.yml
            vars:
              system_domain: edge.buildpacks-gcp.ci.cf-app.com
        on_failure:
          put: failure-alert
          params:
            text: "$BUILD_PIPELINE_NAME $BUILD_JOB_NAME job on Concourse failed! \n Check: $ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME"
            channel: {{concourse-job-failure-notifications-slack-channel}}
            username: concourse
            icon_url: http://cl.ly/image/3e1h0H3H2s0P/concourse-logo.png
