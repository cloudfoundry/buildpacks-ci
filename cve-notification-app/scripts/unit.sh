#!/usr/bin/env bash

set -e
set -u
set -o pipefail

ROOTDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
readonly ROOTDIR

function install_ginko() {
  if [[ ! -f ".bin/ginkgo" ]]; then
    util::print::title "Installing ginkgo"

    pushd /tmp >/dev/null || return
    GOBIN="${ROOTDIR}/.bin" \
      go install github.com/onsi/ginkgo/ginkgo@latest
    popd >/dev/null || return
  fi
}

function main() {
  source "${ROOTDIR}/scripts/util/print.sh"

  install_ginko

  export ACK_GINKGO_RC=true

  pushd "${ROOTDIR}/utils" >/dev/null || return
  util::print::title "Running utils tests"
  "${ROOTDIR}"/.bin/ginkgo -r -p -randomizeAllSpecs -randomizeSuites
  popd >/dev/null || return

  pushd "${ROOTDIR}/actions/fill-db/entrypoint" >/dev/null || return
  util::print::title "Running fill-db tests"
  "${ROOTDIR}"/.bin/ginkgo -r -p -randomizeAllSpecs -randomizeSuites
  popd >/dev/null || return

  pushd "${ROOTDIR}/actions/find-new-cves/entrypoint" >/dev/null || return
  util::print::title "Running find-new-cves tests"
  "${ROOTDIR}"/.bin/ginkgo -r -p -randomizeAllSpecs -randomizeSuites
  popd >/dev/null || return

  pushd "${ROOTDIR}/actions/update-tracked-deps/entrypoint" >/dev/null || return
  util::print::title "Running update-tracked-deps tests"
  "${ROOTDIR}"/.bin/ginkgo -r -p -randomizeAllSpecs -randomizeSuites
  popd >/dev/null || return
}

main "${@:-}"
