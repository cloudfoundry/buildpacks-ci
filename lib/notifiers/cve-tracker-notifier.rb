# encoding: utf-8
require_relative '../tracker-client'

class CVETrackerNotifier
  def self.notify!(cves, contents)
    return if contents[:category].match(/-unrelated$/) != nil || cves.empty?
    cve_titles = cves.map { |c| c['title'] }
    story_name = "address: #{cve_titles.join(', ')}"
    story_description = cves.map { |cve| cve['description'] }.join("\n\n--------\n\n")
    labels = %w(pm-only)

    tracker_client = TrackerClient.new(
        ENV.fetch('TRACKER_API_TOKEN'),
        ENV.fetch('TRACKER_PROJECT_ID'),
        ENV.fetch('TRACKER_REQUESTER_ID').to_i
    )

    tracker_client.post_to_tracker(
        name: story_name,
        description: story_description,
        labels: labels
    )
  end
end
