require 'yaml'
require 'date'
require 'time'
require_relative 'git-client'

class CVEHistory
  attr_accessor :cves_dir

  def self.read_yaml_cves(cves_dir, yaml_filename)
    file_path = File.join(cves_dir, yaml_filename)

    if File.exist? file_path
      YAML.load_file("#{cves_dir}/#{yaml_filename}", permitted_classes: [Date, Time]) || []
    else
      File.write(file_path, [].to_yaml)
      []
    end
  end

  def self.write_yaml_cves(cve_list, cves_dir, yaml_filename)
    raise 'received invalid CVE list to write' unless cve_list.is_a?(Array)
    raise "file '#{cves_dir}/#{yaml_filename}' not found" unless File.exist?(File.join(cves_dir, yaml_filename))

    File.write(File.join(cves_dir, yaml_filename), cve_list.to_yaml)

    Dir.chdir(cves_dir) do
      GitClient.add_everything
      GitClient.safe_commit("CVE update for #{yaml_filename}")
    end
  end
end
