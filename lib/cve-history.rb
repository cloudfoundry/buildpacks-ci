# encoding: utf-8
require 'yaml'
require_relative 'git-client'

class CVEHistory
  attr_accessor :cves_dir

  def self.read_yaml_cves(cves_dir, yaml_filename)
    file_path = File.join(cves_dir, yaml_filename)

    if File.exist? file_path
      YAML.load_file("#{cves_dir}/#{yaml_filename}") || []
    else
      File.open(file_path, 'w') { |handle| handle.write([].to_yaml) }
      []
    end
  end

  def self.write_yaml_cves(cve_list, cves_dir, yaml_filename)
    raise 'received invalid CVE list to write' unless cve_list.is_a?(Array)
    raise "file '#{cves_dir}/#{yaml_filename}' not found" unless File.exist?(File.join(cves_dir, yaml_filename))
    File.open(File.join(cves_dir, yaml_filename), 'w') { |handle| handle.write(cve_list.to_yaml) }

    Dir.chdir(cves_dir) do
      GitClient.add_everything
      raise 'command failed' unless system("git commit -m 'CVE update for #{yaml_filename}'")
    end
  end
end
