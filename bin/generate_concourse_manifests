#!/usr/bin/env bash

# set -ueo pipefail

BASE_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )"/.. >/dev/null 2>&1 && pwd )

deployment_name=${1-""}

usage() {
  echo -e "Usage: \n./bin/generate_concourse_manifests <deployment name>"
}

deployment_name=${1-""}
deployment_path=${BASE_DIR}/deployments/${deployment_name}


if [ "$deployment_name" == "" ] || [ "$deployment_name" == "help" ]; then
  usage
elif [ ! -d "$deployment_path" ]; then
  echo -e "ERROR! Deployment not found: ${deployment_path}\n"
  usage
else
  #generate concourse manifests if targeting a concourse deployment
  if [[ "$deployment_name" == *concourse* ]]; then
    ruby -rerb -ryaml -rostruct -e "lp = YAML.load(\`lpass show 'Shared-Buildpacks/deployments-buildpacks.yml' --notes\`); puts ERB.new(\`cat $deployment_path/manifest.yml.erb\`).result(OpenStruct.new(lp).instance_eval {binding})" > "$deployment_path/manifest.yml"
    if [ -f "$deployment_path/cloud.yml.erb" ]; then
      ruby -rerb -ryaml -rostruct -e "lp = YAML.load(\`lpass show 'Shared-Buildpacks/deployments-buildpacks.yml' --notes\`); puts ERB.new(\`cat $deployment_path/cloud.yml.erb\`).result(OpenStruct.new(lp).instance_eval {binding})" > "$deployment_path/cloud.yml"
    fi
  fi
fi
